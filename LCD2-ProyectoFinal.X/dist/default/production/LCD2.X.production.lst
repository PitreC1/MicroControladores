

HI-TECH Software PIC LITE Macro Assembler V1.00 build 12136 
                                                                                               Tue Mar 15 12:53:14 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 12136
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 12136"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 8 "keypad_lcd_main.c"
    43                           psect config,class=CONFIG,delta=2 ;# 
    44                           # 8 "keypad_lcd_main.c"
    45  2007  E0D5               dw 0xFFFD & 0xFFF7 & 0xFFFF & 0xFFDF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFBFF & 0xF7FF & 0xEF
                                 FF ;# 
    46                           # 9 "keypad_lcd_main.c"
    47                           psect config,class=CONFIG,delta=2 ;# 
    48                           # 9 "keypad_lcd_main.c"
    49  2008  FFFF               dw 0xFFFF & 0xFFFF ;# 
    50                           	FNCALL	_main,_LCD_Init
    51                           	FNCALL	_main,_LCD_Clear
    52                           	FNCALL	_main,_LCD_String_xy
    53                           	FNCALL	_main,_Secuencia_Clave
    54                           	FNCALL	_main,_Logica_SensoresHall
    55                           	FNCALL	_LCD_Init,_LCD_Command
    56                           	FNCALL	_Logica_SensoresHall,_LCD_String_xy
    57                           	FNCALL	_Logica_SensoresHall,_LCD_Command
    58                           	FNCALL	_Logica_SensoresHall,_LCD_String
    59                           	FNCALL	_Logica_SensoresHall,_LCD_Clear
    60                           	FNCALL	_Logica_SensoresHall,_Secuencia_Clave
    61                           	FNCALL	_Secuencia_Clave,_LCD_String_xy
    62                           	FNCALL	_Secuencia_Clave,_keyfind
    63                           	FNCALL	_Secuencia_Clave,_LCD_Command
    64                           	FNCALL	_Secuencia_Clave,_LCD_Char
    65                           	FNCALL	_Secuencia_Clave,_strcmp
    66                           	FNCALL	_Secuencia_Clave,_LCD_Clear
    67                           	FNCALL	_Secuencia_Clave,_LCD_String
    68                           	FNCALL	_LCD_Clear,_LCD_Command
    69                           	FNCALL	_LCD_String_xy,_LCD_Command
    70                           	FNCALL	_LCD_String_xy,_LCD_String
    71                           	FNCALL	_LCD_String,_LCD_Char
    72                           	FNROOT	_main
    73                           	global	_keypad
    74                           	global	_password
    75                           psect	idataBANK0,class=CODE,space=0,delta=2
    76                           global __pidataBANK0
    77  0323                     __pidataBANK0:
    78                           	file	"keypad.c"
    79                           	line	15
    80                           
    81                           ;initializer for _keypad
    82  0323  3431               	retlw	031h
    83  0324  3432               	retlw	032h
    84  0325  3433               	retlw	033h
    85  0326  3441               	retlw	041h
    86  0327  3434               	retlw	034h
    87  0328  3435               	retlw	035h
    88  0329  3436               	retlw	036h
    89  032A  3442               	retlw	042h
    90  032B  3437               	retlw	037h
    91  032C  3438               	retlw	038h
    92  032D  3439               	retlw	039h
    93  032E  3443               	retlw	043h
    94  032F  342A               	retlw	02Ah
    95  0330  3430               	retlw	030h
    96  0331  3423               	retlw	023h
    97  0332  3444               	retlw	044h
    98                           	file	"keypad_lcd_main.c"
    99                           	line	14
   100                           
   101                           ;initializer for _password
   102  0333  3432               	retlw	032h
   103  0334  3430               	retlw	030h
   104  0335  3432               	retlw	032h
   105  0336  3431               	retlw	031h
   106  0337  3400               	retlw	0
   107                           	global	Keypad_Key_Press@keypad_deco
   108                           psect	strings,class=STRING,delta=2
   109                           global __pstrings
   110  0003                     __pstrings:
   111                           ;	global	stringdir,stringtab,__stringbase
   112  0003                     stringtab:
   113                           ;	String table - string pointers are 1 byte each
   114  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   115  0003  3000               movlw high(stringdir)
   116  0004  008A               movwf pclath
   117  0005  0804               movf fsr,w
   118  0006  0A84               incf fsr
   119  0007  0782               	addwf pc
   120  0008                     __stringbase:
   121  0008  3400               	retlw	0
   122                           psect	strings
   123                           	file	"keypad.c"
   124                           	line	21
   125  0009                     Keypad_Key_Press@keypad_deco:
   126  0009  3431               	retlw	031h
   127  000A  3432               	retlw	032h
   128  000B  3433               	retlw	033h
   129  000C  3441               	retlw	041h
   130  000D  3434               	retlw	034h
   131  000E  3435               	retlw	035h
   132  000F  3436               	retlw	036h
   133  0010  3442               	retlw	042h
   134  0011  3437               	retlw	037h
   135  0012  3438               	retlw	038h
   136  0013  3439               	retlw	039h
   137  0014  3443               	retlw	043h
   138  0015  342A               	retlw	02Ah
   139  0016  3430               	retlw	030h
   140  0017  3423               	retlw	023h
   141  0018  3444               	retlw	044h
   142  0019  3400               	retlw	0
   143                           	global	Keypad_Key_Press@keypad_deco
   144                           	global	_col_loc
   145                           	global	_key_temp
   146                           	global	_ok_count
   147                           	global	_wrong_count
   148                           	global	_idx
   149                           	global	_key
   150                           	global	_rowloc
   151                           	global	_temp_col
   152                           	global	_value_pass
   153                           	global	_value_passU
   154                           	global	_pass_user
   155                           	global	_PORTA
   156  0005                     _PORTA	set	0x5
   157                           	global	_PORTAbits
   158  0005                     _PORTAbits	set	0x5
   159                           	global	_PORTB
   160  0006                     _PORTB	set	0x6
   161                           	global	_PORTBbits
   162  0006                     _PORTBbits	set	0x6
   163                           	global	_PORTC
   164  0007                     _PORTC	set	0x7
   165                           	global	_PORTCbits
   166  0007                     _PORTCbits	set	0x7
   167                           	global	_PORTD
   168  0008                     _PORTD	set	0x8
   169                           	global	_PORTDbits
   170  0008                     _PORTDbits	set	0x8
   171                           	global	_OPTION_REGbits
   172  0081                     _OPTION_REGbits	set	0x81
   173                           	global	_OSCCON
   174  008F                     _OSCCON	set	0x8F
   175                           	global	_TRISA
   176  0085                     _TRISA	set	0x85
   177                           	global	_TRISB
   178  0086                     _TRISB	set	0x86
   179                           	global	_TRISC
   180  0087                     _TRISC	set	0x87
   181                           	global	_TRISD
   182  0088                     _TRISD	set	0x88
   183                           	global	_ANSEL
   184  0188                     _ANSEL	set	0x188
   185                           	global	_ANSELH
   186  0189                     _ANSELH	set	0x189
   187                           	
   188  001A                     STR_6:	
   189  001A  3444               	retlw	68	;'D'
   190  001B  3465               	retlw	101	;'e'
   191  001C  3462               	retlw	98	;'b'
   192  001D  3465               	retlw	101	;'e'
   193  001E  3420               	retlw	32	;' '
   194  001F  3452               	retlw	82	;'R'
   195  0020  3465               	retlw	101	;'e'
   196  0021  3469               	retlw	105	;'i'
   197  0022  346E               	retlw	110	;'n'
   198  0023  3469               	retlw	105	;'i'
   199  0024  3463               	retlw	99	;'c'
   200  0025  3469               	retlw	105	;'i'
   201  0026  3461               	retlw	97	;'a'
   202  0027  3472               	retlw	114	;'r'
   203  0028  3400               	retlw	0
   204                           psect	strings
   205                           	
   206  0029                     STR_5:	
   207  0029  3443               	retlw	67	;'C'
   208  002A  346C               	retlw	108	;'l'
   209  002B  3461               	retlw	97	;'a'
   210  002C  3476               	retlw	118	;'v'
   211  002D  3465               	retlw	101	;'e'
   212  002E  3420               	retlw	32	;' '
   213  002F  3445               	retlw	69	;'E'
   214  0030  3472               	retlw	114	;'r'
   215  0031  3472               	retlw	114	;'r'
   216  0032  346F               	retlw	111	;'o'
   217  0033  346E               	retlw	110	;'n'
   218  0034  3465               	retlw	101	;'e'
   219  0035  3461               	retlw	97	;'a'
   220  0036  3400               	retlw	0
   221                           psect	strings
   222                           	
   223  0037                     STR_4:	
   224  0037  3449               	retlw	73	;'I'
   225  0038  346E               	retlw	110	;'n'
   226  0039  3467               	retlw	103	;'g'
   227  003A  3472               	retlw	114	;'r'
   228  003B  3465               	retlw	101	;'e'
   229  003C  3473               	retlw	115	;'s'
   230  003D  3465               	retlw	101	;'e'
   231  003E  3420               	retlw	32	;' '
   232  003F  3443               	retlw	67	;'C'
   233  0040  346C               	retlw	108	;'l'
   234  0041  3461               	retlw	97	;'a'
   235  0042  3476               	retlw	118	;'v'
   236  0043  3465               	retlw	101	;'e'
   237  0044  3400               	retlw	0
   238                           psect	strings
   239                           	
   240  0045                     STR_2:	
   241  0045  3454               	retlw	84	;'T'
   242  0046  346F               	retlw	111	;'o'
   243  0047  3464               	retlw	100	;'d'
   244  0048  346F               	retlw	111	;'o'
   245  0049  3420               	retlw	32	;' '
   246  004A  3465               	retlw	101	;'e'
   247  004B  346E               	retlw	110	;'n'
   248  004C  3420               	retlw	32	;' '
   249  004D  344F               	retlw	79	;'O'
   250  004E  3472               	retlw	114	;'r'
   251  004F  3464               	retlw	100	;'d'
   252  0050  3465               	retlw	101	;'e'
   253  0051  346E               	retlw	110	;'n'
   254  0052  3400               	retlw	0
   255                           psect	strings
   256                           	
   257  0053                     STR_9:	
   258  0053  3445               	retlw	69	;'E'
   259  0054  346E               	retlw	110	;'n'
   260  0055  3420               	retlw	32	;' '
   261  0056  3453               	retlw	83	;'S'
   262  0057  3465               	retlw	101	;'e'
   263  0058  346E               	retlw	110	;'n'
   264  0059  3473               	retlw	115	;'s'
   265  005A  346F               	retlw	111	;'o'
   266  005B  3472               	retlw	114	;'r'
   267  005C  3465               	retlw	101	;'e'
   268  005D  3473               	retlw	115	;'s'
   269  005E  3400               	retlw	0
   270                           psect	strings
   271                           	
   272  005F                     STR_7:	
   273  005F  3445               	retlw	69	;'E'
   274  0060  346C               	retlw	108	;'l'
   275  0061  3420               	retlw	32	;' '
   276  0062  3453               	retlw	83	;'S'
   277  0063  3469               	retlw	105	;'i'
   278  0064  3473               	retlw	115	;'s'
   279  0065  3474               	retlw	116	;'t'
   280  0066  3465               	retlw	101	;'e'
   281  0067  346D               	retlw	109	;'m'
   282  0068  3461               	retlw	97	;'a'
   283  0069  3400               	retlw	0
   284                           psect	strings
   285                           	
   286  006A                     STR_1:	
   287  006A  3442               	retlw	66	;'B'
   288  006B  3469               	retlw	105	;'i'
   289  006C  3465               	retlw	101	;'e'
   290  006D  346E               	retlw	110	;'n'
   291  006E  3476               	retlw	118	;'v'
   292  006F  3465               	retlw	101	;'e'
   293  0070  346E               	retlw	110	;'n'
   294  0071  3469               	retlw	105	;'i'
   295  0072  3464               	retlw	100	;'d'
   296  0073  346F               	retlw	111	;'o'
   297  0074  3400               	retlw	0
   298                           psect	strings
   299                           	
   300  0075                     STR_8:	
   301  0075  3444               	retlw	68	;'D'
   302  0076  3465               	retlw	101	;'e'
   303  0077  3474               	retlw	116	;'t'
   304  0078  3465               	retlw	101	;'e'
   305  0079  3463               	retlw	99	;'c'
   306  007A  3463               	retlw	99	;'c'
   307  007B  3469               	retlw	105	;'i'
   308  007C  346F               	retlw	111	;'o'
   309  007D  346E               	retlw	110	;'n'
   310  007E  3400               	retlw	0
   311                           psect	strings
   312                           	
   313  007F                     STR_11:	
   314  007F  3453               	retlw	83	;'S'
   315  0080  3465               	retlw	101	;'e'
   316  0081  346E               	retlw	110	;'n'
   317  0082  3473               	retlw	115	;'s'
   318  0083  346F               	retlw	111	;'o'
   319  0084  3472               	retlw	114	;'r'
   320  0085  3420               	retlw	32	;' '
   321  0086  3431               	retlw	49	;'1'
   322  0087  3400               	retlw	0
   323                           psect	strings
   324                           	
   325  0088                     STR_13:	
   326  0088  3453               	retlw	83	;'S'
   327  0089  3465               	retlw	101	;'e'
   328  008A  346E               	retlw	110	;'n'
   329  008B  3473               	retlw	115	;'s'
   330  008C  346F               	retlw	111	;'o'
   331  008D  3472               	retlw	114	;'r'
   332  008E  3420               	retlw	32	;' '
   333  008F  3432               	retlw	50	;'2'
   334  0090  3400               	retlw	0
   335                           psect	strings
   336                           	
   337  0091                     STR_3:	
   338  0091  3450               	retlw	80	;'P'
   339  0092  3465               	retlw	101	;'e'
   340  0093  346C               	retlw	108	;'l'
   341  0094  3469               	retlw	105	;'i'
   342  0095  3467               	retlw	103	;'g'
   343  0096  3472               	retlw	114	;'r'
   344  0097  346F               	retlw	111	;'o'
   345  0098  3400               	retlw	0
   346                           psect	strings
   347  0075                     STR_10	equ	STR_8+0
   348  0075                     STR_12	equ	STR_8+0
   349                           	file	"C:\Users\CARLOS~1\AppData\Local\Temp\s95s."
   350                           	line	#
   351                           psect cinit,class=CODE,delta=2
   352                           global start_initialization
   353  0338                     start_initialization:
   354                           
   355                           psect	bssCOMMON,class=COMMON,space=1
   356                           global __pbssCOMMON
   357  007D                     __pbssCOMMON:
   358  007D                     _col_loc:
   359  007D                            ds      1
   360                           
   361                           psect	bssBANK0,class=BANK0,space=1
   362                           global __pbssBANK0
   363  0035                     __pbssBANK0:
   364  0035                     _key_temp:
   365  0035                            ds      5
   366                           
   367  003A                     _ok_count:
   368  003A                            ds      2
   369                           
   370  003C                     _wrong_count:
   371  003C                            ds      2
   372                           
   373  003E                     _idx:
   374  003E                            ds      1
   375                           
   376  003F                     _key:
   377  003F                            ds      1
   378                           
   379  0040                     _rowloc:
   380  0040                            ds      1
   381                           
   382  0041                     _temp_col:
   383  0041                            ds      1
   384                           
   385  0042                     _value_pass:
   386  0042                            ds      1
   387                           
   388  0043                     _value_passU:
   389  0043                            ds      1
   390                           
   391  0044                     _pass_user:
   392  0044                            ds      5
   393                           
   394                           psect	dataBANK0,class=BANK0,space=1
   395                           global __pdataBANK0
   396  0020                     __pdataBANK0:
   397                           	file	"keypad.c"
   398                           	line	15
   399  0020                     _keypad:
   400  0020                            ds      16
   401                           
   402                           psect	dataBANK0
   403                           	file	"keypad_lcd_main.c"
   404                           	line	14
   405  0030                     _password:
   406  0030                            ds      5
   407                           
   408                           psect clrtext,class=CODE,delta=2
   409                           global clear_ram
   410                           ;	Called with FSR containing the base address, and
   411                           ;	W with the last address+1
   412  0308                     clear_ram:
   413  0308  0064               	clrwdt			;clear the watchdog before getting into this loop
   414  0309                     clrloop:
   415  0309  0180               	clrf	indf		;clear RAM location pointed to by FSR
   416  030A  0A84               	incf	fsr,f		;increment pointer
   417  030B  0604               	xorwf	fsr,w		;XOR with final address
   418  030C  1903               	btfsc	status,2	;have we reached the end yet?
   419  030D  3400               	retlw	0		;all done for this memory range, return
   420  030E  0604               	xorwf	fsr,w		;XOR again to restore value
   421  030F  2B09               	goto	clrloop		;do the next byte
   422                           
   423                           ; Clear objects allocated to COMMON
   424                           psect cinit,class=CODE,delta=2,merge=1
   425  0338  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   426                           ; Clear objects allocated to BANK0
   427                           psect cinit,class=CODE,delta=2,merge=1
   428  0339  1383               	bcf	status, 7	;select IRP bank0
   429  033A  3035               	movlw	low(__pbssBANK0)
   430  033B  0084               	movwf	fsr
   431  033C  3049               	movlw	low((__pbssBANK0)+014h)
   432  033D  120A  118A  2308   	fcall	clear_ram
              120A  118A         
   433                           global btemp
   434                           psect inittext,class=CODE,delta=2
   435                           global init_fetch,btemp
   436                           ;	Called with low address in FSR and high address in W
   437  0310                     init_fetch:
   438  0310  087E               	movf btemp,w
   439  0311  008A               	movwf pclath
   440  0312  087F               	movf btemp+1,w
   441  0313  0082               	movwf pc
   442                           global init_ram
   443                           ;Called with:
   444                           ;	high address of idata address in btemp 
   445                           ;	low address of idata address in btemp+1 
   446                           ;	low address of data in FSR
   447                           ;	high address + 1 of data in btemp-1
   448  0314                     init_ram:
   449  0314  120A  118A  2310   	fcall init_fetch
              120A  118A         
   450  0319  0080               	movwf indf,f
   451  031A  0A84               	incf fsr,f
   452  031B  0804               	movf fsr,w
   453  031C  067D               	xorwf btemp-1,w
   454  031D  1903               	btfsc status,2
   455  031E  3400               	retlw 0
   456  031F  0AFF               	incf btemp+1,f
   457  0320  1903               	btfsc status,2
   458  0321  0AFE               	incf btemp,f
   459  0322  2B14               	goto init_ram
   460                           ; Initialize objects allocated to BANK0
   461                           psect cinit,class=CODE,delta=2,merge=1
   462                           global init_ram, __pidataBANK0
   463  0342  3035               	movlw low(__pdataBANK0+21)
   464  0343  00FD               	movwf btemp-1,f
   465  0344  3003               	movlw high(__pidataBANK0)
   466  0345  00FE               	movwf btemp,f
   467  0346  3023               	movlw low(__pidataBANK0)
   468  0347  00FF               	movwf btemp+1,f
   469  0348  3020               	movlw low(__pdataBANK0)
   470  0349  0084               	movwf fsr,f
   471  034A  120A  118A  2314   	fcall init_ram
              120A  118A         
   472                           psect cinit,class=CODE,delta=2,merge=1
   473                           global end_of_initialization
   474                           
   475                           ;End of C runtime variable initialization code
   476                           
   477  034F                     end_of_initialization:
   478  034F  0183               clrf status
   479  0350  120A  118A  2D11   ljmp _main	;jump to C main() function
   480                           psect	cstackCOMMON,class=COMMON,space=1
   481                           global __pcstackCOMMON
   482  0070                     __pcstackCOMMON:
   483                           	global	?_LCD_Init
   484  0070                     ?_LCD_Init:	; 0 bytes @ 0x0
   485                           	global	?_LCD_Clear
   486  0070                     ?_LCD_Clear:	; 0 bytes @ 0x0
   487                           	global	??_keyfind
   488  0070                     ??_keyfind:	; 0 bytes @ 0x0
   489                           	global	?_LCD_Command
   490  0070                     ?_LCD_Command:	; 0 bytes @ 0x0
   491                           	global	??_LCD_Command
   492  0070                     ??_LCD_Command:	; 0 bytes @ 0x0
   493                           	global	?_LCD_Char
   494  0070                     ?_LCD_Char:	; 0 bytes @ 0x0
   495                           	global	??_LCD_Char
   496  0070                     ??_LCD_Char:	; 0 bytes @ 0x0
   497                           	global	?_LCD_String
   498  0070                     ?_LCD_String:	; 0 bytes @ 0x0
   499                           	global	?_main
   500  0070                     ?_main:	; 0 bytes @ 0x0
   501                           	global	?_keyfind
   502  0070                     ?_keyfind:	; 1 bytes @ 0x0
   503                           	global	?_Secuencia_Clave
   504  0070                     ?_Secuencia_Clave:	; 2 bytes @ 0x0
   505                           	global	?_Logica_SensoresHall
   506  0070                     ?_Logica_SensoresHall:	; 2 bytes @ 0x0
   507                           	global	?_strcmp
   508  0070                     ?_strcmp:	; 2 bytes @ 0x0
   509                           	global	strcmp@s2
   510  0070                     strcmp@s2:	; 1 bytes @ 0x0
   511  0070                     	ds	2
   512                           	global	??_strcmp
   513  0072                     ??_strcmp:	; 0 bytes @ 0x2
   514                           	global	LCD_Command@cmd
   515  0072                     LCD_Command@cmd:	; 1 bytes @ 0x2
   516                           	global	LCD_Char@dat
   517  0072                     LCD_Char@dat:	; 1 bytes @ 0x2
   518  0072                     	ds	1
   519                           	global	??_LCD_Init
   520  0073                     ??_LCD_Init:	; 0 bytes @ 0x3
   521                           	global	??_LCD_Clear
   522  0073                     ??_LCD_Clear:	; 0 bytes @ 0x3
   523                           	global	??_LCD_String
   524  0073                     ??_LCD_String:	; 0 bytes @ 0x3
   525  0073                     	ds	1
   526                           	global	LCD_String@msg
   527  0074                     LCD_String@msg:	; 1 bytes @ 0x4
   528                           	global	strcmp@r
   529  0074                     strcmp@r:	; 1 bytes @ 0x4
   530  0074                     	ds	1
   531                           	global	?_LCD_String_xy
   532  0075                     ?_LCD_String_xy:	; 0 bytes @ 0x5
   533                           	global	LCD_String_xy@pos
   534  0075                     LCD_String_xy@pos:	; 1 bytes @ 0x5
   535                           	global	strcmp@s1
   536  0075                     strcmp@s1:	; 1 bytes @ 0x5
   537  0075                     	ds	1
   538                           	global	LCD_String_xy@msg
   539  0076                     LCD_String_xy@msg:	; 1 bytes @ 0x6
   540  0076                     	ds	1
   541                           	global	??_LCD_String_xy
   542  0077                     ??_LCD_String_xy:	; 0 bytes @ 0x7
   543  0077                     	ds	1
   544                           	global	LCD_String_xy@row
   545  0078                     LCD_String_xy@row:	; 1 bytes @ 0x8
   546  0078                     	ds	1
   547                           	global	LCD_String_xy@location
   548  0079                     LCD_String_xy@location:	; 1 bytes @ 0x9
   549  0079                     	ds	1
   550                           	global	??_Secuencia_Clave
   551  007A                     ??_Secuencia_Clave:	; 0 bytes @ 0xA
   552  007A                     	ds	3
   553                           psect	cstackBANK0,class=BANK0,space=1
   554                           global __pcstackBANK0
   555  0049                     __pcstackBANK0:
   556                           	global	Secuencia_Clave@i
   557  0049                     Secuencia_Clave@i:	; 2 bytes @ 0x0
   558  0049                     	ds	2
   559                           	global	??_Logica_SensoresHall
   560  004B                     ??_Logica_SensoresHall:	; 0 bytes @ 0x2
   561  004B                     	ds	3
   562                           	global	??_main
   563  004E                     ??_main:	; 0 bytes @ 0x5
   564  004E                     	ds	3
   565                           ;!
   566                           ;!Data Sizes:
   567                           ;!    Strings     127
   568                           ;!    Constant    17
   569                           ;!    Data        21
   570                           ;!    BSS         21
   571                           ;!    Persistent  0
   572                           ;!    Stack       0
   573                           ;!
   574                           ;!Auto Spaces:
   575                           ;!    Space          Size  Autos    Used
   576                           ;!    COMMON           14     13      14
   577                           ;!    BANK0            80      8      49
   578                           ;!    BANK1            80      0       0
   579                           ;!    BANK3            96      0       0
   580                           ;!    BANK2            96      0       0
   581                           
   582                           ;!
   583                           ;!Pointer List with Targets:
   584                           ;!
   585                           ;!    ?_strcmp	int  size(1) Largest target is 0
   586                           ;!
   587                           ;!    strcmp@s2	PTR const unsigned char  size(1) Largest target is 5
   588                           ;!		 -> password(BANK0[5]), 
   589                           ;!
   590                           ;!    strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
   591                           ;!		 -> pass_user(BANK0[5]), 
   592                           ;!
   593                           ;!    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 15
   594                           ;!		 -> STR_12(CODE[10]), STR_10(CODE[10]), STR_8(CODE[10]), STR_6(CODE[15]), 
   595                           ;!		 -> STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[8]), STR_2(CODE[14]), 
   596                           ;!		 -> STR_1(CODE[11]), 
   597                           ;!
   598                           ;!    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 15
   599                           ;!		 -> STR_13(CODE[9]), STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[10]), 
   600                           ;!		 -> STR_9(CODE[12]), STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[15]), 
   601                           ;!		 -> STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[8]), STR_2(CODE[14]), 
   602                           ;!		 -> STR_1(CODE[11]), 
   603                           ;!
   604                           
   605                           
   606                           ;!
   607                           ;!Critical Paths under _main in COMMON
   608                           ;!
   609                           ;!    _main->_Secuencia_Clave
   610                           ;!    _LCD_Init->_LCD_Command
   611                           ;!    _Logica_SensoresHall->_Secuencia_Clave
   612                           ;!    _Secuencia_Clave->_LCD_String_xy
   613                           ;!    _LCD_Clear->_LCD_Command
   614                           ;!    _LCD_String_xy->_LCD_String
   615                           ;!    _LCD_String->_LCD_Char
   616                           ;!
   617                           ;!Critical Paths under _main in BANK0
   618                           ;!
   619                           ;!    _main->_Logica_SensoresHall
   620                           ;!    _Logica_SensoresHall->_Secuencia_Clave
   621                           ;!
   622                           ;!Critical Paths under _main in BANK1
   623                           ;!
   624                           ;!    None.
   625                           ;!
   626                           ;!Critical Paths under _main in BANK3
   627                           ;!
   628                           ;!    None.
   629                           ;!
   630                           ;!Critical Paths under _main in BANK2
   631                           ;!
   632                           ;!    None.
   633                           
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   636 ;;
   637                           
   638                           ;!
   639                           ;!Call Graph Tables:
   640                           ;!
   641                           ;! ---------------------------------------------------------------------------------
   642                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   643                           ;! ---------------------------------------------------------------------------------
   644                           ;! (0) _main                                                 3     3      0    2093
   645                           ;!                                              5 BANK0      3     3      0
   646                           ;!                           _LCD_Init
   647                           ;!                          _LCD_Clear
   648                           ;!                      _LCD_String_xy
   649                           ;!                    _Secuencia_Clave
   650                           ;!                _Logica_SensoresHall
   651                           ;! ---------------------------------------------------------------------------------
   652                           ;! (1) _LCD_Init                                             2     2      0      44
   653                           ;!                                              3 COMMON     2     2      0
   654                           ;!                        _LCD_Command
   655                           ;! ---------------------------------------------------------------------------------
   656                           ;! (1) _Logica_SensoresHall                                  3     3      0    1091
   657                           ;!                                              2 BANK0      3     3      0
   658                           ;!                      _LCD_String_xy
   659                           ;!                        _LCD_Command
   660                           ;!                         _LCD_String
   661                           ;!                          _LCD_Clear
   662                           ;!                    _Secuencia_Clave
   663                           ;! ---------------------------------------------------------------------------------
   664                           ;! (2) _Secuencia_Clave                                      5     5      0     646
   665                           ;!                                             10 COMMON     3     3      0
   666                           ;!                                              0 BANK0      2     2      0
   667                           ;!                      _LCD_String_xy
   668                           ;!                            _keyfind
   669                           ;!                        _LCD_Command
   670                           ;!                           _LCD_Char
   671                           ;!                             _strcmp
   672                           ;!                          _LCD_Clear
   673                           ;!                         _LCD_String
   674                           ;! ---------------------------------------------------------------------------------
   675                           ;! (3) _LCD_Clear                                            0     0      0      44
   676                           ;!                        _LCD_Command
   677                           ;! ---------------------------------------------------------------------------------
   678                           ;! (3) _LCD_String_xy                                        5     3      2     268
   679                           ;!                                              5 COMMON     5     3      2
   680                           ;!                        _LCD_Command
   681                           ;!                         _LCD_String
   682                           ;! ---------------------------------------------------------------------------------
   683                           ;! (4) _LCD_Command                                          3     3      0      44
   684                           ;!                                              0 COMMON     3     3      0
   685                           ;! ---------------------------------------------------------------------------------
   686                           ;! (3) _keyfind                                              4     4      0       0
   687                           ;!                                              0 COMMON     3     3      0
   688                           ;! ---------------------------------------------------------------------------------
   689                           ;! (3) _strcmp                                               6     4      2      89
   690                           ;!                                              0 COMMON     6     4      2
   691                           ;! ---------------------------------------------------------------------------------
   692                           ;! (3) _LCD_String                                           2     2      0      89
   693                           ;!                                              3 COMMON     2     2      0
   694                           ;!                           _LCD_Char
   695                           ;! ---------------------------------------------------------------------------------
   696                           ;! (4) _LCD_Char                                             3     3      0      44
   697                           ;!                                              0 COMMON     3     3      0
   698                           ;! ---------------------------------------------------------------------------------
   699                           ;! Estimated maximum stack depth 4
   700                           ;! ---------------------------------------------------------------------------------
   701                           ;!
   702                           ;! Call Graph Graphs:
   703                           ;!
   704                           ;! _main (ROOT)
   705                           ;!   _LCD_Init
   706                           ;!     _LCD_Command
   707                           ;!   _LCD_Clear
   708                           ;!     _LCD_Command
   709                           ;!   _LCD_String_xy
   710                           ;!     _LCD_Command
   711                           ;!     _LCD_String
   712                           ;!       _LCD_Char
   713                           ;!   _Secuencia_Clave
   714                           ;!     _LCD_String_xy
   715                           ;!       _LCD_Command
   716                           ;!       _LCD_String
   717                           ;!         _LCD_Char
   718                           ;!     _keyfind
   719                           ;!     _LCD_Command
   720                           ;!     _LCD_Char
   721                           ;!     _strcmp
   722                           ;!     _LCD_Clear
   723                           ;!       _LCD_Command
   724                           ;!     _LCD_String
   725                           ;!       _LCD_Char
   726                           ;!   _Logica_SensoresHall
   727                           ;!     _LCD_String_xy
   728                           ;!       _LCD_Command
   729                           ;!       _LCD_String
   730                           ;!         _LCD_Char
   731                           ;!     _LCD_Command
   732                           ;!     _LCD_String
   733                           ;!       _LCD_Char
   734                           ;!     _LCD_Clear
   735                           ;!       _LCD_Command
   736                           ;!     _Secuencia_Clave
   737                           ;!       _LCD_String_xy
   738                           ;!         _LCD_Command
   739                           ;!         _LCD_String
   740                           ;!           _LCD_Char
   741                           ;!       _keyfind
   742                           ;!       _LCD_Command
   743                           ;!       _LCD_Char
   744                           ;!       _strcmp
   745                           ;!       _LCD_Clear
   746                           ;!         _LCD_Command
   747                           ;!       _LCD_String
   748                           ;!         _LCD_Char
   749                           ;!
   750                           
   751                           ;! Address spaces:
   752                           
   753                           ;!Name               Size   Autos  Total    Cost      Usage
   754                           ;!BANK3               60      0       0       9        0.0%
   755                           ;!BITBANK3            60      0       0       8        0.0%
   756                           ;!SFR3                 0      0       0       4        0.0%
   757                           ;!BITSFR3              0      0       0       4        0.0%
   758                           ;!BANK2               60      0       0      11        0.0%
   759                           ;!BITBANK2            60      0       0      10        0.0%
   760                           ;!SFR2                 0      0       0       5        0.0%
   761                           ;!BITSFR2              0      0       0       5        0.0%
   762                           ;!BANK1               50      0       0       7        0.0%
   763                           ;!BITBANK1            50      0       0       6        0.0%
   764                           ;!SFR1                 0      0       0       2        0.0%
   765                           ;!BITSFR1              0      0       0       2        0.0%
   766                           ;!BANK0               50      8      31       5       61.3%
   767                           ;!BITBANK0            50      0       0       4        0.0%
   768                           ;!SFR0                 0      0       0       1        0.0%
   769                           ;!BITSFR0              0      0       0       1        0.0%
   770                           ;!COMMON               E      D       E       1      100.0%
   771                           ;!BITCOMMON            E      0       0       0        0.0%
   772                           ;!CODE                 0      0       0       0        0.0%
   773                           ;!DATA                 0      0      44      12        0.0%
   774                           ;!ABS                  0      0      3F       3        0.0%
   775                           ;!NULL                 0      0       0       0        0.0%
   776                           ;!STACK                0      0       5       2        0.0%
   777                           ;!EEDATA             100      0       0       0        0.0%
   778                           
   779                           	global	_main
   780                           
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 27 in file "keypad_lcd_main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;		None               void
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 17F/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       3       0       0       0
   800 ;;      Totals:         0       3       0       0       0
   801 ;;Total ram usage:        3 bytes
   802 ;; Hardware stack levels required when called:    5
   803 ;; This function calls:
   804 ;;		_LCD_Init
   805 ;;		_LCD_Clear
   806 ;;		_LCD_String_xy
   807 ;;		_Secuencia_Clave
   808 ;;		_Logica_SensoresHall
   809 ;; This function is called by:
   810 ;;		Startup code after reset
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           psect	maintext,global,class=CODE,delta=2,split=1
   814                           global __pmaintext
   815  0511                     __pmaintext:
   816                           psect	maintext
   817                           	file	"keypad_lcd_main.c"
   818                           	line	27
   819                           	global	__size_of_main
   820  00C2                     	__size_of_main	equ	__end_of_main-_main
   821                           	
   822  0511                     _main:	
   823                           	opt	stack 3
   824                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   825                           	line	29
   826                           	
   827  0511                     l1374:	
   828                           ;keypad_lcd_main.c: 29: OSCCON = 0x61;
   829  0511  3061               	movlw	(061h)
   830  0512  1683               	bsf	status, 5	;RP0=1, select bank1
   831  0513  1303               	bcf	status, 6	;RP1=0, select bank1
   832  0514  008F               	movwf	(143)^080h	;volatile
   833                           	line	33
   834                           	
   835  0515                     l1376:	
   836                           ;keypad_lcd_main.c: 33: ANSELH =0x00;
   837  0515  1683               	bsf	status, 5	;RP0=1, select bank3
   838  0516  1703               	bsf	status, 6	;RP1=1, select bank3
   839  0517  0189               	clrf	(393)^0180h	;volatile
   840                           	line	34
   841                           	
   842  0518                     l1378:	
   843                           ;keypad_lcd_main.c: 34: ANSEL=0x00;
   844  0518  0188               	clrf	(392)^0180h	;volatile
   845                           	line	37
   846                           	
   847  0519                     l1380:	
   848                           ;keypad_lcd_main.c: 37: TRISD = 0x00;
   849  0519  1683               	bsf	status, 5	;RP0=1, select bank1
   850  051A  1303               	bcf	status, 6	;RP1=0, select bank1
   851  051B  0188               	clrf	(136)^080h	;volatile
   852                           	line	38
   853                           	
   854  051C                     l1382:	
   855                           ;keypad_lcd_main.c: 38: TRISA = 0x01;
   856  051C  3001               	movlw	(01h)
   857  051D  0085               	movwf	(133)^080h	;volatile
   858                           	line	39
   859                           ;keypad_lcd_main.c: 39: TRISC = 0x00;
   860  051E  0187               	clrf	(135)^080h	;volatile
   861                           	line	40
   862                           ;keypad_lcd_main.c: 40: PORTC = 0x00;
   863  051F  1283               	bcf	status, 5	;RP0=0, select bank0
   864  0520  1303               	bcf	status, 6	;RP1=0, select bank0
   865  0521  0187               	clrf	(7)	;volatile
   866                           	line	41
   867                           ;keypad_lcd_main.c: 41: PORTA = 0x00;
   868  0522  0185               	clrf	(5)	;volatile
   869                           	line	43
   870                           	
   871  0523                     l1384:	
   872                           ;keypad_lcd_main.c: 43: OPTION_REGbits.nRBPU=0;
   873  0523  1683               	bsf	status, 5	;RP0=1, select bank1
   874  0524  1303               	bcf	status, 6	;RP1=0, select bank1
   875  0525  1381               	bcf	(129)^080h,7	;volatile
   876                           	line	45
   877                           	
   878  0526                     l1386:	
   879                           ;keypad_lcd_main.c: 45: LCD_Init();
   880  0526  120A  118A  23C6   	fcall	_LCD_Init
              120A  118A         
   881                           	line	46
   882                           	
   883  052B                     l1388:	
   884                           ;keypad_lcd_main.c: 46: LCD_Clear();
   885  052B  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
   886                           	line	47
   887                           	
   888  0530                     l1390:	
   889                           ;keypad_lcd_main.c: 47: LCD_String_xy(0,0,"Bienvenido");
   890  0530  01F5               	clrf	(?_LCD_String_xy)
   891  0531  3062               	movlw	((STR_1-__stringbase))&0ffh
   892  0532  1283               	bcf	status, 5	;RP0=0, select bank0
   893  0533  1303               	bcf	status, 6	;RP1=0, select bank0
   894  0534  00CE               	movwf	(??_main+0)+0
   895  0535  084E               	movf	(??_main+0)+0,w
   896  0536  00F6               	movwf	0+(?_LCD_String_xy)+01h
   897  0537  3000               	movlw	(0)
   898  0538  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
   899                           	line	48
   900                           	
   901  053D                     l1392:	
   902                           ;keypad_lcd_main.c: 48: _delay((unsigned long)((2000)*(4000000/4000.0)));
   903                           	opt asmopt_off
   904  053D  300B               movlw  11
   905  053E  1283               	bcf	status, 5	;RP0=0, select bank0
   906  053F  1303               	bcf	status, 6	;RP1=0, select bank0
   907  0540  00D0               movwf	((??_main+0)+0+2),f
   908  0541  3026               movlw	38
   909  0542  00CF               movwf	((??_main+0)+0+1),f
   910  0543  3066               	movlw	102
   911  0544  00CE               movwf	((??_main+0)+0),f
   912  0545                     u797:
   913  0545  0BCE               	decfsz	((??_main+0)+0),f
   914  0546  2D45               	goto	u797
   915  0547  0BCF               	decfsz	((??_main+0)+0+1),f
   916  0548  2D45               	goto	u797
   917  0549  0BD0               	decfsz	((??_main+0)+0+2),f
   918  054A  2D45               	goto	u797
   919  054B  2D4C               	nop2
   920                           opt asmopt_on
   921                           
   922                           	line	49
   923                           	
   924  054C                     l1394:	
   925                           ;keypad_lcd_main.c: 49: LCD_Clear();
   926  054C  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
   927  0551  2D52               	goto	l1396
   928                           	line	51
   929                           ;keypad_lcd_main.c: 51: while(1){
   930                           	
   931  0552                     l65:	
   932                           	line	52
   933                           	
   934  0552                     l1396:	
   935                           ;keypad_lcd_main.c: 52: LCD_Clear();
   936  0552  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
   937                           	line	53
   938                           	
   939  0557                     l1398:	
   940                           ;keypad_lcd_main.c: 53: LCD_String_xy(0,0,"Todo en Orden");
   941  0557  01F5               	clrf	(?_LCD_String_xy)
   942  0558  303D               	movlw	((STR_2-__stringbase))&0ffh
   943  0559  1283               	bcf	status, 5	;RP0=0, select bank0
   944  055A  1303               	bcf	status, 6	;RP1=0, select bank0
   945  055B  00CE               	movwf	(??_main+0)+0
   946  055C  084E               	movf	(??_main+0)+0,w
   947  055D  00F6               	movwf	0+(?_LCD_String_xy)+01h
   948  055E  3000               	movlw	(0)
   949  055F  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
   950                           	line	54
   951                           	
   952  0564                     l1400:	
   953                           ;keypad_lcd_main.c: 54: PORTCbits.RC0 = 1;
   954  0564  1283               	bcf	status, 5	;RP0=0, select bank0
   955  0565  1303               	bcf	status, 6	;RP1=0, select bank0
   956  0566  1407               	bsf	(7),0	;volatile
   957                           	line	55
   958                           	
   959  0567                     l1402:	
   960                           ;keypad_lcd_main.c: 55: _delay((unsigned long)((2000)*(4000000/4000.0)));
   961                           	opt asmopt_off
   962  0567  300B               movlw  11
   963  0568  00D0               movwf	((??_main+0)+0+2),f
   964  0569  3026               movlw	38
   965  056A  00CF               movwf	((??_main+0)+0+1),f
   966  056B  3066               	movlw	102
   967  056C  00CE               movwf	((??_main+0)+0),f
   968  056D                     u807:
   969  056D  0BCE               	decfsz	((??_main+0)+0),f
   970  056E  2D6D               	goto	u807
   971  056F  0BCF               	decfsz	((??_main+0)+0+1),f
   972  0570  2D6D               	goto	u807
   973  0571  0BD0               	decfsz	((??_main+0)+0+2),f
   974  0572  2D6D               	goto	u807
   975  0573  2D74               	nop2
   976                           opt asmopt_on
   977                           
   978                           	line	56
   979                           	
   980  0574                     l1404:	
   981                           ;keypad_lcd_main.c: 56: LCD_Clear();
   982  0574  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
   983                           	line	59
   984                           	
   985  0579                     l1406:	
   986                           ;keypad_lcd_main.c: 59: if(PORTAbits.RA0 == 0){
   987  0579  1283               	bcf	status, 5	;RP0=0, select bank0
   988  057A  1303               	bcf	status, 6	;RP1=0, select bank0
   989  057B  1805               	btfsc	(5),0	;volatile
   990  057C  2D7E               	goto	u761
   991  057D  2D7F               	goto	u760
   992  057E                     u761:
   993  057E  2DB8               	goto	l66
   994  057F                     u760:
   995                           	line	60
   996                           	
   997  057F                     l1408:	
   998                           ;keypad_lcd_main.c: 60: LCD_String_xy(2,0,"Peligro");
   999  057F  01F5               	clrf	(?_LCD_String_xy)
  1000  0580  3089               	movlw	((STR_3-__stringbase))&0ffh
  1001  0581  00CE               	movwf	(??_main+0)+0
  1002  0582  084E               	movf	(??_main+0)+0,w
  1003  0583  00F6               	movwf	0+(?_LCD_String_xy)+01h
  1004  0584  3002               	movlw	(02h)
  1005  0585  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
  1006                           	line	61
  1007                           	
  1008  058A                     l1410:	
  1009                           ;keypad_lcd_main.c: 61: PORTCbits.RC0 = 0;
  1010  058A  1283               	bcf	status, 5	;RP0=0, select bank0
  1011  058B  1303               	bcf	status, 6	;RP1=0, select bank0
  1012  058C  1007               	bcf	(7),0	;volatile
  1013                           	line	62
  1014                           	
  1015  058D                     l1412:	
  1016                           ;keypad_lcd_main.c: 62: PORTCbits.RC1 = 1;
  1017  058D  1487               	bsf	(7),1	;volatile
  1018                           	line	63
  1019                           	
  1020  058E                     l1414:	
  1021                           ;keypad_lcd_main.c: 63: PORTCbits.RC2 = 1;
  1022  058E  1507               	bsf	(7),2	;volatile
  1023                           	line	64
  1024                           	
  1025  058F                     l1416:	
  1026                           ;keypad_lcd_main.c: 64: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1027                           	opt asmopt_off
  1028  058F  3006               movlw  6
  1029  0590  00D0               movwf	((??_main+0)+0+2),f
  1030  0591  3013               movlw	19
  1031  0592  00CF               movwf	((??_main+0)+0+1),f
  1032  0593  30B1               	movlw	177
  1033  0594  00CE               movwf	((??_main+0)+0),f
  1034  0595                     u817:
  1035  0595  0BCE               	decfsz	((??_main+0)+0),f
  1036  0596  2D95               	goto	u817
  1037  0597  0BCF               	decfsz	((??_main+0)+0+1),f
  1038  0598  2D95               	goto	u817
  1039  0599  0BD0               	decfsz	((??_main+0)+0+2),f
  1040  059A  2D95               	goto	u817
  1041  059B  2D9C               	nop2
  1042                           opt asmopt_on
  1043                           
  1044                           	line	65
  1045                           	
  1046  059C                     l1418:	
  1047                           ;keypad_lcd_main.c: 65: LCD_Clear();
  1048  059C  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1049                           	line	66
  1050                           	
  1051  05A1                     l1420:	
  1052                           ;keypad_lcd_main.c: 66: Secuencia_Clave();
  1053  05A1  120A  118A  25D3   	fcall	_Secuencia_Clave
              120A  118A         
  1054                           	line	69
  1055                           	
  1056  05A6                     l1422:	
  1057                           ;keypad_lcd_main.c: 69: PORTCbits.RC1 = 0;
  1058  05A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1059  05A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1060  05A8  1087               	bcf	(7),1	;volatile
  1061                           	line	70
  1062                           	
  1063  05A9                     l1424:	
  1064                           ;keypad_lcd_main.c: 70: PORTCbits.RC2 = 0;
  1065  05A9  1107               	bcf	(7),2	;volatile
  1066                           	line	71
  1067                           	
  1068  05AA                     l1426:	
  1069                           ;keypad_lcd_main.c: 71: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1070                           	opt asmopt_off
  1071  05AA  3006               movlw  6
  1072  05AB  00D0               movwf	((??_main+0)+0+2),f
  1073  05AC  3013               movlw	19
  1074  05AD  00CF               movwf	((??_main+0)+0+1),f
  1075  05AE  30B1               	movlw	177
  1076  05AF  00CE               movwf	((??_main+0)+0),f
  1077  05B0                     u827:
  1078  05B0  0BCE               	decfsz	((??_main+0)+0),f
  1079  05B1  2DB0               	goto	u827
  1080  05B2  0BCF               	decfsz	((??_main+0)+0+1),f
  1081  05B3  2DB0               	goto	u827
  1082  05B4  0BD0               	decfsz	((??_main+0)+0+2),f
  1083  05B5  2DB0               	goto	u827
  1084  05B6  2DB7               	nop2
  1085                           opt asmopt_on
  1086                           
  1087                           	line	73
  1088                           ;keypad_lcd_main.c: 73: }
  1089  05B7  2D52               	goto	l1396
  1090                           	line	75
  1091                           	
  1092  05B8                     l66:	
  1093                           ;keypad_lcd_main.c: 75: else if(PORTAbits.RA1 == 1){
  1094  05B8  1C85               	btfss	(5),1	;volatile
  1095  05B9  2DBB               	goto	u771
  1096  05BA  2DBC               	goto	u770
  1097  05BB                     u771:
  1098  05BB  2DC2               	goto	l68
  1099  05BC                     u770:
  1100                           	line	76
  1101                           	
  1102  05BC                     l1428:	
  1103                           ;keypad_lcd_main.c: 76: Logica_SensoresHall();
  1104  05BC  120A  118A  2459   	fcall	_Logica_SensoresHall
              120A  118A         
  1105                           	line	77
  1106                           ;keypad_lcd_main.c: 77: }
  1107  05C1  2D52               	goto	l1396
  1108                           	line	79
  1109                           	
  1110  05C2                     l68:	
  1111                           ;keypad_lcd_main.c: 79: else if(PORTAbits.RA2 == 1){
  1112  05C2  1D05               	btfss	(5),2	;volatile
  1113  05C3  2DC5               	goto	u781
  1114  05C4  2DC6               	goto	u780
  1115  05C5                     u781:
  1116  05C5  2D52               	goto	l1396
  1117  05C6                     u780:
  1118                           	line	80
  1119                           	
  1120  05C6                     l1430:	
  1121                           ;keypad_lcd_main.c: 80: Logica_SensoresHall();
  1122  05C6  120A  118A  2459   	fcall	_Logica_SensoresHall
              120A  118A         
  1123  05CB  2D52               	goto	l1396
  1124                           	line	81
  1125                           	
  1126  05CC                     l70:	
  1127  05CC  2D52               	goto	l1396
  1128                           	line	83
  1129                           	
  1130  05CD                     l69:	
  1131  05CD  2D52               	goto	l1396
  1132                           	
  1133  05CE                     l67:	
  1134  05CE  2D52               	goto	l1396
  1135                           	
  1136  05CF                     l71:	
  1137                           	line	51
  1138  05CF  2D52               	goto	l1396
  1139                           	
  1140  05D0                     l72:	
  1141                           	line	85
  1142                           	
  1143  05D0                     l73:	
  1144                           	global	start
  1145  05D0  120A  118A  2800   	ljmp	start
  1146                           	opt stack 0
  1147                           GLOBAL	__end_of_main
  1148  05D3                     	__end_of_main:
  1149                           	signat	_main,88
  1150                           	global	_LCD_Init
  1151                           
  1152 ;; *************** function _LCD_Init *****************
  1153 ;; Defined at:
  1154 ;;		line 5 in file "LCD.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;		None               void
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0
  1170 ;;      Temps:          2       0       0       0       0
  1171 ;;      Totals:         2       0       0       0       0
  1172 ;;Total ram usage:        2 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    1
  1175 ;; This function calls:
  1176 ;;		_LCD_Command
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           psect	text225,local,class=CODE,delta=2,merge=1
  1182                           global __ptext225
  1183  03C6                     __ptext225:
  1184                           psect	text225
  1185                           	file	"LCD.c"
  1186                           	line	5
  1187                           	global	__size_of_LCD_Init
  1188  002B                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
  1189                           	
  1190  03C6                     _LCD_Init:	
  1191                           	opt	stack 6
  1192                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1193                           	line	6
  1194                           	
  1195  03C6                     l1224:	
  1196                           ;LCD.c: 6: TRISD = 0;
  1197  03C6  1683               	bsf	status, 5	;RP0=1, select bank1
  1198  03C7  1303               	bcf	status, 6	;RP1=0, select bank1
  1199  03C8  0188               	clrf	(136)^080h	;volatile
  1200                           	line	7
  1201                           	
  1202  03C9                     l1226:	
  1203                           ;LCD.c: 7: _delay((unsigned long)((15)*(4000000/4000.0)));
  1204                           	opt asmopt_off
  1205  03C9  3014               movlw	20
  1206  03CA  00F4               movwf	((??_LCD_Init+0)+0+1),f
  1207  03CB  3079               	movlw	121
  1208  03CC  00F3               movwf	((??_LCD_Init+0)+0),f
  1209  03CD                     u837:
  1210  03CD  0BF3               	decfsz	((??_LCD_Init+0)+0),f
  1211  03CE  2BCD               	goto	u837
  1212  03CF  0BF4               	decfsz	((??_LCD_Init+0)+0+1),f
  1213  03D0  2BCD               	goto	u837
  1214  03D1  2BD2               	nop2
  1215                           opt asmopt_on
  1216                           
  1217                           	line	8
  1218                           	
  1219  03D2                     l1228:	
  1220                           ;LCD.c: 8: LCD_Command(0x02);
  1221  03D2  3002               	movlw	(02h)
  1222  03D3  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1223                           	line	10
  1224                           	
  1225  03D8                     l1230:	
  1226                           ;LCD.c: 10: LCD_Command(0x28);
  1227  03D8  3028               	movlw	(028h)
  1228  03D9  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1229                           	line	12
  1230                           	
  1231  03DE                     l1232:	
  1232                           ;LCD.c: 12: LCD_Command(0x01);
  1233  03DE  3001               	movlw	(01h)
  1234  03DF  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1235                           	line	13
  1236                           	
  1237  03E4                     l1234:	
  1238                           ;LCD.c: 13: LCD_Command(0x0c);
  1239  03E4  300C               	movlw	(0Ch)
  1240  03E5  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1241                           	line	14
  1242                           	
  1243  03EA                     l1236:	
  1244                           ;LCD.c: 14: LCD_Command(0x06);
  1245  03EA  3006               	movlw	(06h)
  1246  03EB  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1247                           	line	15
  1248                           	
  1249  03F0                     l111:	
  1250  03F0  0008               	return
  1251                           	opt stack 0
  1252                           GLOBAL	__end_of_LCD_Init
  1253  03F1                     	__end_of_LCD_Init:
  1254                           	signat	_LCD_Init,88
  1255                           	global	_Logica_SensoresHall
  1256                           
  1257 ;; *************** function _Logica_SensoresHall *****************
  1258 ;; Defined at:
  1259 ;;		line 136 in file "keypad_lcd_main.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  2   34[COMMON] int 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1273 ;;      Params:         0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0
  1275 ;;      Temps:          0       3       0       0       0
  1276 ;;      Totals:         0       3       0       0       0
  1277 ;;Total ram usage:        3 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    4
  1280 ;; This function calls:
  1281 ;;		_LCD_String_xy
  1282 ;;		_LCD_Command
  1283 ;;		_LCD_String
  1284 ;;		_LCD_Clear
  1285 ;;		_Secuencia_Clave
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           psect	text226,local,class=CODE,delta=2,merge=1
  1291                           global __ptext226
  1292  0459                     __ptext226:
  1293                           psect	text226
  1294                           	file	"keypad_lcd_main.c"
  1295                           	line	136
  1296                           	global	__size_of_Logica_SensoresHall
  1297  00B8                     	__size_of_Logica_SensoresHall	equ	__end_of_Logica_SensoresHall-_Logica_SensoresHall
  1298                           	
  1299  0459                     _Logica_SensoresHall:	
  1300                           	opt	stack 3
  1301                           ; Regs used in _Logica_SensoresHall: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  1302                           	line	137
  1303                           	
  1304  0459                     l1318:	
  1305                           ;keypad_lcd_main.c: 137: LCD_String_xy(0,0,"Deteccion");
  1306  0459  01F5               	clrf	(?_LCD_String_xy)
  1307  045A  306D               	movlw	((STR_8-__stringbase))&0ffh
  1308  045B  1283               	bcf	status, 5	;RP0=0, select bank0
  1309  045C  1303               	bcf	status, 6	;RP1=0, select bank0
  1310  045D  00CB               	movwf	(??_Logica_SensoresHall+0)+0
  1311  045E  084B               	movf	(??_Logica_SensoresHall+0)+0,w
  1312  045F  00F6               	movwf	0+(?_LCD_String_xy)+01h
  1313  0460  3000               	movlw	(0)
  1314  0461  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
  1315                           	line	138
  1316                           	
  1317  0466                     l1320:	
  1318                           ;keypad_lcd_main.c: 138: LCD_Command(0xC0);
  1319  0466  30C0               	movlw	(0C0h)
  1320  0467  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1321                           	line	139
  1322                           	
  1323  046C                     l1322:	
  1324                           ;keypad_lcd_main.c: 139: LCD_String("En Sensores");
  1325  046C  304B               	movlw	((STR_9-__stringbase))&0ffh
  1326  046D  120A  118A  2353   	fcall	_LCD_String
              120A  118A         
  1327                           	line	140
  1328                           	
  1329  0472                     l1324:	
  1330                           ;keypad_lcd_main.c: 140: PORTCbits.RC0 = 0;
  1331  0472  1283               	bcf	status, 5	;RP0=0, select bank0
  1332  0473  1303               	bcf	status, 6	;RP1=0, select bank0
  1333  0474  1007               	bcf	(7),0	;volatile
  1334                           	line	141
  1335                           	
  1336  0475                     l1326:	
  1337                           ;keypad_lcd_main.c: 141: PORTCbits.RC1 = 1;
  1338  0475  1487               	bsf	(7),1	;volatile
  1339                           	line	142
  1340                           	
  1341  0476                     l1328:	
  1342                           ;keypad_lcd_main.c: 142: _delay((unsigned long)((7000)*(4000000/4000.0)));
  1343                           	opt asmopt_off
  1344  0476  3024               movlw  36
  1345  0477  00CD               movwf	((??_Logica_SensoresHall+0)+0+2),f
  1346  0478  3083               movlw	131
  1347  0479  00CC               movwf	((??_Logica_SensoresHall+0)+0+1),f
  1348  047A  30F1               	movlw	241
  1349  047B  00CB               movwf	((??_Logica_SensoresHall+0)+0),f
  1350  047C                     u847:
  1351  047C  0BCB               	decfsz	((??_Logica_SensoresHall+0)+0),f
  1352  047D  2C7C               	goto	u847
  1353  047E  0BCC               	decfsz	((??_Logica_SensoresHall+0)+0+1),f
  1354  047F  2C7C               	goto	u847
  1355  0480  0BCD               	decfsz	((??_Logica_SensoresHall+0)+0+2),f
  1356  0481  2C7C               	goto	u847
  1357                           opt asmopt_on
  1358                           
  1359                           	line	144
  1360                           	
  1361  0482                     l1330:	
  1362                           ;keypad_lcd_main.c: 144: if(PORTAbits.RA1 == 1){
  1363  0482  1283               	bcf	status, 5	;RP0=0, select bank0
  1364  0483  1303               	bcf	status, 6	;RP1=0, select bank0
  1365  0484  1C85               	btfss	(5),1	;volatile
  1366  0485  2C87               	goto	u741
  1367  0486  2C88               	goto	u740
  1368  0487                     u741:
  1369  0487  2CC9               	goto	l92
  1370  0488                     u740:
  1371                           	line	145
  1372                           	
  1373  0488                     l1332:	
  1374                           ;keypad_lcd_main.c: 145: PORTCbits.RC2 = 1;
  1375  0488  1507               	bsf	(7),2	;volatile
  1376                           	line	146
  1377                           	
  1378  0489                     l1334:	
  1379                           ;keypad_lcd_main.c: 146: LCD_Clear();
  1380  0489  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1381                           	line	147
  1382                           	
  1383  048E                     l1336:	
  1384                           ;keypad_lcd_main.c: 147: LCD_String_xy(0,0,"Deteccion");
  1385  048E  01F5               	clrf	(?_LCD_String_xy)
  1386  048F  306D               	movlw	((STR_10-__stringbase))&0ffh
  1387  0490  1283               	bcf	status, 5	;RP0=0, select bank0
  1388  0491  1303               	bcf	status, 6	;RP1=0, select bank0
  1389  0492  00CB               	movwf	(??_Logica_SensoresHall+0)+0
  1390  0493  084B               	movf	(??_Logica_SensoresHall+0)+0,w
  1391  0494  00F6               	movwf	0+(?_LCD_String_xy)+01h
  1392  0495  3000               	movlw	(0)
  1393  0496  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
  1394                           	line	148
  1395                           	
  1396  049B                     l1338:	
  1397                           ;keypad_lcd_main.c: 148: LCD_Command(0xC0);
  1398  049B  30C0               	movlw	(0C0h)
  1399  049C  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1400                           	line	149
  1401                           ;keypad_lcd_main.c: 149: LCD_String("Sensor 1");
  1402  04A1  3077               	movlw	((STR_11-__stringbase))&0ffh
  1403  04A2  120A  118A  2353   	fcall	_LCD_String
              120A  118A         
  1404                           	line	150
  1405                           	
  1406  04A7                     l1340:	
  1407                           ;keypad_lcd_main.c: 150: _delay((unsigned long)((7000)*(4000000/4000.0)));
  1408                           	opt asmopt_off
  1409  04A7  3024               movlw  36
  1410  04A8  1283               	bcf	status, 5	;RP0=0, select bank0
  1411  04A9  1303               	bcf	status, 6	;RP1=0, select bank0
  1412  04AA  00CD               movwf	((??_Logica_SensoresHall+0)+0+2),f
  1413  04AB  3083               movlw	131
  1414  04AC  00CC               movwf	((??_Logica_SensoresHall+0)+0+1),f
  1415  04AD  30F1               	movlw	241
  1416  04AE  00CB               movwf	((??_Logica_SensoresHall+0)+0),f
  1417  04AF                     u857:
  1418  04AF  0BCB               	decfsz	((??_Logica_SensoresHall+0)+0),f
  1419  04B0  2CAF               	goto	u857
  1420  04B1  0BCC               	decfsz	((??_Logica_SensoresHall+0)+0+1),f
  1421  04B2  2CAF               	goto	u857
  1422  04B3  0BCD               	decfsz	((??_Logica_SensoresHall+0)+0+2),f
  1423  04B4  2CAF               	goto	u857
  1424                           opt asmopt_on
  1425                           
  1426                           	line	151
  1427                           	
  1428  04B5                     l1342:	
  1429                           ;keypad_lcd_main.c: 151: LCD_Clear();
  1430  04B5  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1431                           	line	152
  1432                           	
  1433  04BA                     l1344:	
  1434                           ;keypad_lcd_main.c: 152: Secuencia_Clave();
  1435  04BA  120A  118A  25D3   	fcall	_Secuencia_Clave
              120A  118A         
  1436                           	line	153
  1437                           	
  1438  04BF                     l1346:	
  1439                           ;keypad_lcd_main.c: 153: PORTCbits.RC1 = 0;
  1440  04BF  1283               	bcf	status, 5	;RP0=0, select bank0
  1441  04C0  1303               	bcf	status, 6	;RP1=0, select bank0
  1442  04C1  1087               	bcf	(7),1	;volatile
  1443                           	line	154
  1444                           	
  1445  04C2                     l1348:	
  1446                           ;keypad_lcd_main.c: 154: PORTCbits.RC2 = 0;
  1447  04C2  1107               	bcf	(7),2	;volatile
  1448                           	line	155
  1449                           	
  1450  04C3                     l1350:	
  1451                           ;keypad_lcd_main.c: 155: LCD_Clear();
  1452  04C3  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1453                           	line	156
  1454                           ;keypad_lcd_main.c: 156: }
  1455  04C8  2D10               	goto	l96
  1456                           	line	157
  1457                           	
  1458  04C9                     l92:	
  1459                           ;keypad_lcd_main.c: 157: else if(PORTAbits.RA2 == 1){
  1460  04C9  1D05               	btfss	(5),2	;volatile
  1461  04CA  2CCC               	goto	u751
  1462  04CB  2CCD               	goto	u750
  1463  04CC                     u751:
  1464  04CC  2D07               	goto	l94
  1465  04CD                     u750:
  1466                           	line	158
  1467                           	
  1468  04CD                     l1352:	
  1469                           ;keypad_lcd_main.c: 158: PORTCbits.RC2 = 1;
  1470  04CD  1507               	bsf	(7),2	;volatile
  1471                           	line	159
  1472                           	
  1473  04CE                     l1354:	
  1474                           ;keypad_lcd_main.c: 159: LCD_String_xy(0,0,"Deteccion");
  1475  04CE  01F5               	clrf	(?_LCD_String_xy)
  1476  04CF  306D               	movlw	((STR_12-__stringbase))&0ffh
  1477  04D0  00CB               	movwf	(??_Logica_SensoresHall+0)+0
  1478  04D1  084B               	movf	(??_Logica_SensoresHall+0)+0,w
  1479  04D2  00F6               	movwf	0+(?_LCD_String_xy)+01h
  1480  04D3  3000               	movlw	(0)
  1481  04D4  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
  1482                           	line	160
  1483                           	
  1484  04D9                     l1356:	
  1485                           ;keypad_lcd_main.c: 160: LCD_Command(0xC0);
  1486  04D9  30C0               	movlw	(0C0h)
  1487  04DA  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1488                           	line	161
  1489                           	
  1490  04DF                     l1358:	
  1491                           ;keypad_lcd_main.c: 161: LCD_String("Sensor 2");
  1492  04DF  3080               	movlw	((STR_13-__stringbase))&0ffh
  1493  04E0  120A  118A  2353   	fcall	_LCD_String
              120A  118A         
  1494                           	line	162
  1495                           	
  1496  04E5                     l1360:	
  1497                           ;keypad_lcd_main.c: 162: _delay((unsigned long)((7000)*(4000000/4000.0)));
  1498                           	opt asmopt_off
  1499  04E5  3024               movlw  36
  1500  04E6  1283               	bcf	status, 5	;RP0=0, select bank0
  1501  04E7  1303               	bcf	status, 6	;RP1=0, select bank0
  1502  04E8  00CD               movwf	((??_Logica_SensoresHall+0)+0+2),f
  1503  04E9  3083               movlw	131
  1504  04EA  00CC               movwf	((??_Logica_SensoresHall+0)+0+1),f
  1505  04EB  30F1               	movlw	241
  1506  04EC  00CB               movwf	((??_Logica_SensoresHall+0)+0),f
  1507  04ED                     u867:
  1508  04ED  0BCB               	decfsz	((??_Logica_SensoresHall+0)+0),f
  1509  04EE  2CED               	goto	u867
  1510  04EF  0BCC               	decfsz	((??_Logica_SensoresHall+0)+0+1),f
  1511  04F0  2CED               	goto	u867
  1512  04F1  0BCD               	decfsz	((??_Logica_SensoresHall+0)+0+2),f
  1513  04F2  2CED               	goto	u867
  1514                           opt asmopt_on
  1515                           
  1516                           	line	163
  1517                           	
  1518  04F3                     l1362:	
  1519                           ;keypad_lcd_main.c: 163: LCD_Clear();
  1520  04F3  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1521                           	line	164
  1522                           	
  1523  04F8                     l1364:	
  1524                           ;keypad_lcd_main.c: 164: Secuencia_Clave();
  1525  04F8  120A  118A  25D3   	fcall	_Secuencia_Clave
              120A  118A         
  1526                           	line	165
  1527                           	
  1528  04FD                     l1366:	
  1529                           ;keypad_lcd_main.c: 165: PORTCbits.RC1 = 0;
  1530  04FD  1283               	bcf	status, 5	;RP0=0, select bank0
  1531  04FE  1303               	bcf	status, 6	;RP1=0, select bank0
  1532  04FF  1087               	bcf	(7),1	;volatile
  1533                           	line	166
  1534                           	
  1535  0500                     l1368:	
  1536                           ;keypad_lcd_main.c: 166: PORTCbits.RC2 = 0;
  1537  0500  1107               	bcf	(7),2	;volatile
  1538                           	line	167
  1539                           	
  1540  0501                     l1370:	
  1541                           ;keypad_lcd_main.c: 167: LCD_Clear();
  1542  0501  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1543                           	line	168
  1544                           ;keypad_lcd_main.c: 168: }
  1545  0506  2D10               	goto	l96
  1546                           	line	169
  1547                           	
  1548  0507                     l94:	
  1549                           	line	170
  1550                           ;keypad_lcd_main.c: 169: else{
  1551                           ;keypad_lcd_main.c: 170: PORTCbits.RC1 = 0;
  1552  0507  1087               	bcf	(7),1	;volatile
  1553                           	line	171
  1554                           ;keypad_lcd_main.c: 171: PORTCbits.RC2 = 0;
  1555  0508  1107               	bcf	(7),2	;volatile
  1556                           	line	172
  1557                           	
  1558  0509                     l1372:	
  1559                           ;keypad_lcd_main.c: 172: LCD_Clear();
  1560  0509  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1561  050E  2D10               	goto	l96
  1562                           	line	173
  1563                           	
  1564  050F                     l95:	
  1565  050F  2D10               	goto	l96
  1566                           	
  1567  0510                     l93:	
  1568                           	line	174
  1569                           	
  1570  0510                     l96:	
  1571  0510  0008               	return
  1572                           	opt stack 0
  1573                           GLOBAL	__end_of_Logica_SensoresHall
  1574  0511                     	__end_of_Logica_SensoresHall:
  1575                           	signat	_Logica_SensoresHall,90
  1576                           	global	_Secuencia_Clave
  1577                           
  1578 ;; *************** function _Secuencia_Clave *****************
  1579 ;; Defined at:
  1580 ;;		line 87 in file "keypad_lcd_main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  i               2    0[BANK0 ] int 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2   32[COMMON] int 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       2       0       0       0
  1596 ;;      Temps:          3       0       0       0       0
  1597 ;;      Totals:         3       2       0       0       0
  1598 ;;Total ram usage:        5 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    3
  1601 ;; This function calls:
  1602 ;;		_LCD_String_xy
  1603 ;;		_keyfind
  1604 ;;		_LCD_Command
  1605 ;;		_LCD_Char
  1606 ;;		_strcmp
  1607 ;;		_LCD_Clear
  1608 ;;		_LCD_String
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;;		_Logica_SensoresHall
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           psect	text227,local,class=CODE,delta=2,merge=1
  1615                           global __ptext227
  1616  05D3                     __ptext227:
  1617                           psect	text227
  1618                           	file	"keypad_lcd_main.c"
  1619                           	line	87
  1620                           	global	__size_of_Secuencia_Clave
  1621  00DB                     	__size_of_Secuencia_Clave	equ	__end_of_Secuencia_Clave-_Secuencia_Clave
  1622                           	
  1623  05D3                     _Secuencia_Clave:	
  1624                           	opt	stack 3
  1625                           ; Regs used in _Secuencia_Clave: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1626                           	line	88
  1627                           ;keypad_lcd_main.c: 88: while(1){
  1628                           	
  1629  05D3                     l76:	
  1630                           	line	89
  1631                           	
  1632  05D3                     l1262:	
  1633                           ;keypad_lcd_main.c: 89: LCD_String_xy(1,0,"Ingrese Clave");
  1634  05D3  01F5               	clrf	(?_LCD_String_xy)
  1635  05D4  302F               	movlw	((STR_4-__stringbase))&0ffh
  1636  05D5  00FA               	movwf	(??_Secuencia_Clave+0)+0
  1637  05D6  087A               	movf	(??_Secuencia_Clave+0)+0,w
  1638  05D7  00F6               	movwf	0+(?_LCD_String_xy)+01h
  1639  05D8  3001               	movlw	(01h)
  1640  05D9  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
  1641                           	line	91
  1642                           	
  1643  05DE                     l1264:	
  1644                           ;keypad_lcd_main.c: 91: for(int i=0; i<4;i++){
  1645  05DE  1283               	bcf	status, 5	;RP0=0, select bank0
  1646  05DF  1303               	bcf	status, 6	;RP1=0, select bank0
  1647  05E0  01C9               	clrf	(Secuencia_Clave@i)
  1648  05E1  01CA               	clrf	(Secuencia_Clave@i+1)
  1649                           	
  1650  05E2                     l1266:	
  1651  05E2  084A               	movf	(Secuencia_Clave@i+1),w
  1652  05E3  3A80               	xorlw	80h
  1653  05E4  00FF               	movwf	btemp+1
  1654  05E5  3080               	movlw	(high(04h))^80h
  1655  05E6  027F               	subwf	btemp+1,w
  1656  05E7  1D03               	skipz
  1657  05E8  2DEB               	goto	u695
  1658  05E9  3004               	movlw	low(04h)
  1659  05EA  0249               	subwf	(Secuencia_Clave@i),w
  1660  05EB                     u695:
  1661                           
  1662  05EB  1C03               	skipc
  1663  05EC  2DEE               	goto	u691
  1664  05ED  2DEF               	goto	u690
  1665  05EE                     u691:
  1666  05EE  2DF1               	goto	l1270
  1667  05EF                     u690:
  1668  05EF  2E25               	goto	l1282
  1669                           	
  1670  05F0                     l1268:	
  1671  05F0  2E25               	goto	l1282
  1672                           	
  1673  05F1                     l77:	
  1674                           	line	92
  1675                           	
  1676  05F1                     l1270:	
  1677                           ;keypad_lcd_main.c: 92: key = keyfind();
  1678  05F1  120A  118A  26AE   	fcall	_keyfind
              120A  118A         
  1679  05F6  00FA               	movwf	(??_Secuencia_Clave+0)+0
  1680  05F7  087A               	movf	(??_Secuencia_Clave+0)+0,w
  1681  05F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1682  05F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1683  05FA  00BF               	movwf	(_key)
  1684                           	line	93
  1685                           	
  1686  05FB                     l1272:	
  1687                           ;keypad_lcd_main.c: 93: LCD_Command(0xC0);
  1688  05FB  30C0               	movlw	(0C0h)
  1689  05FC  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1690                           	line	94
  1691                           	
  1692  0601                     l1274:	
  1693                           ;keypad_lcd_main.c: 94: LCD_Char('*');
  1694  0601  302A               	movlw	(02Ah)
  1695  0602  120A  118A  23F1   	fcall	_LCD_Char
              120A  118A         
  1696                           	line	96
  1697                           	
  1698  0607                     l1276:	
  1699                           ;keypad_lcd_main.c: 96: pass_user[i] = key;
  1700  0607  1283               	bcf	status, 5	;RP0=0, select bank0
  1701  0608  1303               	bcf	status, 6	;RP1=0, select bank0
  1702  0609  083F               	movf	(_key),w
  1703  060A  00FA               	movwf	(??_Secuencia_Clave+0)+0
  1704  060B  0849               	movf	(Secuencia_Clave@i),w
  1705  060C  3E44               	addlw	_pass_user&0ffh
  1706  060D  0084               	movwf	fsr0
  1707  060E  087A               	movf	(??_Secuencia_Clave+0)+0,w
  1708  060F  1383               	bcf	status, 7	;select IRP bank0
  1709  0610  0080               	movwf	indf
  1710                           	line	91
  1711                           	
  1712  0611                     l1278:	
  1713  0611  3001               	movlw	low(01h)
  1714  0612  07C9               	addwf	(Secuencia_Clave@i),f
  1715  0613  1803               	skipnc
  1716  0614  0ACA               	incf	(Secuencia_Clave@i+1),f
  1717  0615  3000               	movlw	high(01h)
  1718  0616  07CA               	addwf	(Secuencia_Clave@i+1),f
  1719                           	
  1720  0617                     l1280:	
  1721  0617  084A               	movf	(Secuencia_Clave@i+1),w
  1722  0618  3A80               	xorlw	80h
  1723  0619  00FF               	movwf	btemp+1
  1724  061A  3080               	movlw	(high(04h))^80h
  1725  061B  027F               	subwf	btemp+1,w
  1726  061C  1D03               	skipz
  1727  061D  2E20               	goto	u705
  1728  061E  3004               	movlw	low(04h)
  1729  061F  0249               	subwf	(Secuencia_Clave@i),w
  1730  0620                     u705:
  1731                           
  1732  0620  1C03               	skipc
  1733  0621  2E23               	goto	u701
  1734  0622  2E24               	goto	u700
  1735  0623                     u701:
  1736  0623  2DF1               	goto	l1270
  1737  0624                     u700:
  1738  0624  2E25               	goto	l1282
  1739                           	
  1740  0625                     l78:	
  1741                           	line	101
  1742                           	
  1743  0625                     l1282:	
  1744                           ;keypad_lcd_main.c: 98: }
  1745                           ;keypad_lcd_main.c: 101: if(strcmp(pass_user,password)!=0){
  1746  0625  3030               	movlw	(_password)&0ffh
  1747  0626  00FA               	movwf	(??_Secuencia_Clave+0)+0
  1748  0627  087A               	movf	(??_Secuencia_Clave+0)+0,w
  1749  0628  00F0               	movwf	(?_strcmp)
  1750  0629  3044               	movlw	(_pass_user)&0ffh
  1751  062A  120A  118A  2374   	fcall	_strcmp
              120A  118A         
  1752  062F  0871               	movf	(1+(?_strcmp)),w
  1753  0630  0470               	iorwf	(0+(?_strcmp)),w
  1754  0631  1903               	skipnz
  1755  0632  2E34               	goto	u711
  1756  0633  2E35               	goto	u710
  1757  0634                     u711:
  1758  0634  2E5B               	goto	l1292
  1759  0635                     u710:
  1760                           	line	102
  1761                           	
  1762  0635                     l1284:	
  1763                           ;keypad_lcd_main.c: 102: LCD_Clear();
  1764  0635  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1765                           	line	103
  1766                           	
  1767  063A                     l1286:	
  1768                           ;keypad_lcd_main.c: 103: LCD_String_xy(0,0,"Clave Erronea");
  1769  063A  01F5               	clrf	(?_LCD_String_xy)
  1770  063B  3021               	movlw	((STR_5-__stringbase))&0ffh
  1771  063C  00FA               	movwf	(??_Secuencia_Clave+0)+0
  1772  063D  087A               	movf	(??_Secuencia_Clave+0)+0,w
  1773  063E  00F6               	movwf	0+(?_LCD_String_xy)+01h
  1774  063F  3000               	movlw	(0)
  1775  0640  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
  1776                           	line	104
  1777                           	
  1778  0645                     l1288:	
  1779                           ;keypad_lcd_main.c: 104: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1780                           	opt asmopt_off
  1781  0645  300B               movlw  11
  1782  0646  00FC               movwf	((??_Secuencia_Clave+0)+0+2),f
  1783  0647  3026               movlw	38
  1784  0648  00FB               movwf	((??_Secuencia_Clave+0)+0+1),f
  1785  0649  3066               	movlw	102
  1786  064A  00FA               movwf	((??_Secuencia_Clave+0)+0),f
  1787  064B                     u877:
  1788  064B  0BFA               	decfsz	((??_Secuencia_Clave+0)+0),f
  1789  064C  2E4B               	goto	u877
  1790  064D  0BFB               	decfsz	((??_Secuencia_Clave+0)+0+1),f
  1791  064E  2E4B               	goto	u877
  1792  064F  0BFC               	decfsz	((??_Secuencia_Clave+0)+0+2),f
  1793  0650  2E4B               	goto	u877
  1794  0651  2E52               	nop2
  1795                           opt asmopt_on
  1796                           
  1797                           	line	105
  1798                           	
  1799  0652                     l1290:	
  1800                           ;keypad_lcd_main.c: 105: wrong_count++;
  1801  0652  3001               	movlw	low(01h)
  1802  0653  1283               	bcf	status, 5	;RP0=0, select bank0
  1803  0654  1303               	bcf	status, 6	;RP1=0, select bank0
  1804  0655  07BC               	addwf	(_wrong_count),f
  1805  0656  1803               	skipnc
  1806  0657  0ABD               	incf	(_wrong_count+1),f
  1807  0658  3000               	movlw	high(01h)
  1808  0659  07BD               	addwf	(_wrong_count+1),f
  1809                           	line	106
  1810                           ;keypad_lcd_main.c: 106: }
  1811  065A  2E63               	goto	l80
  1812                           	line	107
  1813                           	
  1814  065B                     l79:	
  1815                           	line	108
  1816                           	
  1817  065B                     l1292:	
  1818                           ;keypad_lcd_main.c: 107: else{
  1819                           ;keypad_lcd_main.c: 108: ok_count++;
  1820  065B  3001               	movlw	low(01h)
  1821  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  1822  065D  1303               	bcf	status, 6	;RP1=0, select bank0
  1823  065E  07BA               	addwf	(_ok_count),f
  1824  065F  1803               	skipnc
  1825  0660  0ABB               	incf	(_ok_count+1),f
  1826  0661  3000               	movlw	high(01h)
  1827  0662  07BB               	addwf	(_ok_count+1),f
  1828                           	line	109
  1829                           	
  1830  0663                     l80:	
  1831                           	line	110
  1832                           ;keypad_lcd_main.c: 109: }
  1833                           ;keypad_lcd_main.c: 110: if(ok_count>=1){
  1834  0663  083B               	movf	(_ok_count+1),w
  1835  0664  043A               	iorwf	(_ok_count),w
  1836  0665  1903               	skipnz
  1837  0666  2E68               	goto	u721
  1838  0667  2E69               	goto	u720
  1839  0668                     u721:
  1840  0668  2E74               	goto	l1308
  1841  0669                     u720:
  1842                           	line	112
  1843                           	
  1844  0669                     l1294:	
  1845                           ;keypad_lcd_main.c: 112: ok_count=0;
  1846  0669  01BA               	clrf	(_ok_count)
  1847  066A  01BB               	clrf	(_ok_count+1)
  1848                           	line	113
  1849                           ;keypad_lcd_main.c: 113: wrong_count=0;
  1850  066B  01BC               	clrf	(_wrong_count)
  1851  066C  01BD               	clrf	(_wrong_count+1)
  1852                           	line	115
  1853                           	
  1854  066D                     l1296:	
  1855                           ;keypad_lcd_main.c: 115: pass_user[0]=0;
  1856  066D  01C4               	clrf	(_pass_user)
  1857                           	line	116
  1858                           	
  1859  066E                     l1298:	
  1860                           ;keypad_lcd_main.c: 116: pass_user[1]=0;
  1861  066E  01C5               	clrf	0+(_pass_user)+01h
  1862                           	line	117
  1863                           	
  1864  066F                     l1300:	
  1865                           ;keypad_lcd_main.c: 117: pass_user[2]=0;
  1866  066F  01C6               	clrf	0+(_pass_user)+02h
  1867                           	line	118
  1868                           	
  1869  0670                     l1302:	
  1870                           ;keypad_lcd_main.c: 118: pass_user[3]=0;
  1871  0670  01C7               	clrf	0+(_pass_user)+03h
  1872                           	line	119
  1873                           	
  1874  0671                     l1304:	
  1875                           ;keypad_lcd_main.c: 119: pass_user[4]=0;
  1876  0671  01C8               	clrf	0+(_pass_user)+04h
  1877                           	line	121
  1878                           ;keypad_lcd_main.c: 121: break;
  1879  0672  2EAD               	goto	l89
  1880                           	line	122
  1881                           	
  1882  0673                     l1306:	
  1883                           ;keypad_lcd_main.c: 122: }
  1884  0673  2DD3               	goto	l76
  1885                           	line	123
  1886                           	
  1887  0674                     l81:	
  1888                           	
  1889  0674                     l1308:	
  1890                           ;keypad_lcd_main.c: 123: else if(wrong_count>=3){
  1891  0674  3000               	movlw	high(03h)
  1892  0675  023D               	subwf	(_wrong_count+1),w
  1893  0676  3003               	movlw	low(03h)
  1894  0677  1903               	skipnz
  1895  0678  023C               	subwf	(_wrong_count),w
  1896  0679  1C03               	skipc
  1897  067A  2E7C               	goto	u731
  1898  067B  2E7D               	goto	u730
  1899  067C                     u731:
  1900  067C  2DD3               	goto	l76
  1901  067D                     u730:
  1902  067D  2E7E               	goto	l1310
  1903                           	line	124
  1904                           ;keypad_lcd_main.c: 124: while(1){
  1905                           	
  1906  067E                     l85:	
  1907                           	line	125
  1908                           	
  1909  067E                     l1310:	
  1910                           ;keypad_lcd_main.c: 125: LCD_Clear();
  1911  067E  120A  118A  2301   	fcall	_LCD_Clear
              120A  118A         
  1912                           	line	126
  1913                           	
  1914  0683                     l1312:	
  1915                           ;keypad_lcd_main.c: 126: LCD_String_xy(0,0,"Debe Reiniciar");
  1916  0683  01F5               	clrf	(?_LCD_String_xy)
  1917  0684  3012               	movlw	((STR_6-__stringbase))&0ffh
  1918  0685  00FA               	movwf	(??_Secuencia_Clave+0)+0
  1919  0686  087A               	movf	(??_Secuencia_Clave+0)+0,w
  1920  0687  00F6               	movwf	0+(?_LCD_String_xy)+01h
  1921  0688  3000               	movlw	(0)
  1922  0689  120A  118A  239D   	fcall	_LCD_String_xy
              120A  118A         
  1923                           	line	127
  1924                           	
  1925  068E                     l1314:	
  1926                           ;keypad_lcd_main.c: 127: LCD_Command(0xC0);
  1927  068E  30C0               	movlw	(0C0h)
  1928  068F  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  1929                           	line	128
  1930                           ;keypad_lcd_main.c: 128: LCD_String("El Sistema");
  1931  0694  3057               	movlw	((STR_7-__stringbase))&0ffh
  1932  0695  120A  118A  2353   	fcall	_LCD_String
              120A  118A         
  1933                           	line	129
  1934                           	
  1935  069A                     l1316:	
  1936                           ;keypad_lcd_main.c: 129: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1937                           	opt asmopt_off
  1938  069A  300B               movlw  11
  1939  069B  00FC               movwf	((??_Secuencia_Clave+0)+0+2),f
  1940  069C  3026               movlw	38
  1941  069D  00FB               movwf	((??_Secuencia_Clave+0)+0+1),f
  1942  069E  3066               	movlw	102
  1943  069F  00FA               movwf	((??_Secuencia_Clave+0)+0),f
  1944  06A0                     u887:
  1945  06A0  0BFA               	decfsz	((??_Secuencia_Clave+0)+0),f
  1946  06A1  2EA0               	goto	u887
  1947  06A2  0BFB               	decfsz	((??_Secuencia_Clave+0)+0+1),f
  1948  06A3  2EA0               	goto	u887
  1949  06A4  0BFC               	decfsz	((??_Secuencia_Clave+0)+0+2),f
  1950  06A5  2EA0               	goto	u887
  1951  06A6  2EA7               	nop2
  1952                           opt asmopt_on
  1953                           
  1954  06A7  2E7E               	goto	l1310
  1955                           	line	130
  1956                           	
  1957  06A8                     l86:	
  1958                           	line	124
  1959  06A8  2E7E               	goto	l1310
  1960                           	
  1961  06A9                     l87:	
  1962  06A9  2DD3               	goto	l76
  1963                           	line	131
  1964                           	
  1965  06AA                     l84:	
  1966  06AA  2DD3               	goto	l76
  1967                           	line	132
  1968                           	
  1969  06AB                     l83:	
  1970  06AB  2DD3               	goto	l76
  1971                           	
  1972  06AC                     l88:	
  1973                           	line	88
  1974  06AC  2DD3               	goto	l76
  1975                           	
  1976  06AD                     l82:	
  1977                           	line	134
  1978                           	
  1979  06AD                     l89:	
  1980  06AD  0008               	return
  1981                           	opt stack 0
  1982                           GLOBAL	__end_of_Secuencia_Clave
  1983  06AE                     	__end_of_Secuencia_Clave:
  1984                           	signat	_Secuencia_Clave,90
  1985                           	global	_LCD_Clear
  1986                           
  1987 ;; *************** function _LCD_Clear *****************
  1988 ;; Defined at:
  1989 ;;		line 79 in file "LCD.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;		None               void
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    1
  2010 ;; This function calls:
  2011 ;;		_LCD_Command
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;;		_Secuencia_Clave
  2015 ;;		_Logica_SensoresHall
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           psect	text228,local,class=CODE,delta=2,merge=1
  2019                           global __ptext228
  2020  0301                     __ptext228:
  2021                           psect	text228
  2022                           	file	"LCD.c"
  2023                           	line	79
  2024                           	global	__size_of_LCD_Clear
  2025  0007                     	__size_of_LCD_Clear	equ	__end_of_LCD_Clear-_LCD_Clear
  2026                           	
  2027  0301                     _LCD_Clear:	
  2028                           	opt	stack 4
  2029                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2030                           	line	80
  2031                           	
  2032  0301                     l1238:	
  2033                           ;LCD.c: 80: LCD_Command(0x01);
  2034  0301  3001               	movlw	(01h)
  2035  0302  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  2036                           	line	81
  2037                           	
  2038  0307                     l131:	
  2039  0307  0008               	return
  2040                           	opt stack 0
  2041                           GLOBAL	__end_of_LCD_Clear
  2042  0308                     	__end_of_LCD_Clear:
  2043                           	signat	_LCD_Clear,88
  2044                           	global	_LCD_String_xy
  2045                           
  2046 ;; *************** function _LCD_String_xy *****************
  2047 ;; Defined at:
  2048 ;;		line 60 in file "LCD.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  row             1    wreg     unsigned char 
  2051 ;;  pos             1    5[COMMON] unsigned char 
  2052 ;;  msg             1    6[COMMON] PTR const unsigned char 
  2053 ;;		 -> STR_12(10), STR_10(10), STR_8(10), STR_6(15), 
  2054 ;;		 -> STR_5(14), STR_4(14), STR_3(8), STR_2(14), 
  2055 ;;		 -> STR_1(11), 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  row             1    8[COMMON] unsigned char 
  2058 ;;  location        1    9[COMMON] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         2       0       0       0       0
  2069 ;;      Locals:         2       0       0       0       0
  2070 ;;      Temps:          1       0       0       0       0
  2071 ;;      Totals:         5       0       0       0       0
  2072 ;;Total ram usage:        5 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    2
  2075 ;; This function calls:
  2076 ;;		_LCD_Command
  2077 ;;		_LCD_String
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;;		_Secuencia_Clave
  2081 ;;		_Logica_SensoresHall
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           psect	text229,local,class=CODE,delta=2,merge=1
  2085                           global __ptext229
  2086  039D                     __ptext229:
  2087                           psect	text229
  2088                           	file	"LCD.c"
  2089                           	line	60
  2090                           	global	__size_of_LCD_String_xy
  2091  0029                     	__size_of_LCD_String_xy	equ	__end_of_LCD_String_xy-_LCD_String_xy
  2092                           	
  2093  039D                     _LCD_String_xy:	
  2094                           	opt	stack 3
  2095                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2096                           ;LCD_String_xy@row stored from wreg
  2097  039D  00F8               	movwf	(LCD_String_xy@row)
  2098                           	line	61
  2099                           	
  2100  039E                     l1248:	
  2101                           ;LCD.c: 61: char location=0;
  2102  039E  01F9               	clrf	(LCD_String_xy@location)
  2103                           	line	62
  2104                           	
  2105  039F                     l1250:	
  2106                           ;LCD.c: 62: if(row<=1)
  2107  039F  3002               	movlw	(02h)
  2108  03A0  0278               	subwf	(LCD_String_xy@row),w
  2109  03A1  1803               	skipnc
  2110  03A2  2BA4               	goto	u681
  2111  03A3  2BA5               	goto	u680
  2112  03A4                     u681:
  2113  03A4  2BB2               	goto	l1256
  2114  03A5                     u680:
  2115                           	line	64
  2116                           	
  2117  03A5                     l1252:	
  2118                           ;LCD.c: 63: {
  2119                           ;LCD.c: 64: location = (0x80) | ((pos) & 0x0f);
  2120  03A5  0875               	movf	(LCD_String_xy@pos),w
  2121  03A6  390F               	andlw	0Fh
  2122  03A7  3880               	iorlw	080h
  2123  03A8  00F7               	movwf	(??_LCD_String_xy+0)+0
  2124  03A9  0877               	movf	(??_LCD_String_xy+0)+0,w
  2125  03AA  00F9               	movwf	(LCD_String_xy@location)
  2126                           	line	65
  2127                           	
  2128  03AB                     l1254:	
  2129                           ;LCD.c: 65: LCD_Command(location);
  2130  03AB  0879               	movf	(LCD_String_xy@location),w
  2131  03AC  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  2132                           	line	66
  2133                           ;LCD.c: 66: }
  2134  03B1  2BBF               	goto	l1260
  2135                           	line	67
  2136                           	
  2137  03B2                     l126:	
  2138                           	line	69
  2139                           	
  2140  03B2                     l1256:	
  2141                           ;LCD.c: 67: else
  2142                           ;LCD.c: 68: {
  2143                           ;LCD.c: 69: location = (0xC0) | ((pos) & 0x0f);
  2144  03B2  0875               	movf	(LCD_String_xy@pos),w
  2145  03B3  390F               	andlw	0Fh
  2146  03B4  38C0               	iorlw	0C0h
  2147  03B5  00F7               	movwf	(??_LCD_String_xy+0)+0
  2148  03B6  0877               	movf	(??_LCD_String_xy+0)+0,w
  2149  03B7  00F9               	movwf	(LCD_String_xy@location)
  2150                           	line	70
  2151                           	
  2152  03B8                     l1258:	
  2153                           ;LCD.c: 70: LCD_Command(location);
  2154  03B8  0879               	movf	(LCD_String_xy@location),w
  2155  03B9  120A  118A  2425   	fcall	_LCD_Command
              120A  118A         
  2156  03BE  2BBF               	goto	l1260
  2157                           	line	71
  2158                           	
  2159  03BF                     l127:	
  2160                           	line	74
  2161                           	
  2162  03BF                     l1260:	
  2163                           ;LCD.c: 71: }
  2164                           ;LCD.c: 74: LCD_String(msg);
  2165  03BF  0876               	movf	(LCD_String_xy@msg),w
  2166  03C0  120A  118A  2353   	fcall	_LCD_String
              120A  118A         
  2167                           	line	76
  2168                           	
  2169  03C5                     l128:	
  2170  03C5  0008               	return
  2171                           	opt stack 0
  2172                           GLOBAL	__end_of_LCD_String_xy
  2173  03C6                     	__end_of_LCD_String_xy:
  2174                           	signat	_LCD_String_xy,12408
  2175                           	global	_LCD_Command
  2176                           
  2177 ;; *************** function _LCD_Command *****************
  2178 ;; Defined at:
  2179 ;;		line 18 in file "LCD.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  cmd             1    wreg     unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  cmd             1    2[COMMON] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;		None               void
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       0       0       0
  2194 ;;      Locals:         1       0       0       0       0
  2195 ;;      Temps:          2       0       0       0       0
  2196 ;;      Totals:         3       0       0       0       0
  2197 ;;Total ram usage:        3 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_Secuencia_Clave
  2203 ;;		_Logica_SensoresHall
  2204 ;;		_LCD_Init
  2205 ;;		_LCD_String_xy
  2206 ;;		_LCD_Clear
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           psect	text230,local,class=CODE,delta=2,merge=1
  2210                           global __ptext230
  2211  0425                     __ptext230:
  2212                           psect	text230
  2213                           	file	"LCD.c"
  2214                           	line	18
  2215                           	global	__size_of_LCD_Command
  2216  0034                     	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
  2217                           	
  2218  0425                     _LCD_Command:	
  2219                           	opt	stack 4
  2220                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2221                           ;LCD_Command@cmd stored from wreg
  2222  0425  00F2               	movwf	(LCD_Command@cmd)
  2223                           	line	19
  2224                           	
  2225  0426                     l1184:	
  2226                           ;LCD.c: 19: PORTD = (PORTD & 0x0f) |(0xF0 & cmd);
  2227  0426  30F0               	movlw	(0F0h)
  2228  0427  0572               	andwf	(LCD_Command@cmd),w
  2229  0428  00F0               	movwf	(??_LCD_Command+0)+0
  2230  0429  1283               	bcf	status, 5	;RP0=0, select bank0
  2231  042A  1303               	bcf	status, 6	;RP1=0, select bank0
  2232  042B  0808               	movf	(8),w	;volatile
  2233  042C  390F               	andlw	0Fh
  2234  042D  0470               	iorwf	0+(??_LCD_Command+0)+0,w
  2235  042E  0088               	movwf	(8)	;volatile
  2236                           	line	20
  2237                           	
  2238  042F                     l1186:	
  2239                           ;LCD.c: 20: PORTDbits.RD3 = 0;
  2240  042F  1188               	bcf	(8),3	;volatile
  2241                           	line	21
  2242                           	
  2243  0430                     l1188:	
  2244                           ;LCD.c: 21: PORTDbits.RD1 = 1;
  2245  0430  1488               	bsf	(8),1	;volatile
  2246                           	line	22
  2247                           	
  2248  0431                     l1190:	
  2249                           ;LCD.c: 22: _nop();
  2250  0431  0000               	nop
  2251                           	line	23
  2252                           	
  2253  0432                     l1192:	
  2254                           ;LCD.c: 23: PORTDbits.RD1 = 0;
  2255  0432  1283               	bcf	status, 5	;RP0=0, select bank0
  2256  0433  1303               	bcf	status, 6	;RP1=0, select bank0
  2257  0434  1088               	bcf	(8),1	;volatile
  2258                           	line	24
  2259                           	
  2260  0435                     l1194:	
  2261                           ;LCD.c: 24: _delay((unsigned long)((1)*(4000000/4000.0)));
  2262                           	opt asmopt_off
  2263  0435  30F9               movlw	249
  2264  0436  00F0               movwf	(??_LCD_Command+0)+0,f
  2265  0437                     u897:
  2266  0437  0000               	nop
  2267  0438  0BF0               decfsz	(??_LCD_Command+0)+0,f
  2268  0439  2C37               	goto	u897
  2269  043A  2C3B               	nop2	;nop
  2270  043B  0000               	nop
  2271                           opt asmopt_on
  2272                           
  2273                           	line	25
  2274                           	
  2275  043C                     l1196:	
  2276                           ;LCD.c: 25: PORTD = (PORTD & 0x0f) | (cmd<<4);
  2277  043C  0872               	movf	(LCD_Command@cmd),w
  2278  043D  00F0               	movwf	(??_LCD_Command+0)+0
  2279  043E  3004               	movlw	04h
  2280  043F                     u655:
  2281  043F  1003               	clrc
  2282  0440  0DF0               	rlf	(??_LCD_Command+0)+0,f
  2283  0441  3EFF               	addlw	-1
  2284  0442  1D03               	skipz
  2285  0443  2C3F               	goto	u655
  2286  0444  1283               	bcf	status, 5	;RP0=0, select bank0
  2287  0445  1303               	bcf	status, 6	;RP1=0, select bank0
  2288  0446  0808               	movf	(8),w	;volatile
  2289  0447  390F               	andlw	0Fh
  2290  0448  0470               	iorwf	0+(??_LCD_Command+0)+0,w
  2291  0449  0088               	movwf	(8)	;volatile
  2292                           	line	26
  2293                           	
  2294  044A                     l1198:	
  2295                           ;LCD.c: 26: PORTDbits.RD1 = 1;
  2296  044A  1488               	bsf	(8),1	;volatile
  2297                           	line	27
  2298                           	
  2299  044B                     l1200:	
  2300                           ;LCD.c: 27: _nop();
  2301  044B  0000               	nop
  2302                           	line	28
  2303                           	
  2304  044C                     l1202:	
  2305                           ;LCD.c: 28: PORTDbits.RD1 = 0;
  2306  044C  1283               	bcf	status, 5	;RP0=0, select bank0
  2307  044D  1303               	bcf	status, 6	;RP1=0, select bank0
  2308  044E  1088               	bcf	(8),1	;volatile
  2309                           	line	29
  2310                           ;LCD.c: 29: _delay((unsigned long)((3)*(4000000/4000.0)));
  2311                           	opt asmopt_off
  2312  044F  3004               movlw	4
  2313  0450  00F1               movwf	((??_LCD_Command+0)+0+1),f
  2314  0451  30E4               	movlw	228
  2315  0452  00F0               movwf	((??_LCD_Command+0)+0),f
  2316  0453                     u907:
  2317  0453  0BF0               	decfsz	((??_LCD_Command+0)+0),f
  2318  0454  2C53               	goto	u907
  2319  0455  0BF1               	decfsz	((??_LCD_Command+0)+0+1),f
  2320  0456  2C53               	goto	u907
  2321  0457  0000               	nop
  2322                           opt asmopt_on
  2323                           
  2324                           	line	30
  2325                           	
  2326  0458                     l114:	
  2327  0458  0008               	return
  2328                           	opt stack 0
  2329                           GLOBAL	__end_of_LCD_Command
  2330  0459                     	__end_of_LCD_Command:
  2331                           	signat	_LCD_Command,4216
  2332                           	global	_keyfind
  2333                           
  2334 ;; *************** function _keyfind *****************
  2335 ;; Defined at:
  2336 ;;		line 41 in file "keypad.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  temp1           1    0        unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      unsigned char 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0
  2352 ;;      Temps:          3       0       0       0       0
  2353 ;;      Totals:         3       0       0       0       0
  2354 ;;Total ram usage:        3 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_Secuencia_Clave
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           psect	text231,local,class=CODE,delta=2,merge=1
  2363                           global __ptext231
  2364  06AE                     __ptext231:
  2365                           psect	text231
  2366                           	file	"keypad.c"
  2367                           	line	41
  2368                           	global	__size_of_keyfind
  2369  0152                     	__size_of_keyfind	equ	__end_of_keyfind-_keyfind
  2370                           	
  2371  06AE                     _keyfind:	
  2372                           	opt	stack 5
  2373                           ; Regs used in _keyfind: [wreg-fsr0h+status,2+status,0]
  2374                           	line	43
  2375                           	
  2376  06AE                     l1076:	
  2377                           ;keypad.c: 43: TRISB = 0xf0;
  2378  06AE  30F0               	movlw	(0F0h)
  2379  06AF  1683               	bsf	status, 5	;RP0=1, select bank1
  2380  06B0  1303               	bcf	status, 6	;RP1=0, select bank1
  2381  06B1  0086               	movwf	(134)^080h	;volatile
  2382                           	line	46
  2383                           ;keypad.c: 44: unsigned char temp1;
  2384                           ;keypad.c: 46: PORTB = 0xf0;
  2385  06B2  30F0               	movlw	(0F0h)
  2386  06B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2387  06B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2388  06B5  0086               	movwf	(6)	;volatile
  2389  06B6  2EB8               	goto	l1078
  2390                           	line	47
  2391                           ;keypad.c: 47: do
  2392                           	
  2393  06B7                     l161:	
  2394  06B7  2EB8               	goto	l1078
  2395                           	line	49
  2396                           ;keypad.c: 48: {
  2397                           ;keypad.c: 49: do
  2398                           	
  2399  06B8                     l162:	
  2400                           	line	52
  2401                           	
  2402  06B8                     l1078:	
  2403                           ;keypad.c: 50: {
  2404                           ;keypad.c: 52: col_loc = PORTB & 0xf0;
  2405  06B8  0806               	movf	(6),w	;volatile
  2406  06B9  39F0               	andlw	0F0h
  2407  06BA  00F0               	movwf	(??_keyfind+0)+0
  2408  06BB  0870               	movf	(??_keyfind+0)+0,w
  2409  06BC  00FD               	movwf	(_col_loc)
  2410                           	line	54
  2411                           	
  2412  06BD                     l1080:	
  2413                           ;keypad.c: 54: }while(col_loc!=0xf0);
  2414  06BD  087D               	movf	(_col_loc),w
  2415  06BE  3AF0               	xorlw	0F0h
  2416  06BF  1D03               	skipz
  2417  06C0  2EC2               	goto	u461
  2418  06C1  2EC3               	goto	u460
  2419  06C2                     u461:
  2420  06C2  2EB8               	goto	l1078
  2421  06C3                     u460:
  2422  06C3  2EC4               	goto	l1082
  2423                           	
  2424  06C4                     l163:	
  2425                           	line	55
  2426                           	
  2427  06C4                     l1082:	
  2428                           ;keypad.c: 55: col_loc = PORTB & 0xf0;
  2429  06C4  0806               	movf	(6),w	;volatile
  2430  06C5  39F0               	andlw	0F0h
  2431  06C6  00F0               	movwf	(??_keyfind+0)+0
  2432  06C7  0870               	movf	(??_keyfind+0)+0,w
  2433  06C8  00FD               	movwf	(_col_loc)
  2434                           	line	56
  2435                           	
  2436  06C9                     l1084:	
  2437                           ;keypad.c: 56: }while(col_loc!=0xf0);
  2438  06C9  087D               	movf	(_col_loc),w
  2439  06CA  3AF0               	xorlw	0F0h
  2440  06CB  1D03               	skipz
  2441  06CC  2ECE               	goto	u471
  2442  06CD  2ECF               	goto	u470
  2443  06CE                     u471:
  2444  06CE  2EB8               	goto	l1078
  2445  06CF                     u470:
  2446  06CF  2ED0               	goto	l1086
  2447                           	
  2448  06D0                     l164:	
  2449                           	line	58
  2450                           	
  2451  06D0                     l1086:	
  2452                           ;keypad.c: 58: _delay((unsigned long)((50)*(4000000/4000.0)));
  2453                           	opt asmopt_off
  2454  06D0  3041               movlw	65
  2455  06D1  00F1               movwf	((??_keyfind+0)+0+1),f
  2456  06D2  30EE               	movlw	238
  2457  06D3  00F0               movwf	((??_keyfind+0)+0),f
  2458  06D4                     u917:
  2459  06D4  0BF0               	decfsz	((??_keyfind+0)+0),f
  2460  06D5  2ED4               	goto	u917
  2461  06D6  0BF1               	decfsz	((??_keyfind+0)+0+1),f
  2462  06D7  2ED4               	goto	u917
  2463  06D8  0000               	nop
  2464                           opt asmopt_on
  2465                           
  2466                           	line	59
  2467                           ;keypad.c: 59: PORTB = 0xf0;
  2468  06D9  30F0               	movlw	(0F0h)
  2469  06DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2470  06DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2471  06DC  0086               	movwf	(6)	;volatile
  2472  06DD  2EDF               	goto	l1088
  2473                           	line	60
  2474                           ;keypad.c: 60: do
  2475                           	
  2476  06DE                     l165:	
  2477  06DE  2EDF               	goto	l1088
  2478                           	line	61
  2479                           ;keypad.c: 61: { do
  2480                           	
  2481  06DF                     l166:	
  2482                           	line	65
  2483                           	
  2484  06DF                     l1088:	
  2485                           ;keypad.c: 63: {
  2486                           ;keypad.c: 65: col_loc = PORTB & 0xf0;
  2487  06DF  0806               	movf	(6),w	;volatile
  2488  06E0  39F0               	andlw	0F0h
  2489  06E1  00F0               	movwf	(??_keyfind+0)+0
  2490  06E2  0870               	movf	(??_keyfind+0)+0,w
  2491  06E3  00FD               	movwf	(_col_loc)
  2492                           	line	66
  2493                           	
  2494  06E4                     l1090:	
  2495                           ;keypad.c: 66: }while(col_loc==0xf0);
  2496  06E4  087D               	movf	(_col_loc),w
  2497  06E5  3AF0               	xorlw	0F0h
  2498  06E6  1903               	skipnz
  2499  06E7  2EE9               	goto	u481
  2500  06E8  2EEA               	goto	u480
  2501  06E9                     u481:
  2502  06E9  2EDF               	goto	l1088
  2503  06EA                     u480:
  2504  06EA  2EEB               	goto	l1092
  2505                           	
  2506  06EB                     l167:	
  2507                           	line	67
  2508                           	
  2509  06EB                     l1092:	
  2510                           ;keypad.c: 67: col_loc = PORTB & 0xf0;
  2511  06EB  0806               	movf	(6),w	;volatile
  2512  06EC  39F0               	andlw	0F0h
  2513  06ED  00F0               	movwf	(??_keyfind+0)+0
  2514  06EE  0870               	movf	(??_keyfind+0)+0,w
  2515  06EF  00FD               	movwf	(_col_loc)
  2516                           	line	68
  2517                           	
  2518  06F0                     l1094:	
  2519                           ;keypad.c: 68: }while(col_loc==0xf0);
  2520  06F0  087D               	movf	(_col_loc),w
  2521  06F1  3AF0               	xorlw	0F0h
  2522  06F2  1903               	skipnz
  2523  06F3  2EF5               	goto	u491
  2524  06F4  2EF6               	goto	u490
  2525  06F5                     u491:
  2526  06F5  2EDF               	goto	l1088
  2527  06F6                     u490:
  2528  06F6  2EF7               	goto	l1096
  2529                           	
  2530  06F7                     l168:	
  2531                           	line	70
  2532                           	
  2533  06F7                     l1096:	
  2534                           ;keypad.c: 70: _delay((unsigned long)((20)*(4000000/4000.0)));
  2535                           	opt asmopt_off
  2536  06F7  301A               movlw	26
  2537  06F8  00F1               movwf	((??_keyfind+0)+0+1),f
  2538  06F9  30F8               	movlw	248
  2539  06FA  00F0               movwf	((??_keyfind+0)+0),f
  2540  06FB                     u927:
  2541  06FB  0BF0               	decfsz	((??_keyfind+0)+0),f
  2542  06FC  2EFB               	goto	u927
  2543  06FD  0BF1               	decfsz	((??_keyfind+0)+0+1),f
  2544  06FE  2EFB               	goto	u927
  2545  06FF  0000               	nop
  2546                           opt asmopt_on
  2547                           
  2548                           	line	72
  2549                           	
  2550  0700                     l1098:	
  2551                           ;keypad.c: 72: col_loc = PORTB & 0xf0;
  2552  0700  1283               	bcf	status, 5	;RP0=0, select bank0
  2553  0701  1303               	bcf	status, 6	;RP1=0, select bank0
  2554  0702  0806               	movf	(6),w	;volatile
  2555  0703  39F0               	andlw	0F0h
  2556  0704  00F0               	movwf	(??_keyfind+0)+0
  2557  0705  0870               	movf	(??_keyfind+0)+0,w
  2558  0706  00FD               	movwf	(_col_loc)
  2559  0707  2F08               	goto	l1100
  2560                           	line	76
  2561                           ;keypad.c: 76: while(1)
  2562                           	
  2563  0708                     l169:	
  2564                           	line	78
  2565                           	
  2566  0708                     l1100:	
  2567                           ;keypad.c: 77: {
  2568                           ;keypad.c: 78: PORTB = 0xfe;
  2569  0708  30FE               	movlw	(0FEh)
  2570  0709  0086               	movwf	(6)	;volatile
  2571                           	line	79
  2572                           ;keypad.c: 79: col_loc = PORTB & 0xf0;
  2573  070A  0806               	movf	(6),w	;volatile
  2574  070B  39F0               	andlw	0F0h
  2575  070C  00F0               	movwf	(??_keyfind+0)+0
  2576  070D  0870               	movf	(??_keyfind+0)+0,w
  2577  070E  00FD               	movwf	(_col_loc)
  2578                           	line	80
  2579                           	
  2580  070F                     l1102:	
  2581                           ;keypad.c: 80: temp_col=col_loc;
  2582  070F  087D               	movf	(_col_loc),w
  2583  0710  00F0               	movwf	(??_keyfind+0)+0
  2584  0711  0870               	movf	(??_keyfind+0)+0,w
  2585  0712  00C1               	movwf	(_temp_col)
  2586                           	line	81
  2587                           	
  2588  0713                     l1104:	
  2589                           ;keypad.c: 81: if(col_loc!=0xf0)
  2590  0713  087D               	movf	(_col_loc),w
  2591  0714  3AF0               	xorlw	0F0h
  2592  0715  1903               	skipnz
  2593  0716  2F18               	goto	u501
  2594  0717  2F19               	goto	u500
  2595  0718                     u501:
  2596  0718  2F29               	goto	l1112
  2597  0719                     u500:
  2598                           	line	83
  2599                           	
  2600  0719                     l1106:	
  2601                           ;keypad.c: 82: {
  2602                           ;keypad.c: 83: rowloc=0;
  2603  0719  01C0               	clrf	(_rowloc)
  2604                           	line	84
  2605                           ;keypad.c: 84: while(temp_col!=0xf0)
  2606  071A  2F21               	goto	l1110
  2607                           	
  2608  071B                     l172:	
  2609                           	line	86
  2610                           	
  2611  071B                     l1108:	
  2612                           ;keypad.c: 85: {
  2613                           ;keypad.c: 86: temp_col = PORTB & 0xf0;
  2614  071B  0806               	movf	(6),w	;volatile
  2615  071C  39F0               	andlw	0F0h
  2616  071D  00F0               	movwf	(??_keyfind+0)+0
  2617  071E  0870               	movf	(??_keyfind+0)+0,w
  2618  071F  00C1               	movwf	(_temp_col)
  2619  0720  2F21               	goto	l1110
  2620                           	line	87
  2621                           	
  2622  0721                     l171:	
  2623                           	line	84
  2624                           	
  2625  0721                     l1110:	
  2626  0721  0841               	movf	(_temp_col),w
  2627  0722  3AF0               	xorlw	0F0h
  2628  0723  1D03               	skipz
  2629  0724  2F26               	goto	u511
  2630  0725  2F27               	goto	u510
  2631  0726                     u511:
  2632  0726  2F1B               	goto	l1108
  2633  0727                     u510:
  2634  0727  2F97               	goto	l1154
  2635                           	
  2636  0728                     l173:	
  2637                           	line	88
  2638                           ;keypad.c: 87: }
  2639                           ;keypad.c: 88: break;
  2640  0728  2F97               	goto	l1154
  2641                           	line	89
  2642                           	
  2643  0729                     l170:	
  2644                           	line	91
  2645                           	
  2646  0729                     l1112:	
  2647                           ;keypad.c: 89: }
  2648                           ;keypad.c: 91: PORTB = 0xfd;
  2649  0729  30FD               	movlw	(0FDh)
  2650  072A  0086               	movwf	(6)	;volatile
  2651                           	line	92
  2652                           	
  2653  072B                     l1114:	
  2654                           ;keypad.c: 92: col_loc = PORTB & 0xf0;
  2655  072B  0806               	movf	(6),w	;volatile
  2656  072C  39F0               	andlw	0F0h
  2657  072D  00F0               	movwf	(??_keyfind+0)+0
  2658  072E  0870               	movf	(??_keyfind+0)+0,w
  2659  072F  00FD               	movwf	(_col_loc)
  2660                           	line	93
  2661                           	
  2662  0730                     l1116:	
  2663                           ;keypad.c: 93: temp_col=col_loc;
  2664  0730  087D               	movf	(_col_loc),w
  2665  0731  00F0               	movwf	(??_keyfind+0)+0
  2666  0732  0870               	movf	(??_keyfind+0)+0,w
  2667  0733  00C1               	movwf	(_temp_col)
  2668                           	line	94
  2669                           	
  2670  0734                     l1118:	
  2671                           ;keypad.c: 94: if(col_loc!=0xf0)
  2672  0734  087D               	movf	(_col_loc),w
  2673  0735  3AF0               	xorlw	0F0h
  2674  0736  1903               	skipnz
  2675  0737  2F39               	goto	u521
  2676  0738  2F3A               	goto	u520
  2677  0739                     u521:
  2678  0739  2F4C               	goto	l1126
  2679  073A                     u520:
  2680                           	line	96
  2681                           	
  2682  073A                     l1120:	
  2683                           ;keypad.c: 95: {
  2684                           ;keypad.c: 96: rowloc=1;
  2685  073A  01C0               	clrf	(_rowloc)
  2686  073B  1403               	bsf	status,0
  2687  073C  0DC0               	rlf	(_rowloc),f
  2688                           	line	97
  2689                           ;keypad.c: 97: while(temp_col!=0xf0)
  2690  073D  2F44               	goto	l1124
  2691                           	
  2692  073E                     l177:	
  2693                           	line	99
  2694                           	
  2695  073E                     l1122:	
  2696                           ;keypad.c: 98: {
  2697                           ;keypad.c: 99: temp_col = PORTB & 0xf0;
  2698  073E  0806               	movf	(6),w	;volatile
  2699  073F  39F0               	andlw	0F0h
  2700  0740  00F0               	movwf	(??_keyfind+0)+0
  2701  0741  0870               	movf	(??_keyfind+0)+0,w
  2702  0742  00C1               	movwf	(_temp_col)
  2703  0743  2F44               	goto	l1124
  2704                           	line	100
  2705                           	
  2706  0744                     l176:	
  2707                           	line	97
  2708                           	
  2709  0744                     l1124:	
  2710  0744  0841               	movf	(_temp_col),w
  2711  0745  3AF0               	xorlw	0F0h
  2712  0746  1D03               	skipz
  2713  0747  2F49               	goto	u531
  2714  0748  2F4A               	goto	u530
  2715  0749                     u531:
  2716  0749  2F3E               	goto	l1122
  2717  074A                     u530:
  2718  074A  2F97               	goto	l1154
  2719                           	
  2720  074B                     l178:	
  2721                           	line	101
  2722                           ;keypad.c: 100: }
  2723                           ;keypad.c: 101: break;
  2724  074B  2F97               	goto	l1154
  2725                           	line	102
  2726                           	
  2727  074C                     l175:	
  2728                           	line	104
  2729                           	
  2730  074C                     l1126:	
  2731                           ;keypad.c: 102: }
  2732                           ;keypad.c: 104: PORTB = 0xfb;
  2733  074C  30FB               	movlw	(0FBh)
  2734  074D  0086               	movwf	(6)	;volatile
  2735                           	line	105
  2736                           	
  2737  074E                     l1128:	
  2738                           ;keypad.c: 105: col_loc = PORTB & 0xf0;
  2739  074E  0806               	movf	(6),w	;volatile
  2740  074F  39F0               	andlw	0F0h
  2741  0750  00F0               	movwf	(??_keyfind+0)+0
  2742  0751  0870               	movf	(??_keyfind+0)+0,w
  2743  0752  00FD               	movwf	(_col_loc)
  2744                           	line	106
  2745                           	
  2746  0753                     l1130:	
  2747                           ;keypad.c: 106: temp_col=col_loc;
  2748  0753  087D               	movf	(_col_loc),w
  2749  0754  00F0               	movwf	(??_keyfind+0)+0
  2750  0755  0870               	movf	(??_keyfind+0)+0,w
  2751  0756  00C1               	movwf	(_temp_col)
  2752                           	line	107
  2753                           	
  2754  0757                     l1132:	
  2755                           ;keypad.c: 107: if(col_loc!=0xf0)
  2756  0757  087D               	movf	(_col_loc),w
  2757  0758  3AF0               	xorlw	0F0h
  2758  0759  1903               	skipnz
  2759  075A  2F5C               	goto	u541
  2760  075B  2F5D               	goto	u540
  2761  075C                     u541:
  2762  075C  2F70               	goto	l1140
  2763  075D                     u540:
  2764                           	line	109
  2765                           	
  2766  075D                     l1134:	
  2767                           ;keypad.c: 108: {
  2768                           ;keypad.c: 109: rowloc=2;
  2769  075D  3002               	movlw	(02h)
  2770  075E  00F0               	movwf	(??_keyfind+0)+0
  2771  075F  0870               	movf	(??_keyfind+0)+0,w
  2772  0760  00C0               	movwf	(_rowloc)
  2773                           	line	110
  2774                           ;keypad.c: 110: while(temp_col!=0xf0)
  2775  0761  2F68               	goto	l1138
  2776                           	
  2777  0762                     l181:	
  2778                           	line	112
  2779                           	
  2780  0762                     l1136:	
  2781                           ;keypad.c: 111: {
  2782                           ;keypad.c: 112: temp_col = PORTB & 0xf0;
  2783  0762  0806               	movf	(6),w	;volatile
  2784  0763  39F0               	andlw	0F0h
  2785  0764  00F0               	movwf	(??_keyfind+0)+0
  2786  0765  0870               	movf	(??_keyfind+0)+0,w
  2787  0766  00C1               	movwf	(_temp_col)
  2788  0767  2F68               	goto	l1138
  2789                           	line	113
  2790                           	
  2791  0768                     l180:	
  2792                           	line	110
  2793                           	
  2794  0768                     l1138:	
  2795  0768  0841               	movf	(_temp_col),w
  2796  0769  3AF0               	xorlw	0F0h
  2797  076A  1D03               	skipz
  2798  076B  2F6D               	goto	u551
  2799  076C  2F6E               	goto	u550
  2800  076D                     u551:
  2801  076D  2F62               	goto	l1136
  2802  076E                     u550:
  2803  076E  2F97               	goto	l1154
  2804                           	
  2805  076F                     l182:	
  2806                           	line	114
  2807                           ;keypad.c: 113: }
  2808                           ;keypad.c: 114: break;
  2809  076F  2F97               	goto	l1154
  2810                           	line	115
  2811                           	
  2812  0770                     l179:	
  2813                           	line	117
  2814                           	
  2815  0770                     l1140:	
  2816                           ;keypad.c: 115: }
  2817                           ;keypad.c: 117: PORTB = 0xf7;
  2818  0770  30F7               	movlw	(0F7h)
  2819  0771  0086               	movwf	(6)	;volatile
  2820                           	line	118
  2821                           	
  2822  0772                     l1142:	
  2823                           ;keypad.c: 118: col_loc = PORTB & 0xf0;
  2824  0772  0806               	movf	(6),w	;volatile
  2825  0773  39F0               	andlw	0F0h
  2826  0774  00F0               	movwf	(??_keyfind+0)+0
  2827  0775  0870               	movf	(??_keyfind+0)+0,w
  2828  0776  00FD               	movwf	(_col_loc)
  2829                           	line	119
  2830                           	
  2831  0777                     l1144:	
  2832                           ;keypad.c: 119: temp_col=col_loc;
  2833  0777  087D               	movf	(_col_loc),w
  2834  0778  00F0               	movwf	(??_keyfind+0)+0
  2835  0779  0870               	movf	(??_keyfind+0)+0,w
  2836  077A  00C1               	movwf	(_temp_col)
  2837                           	line	120
  2838                           	
  2839  077B                     l1146:	
  2840                           ;keypad.c: 120: if(col_loc!=0xf0)
  2841  077B  087D               	movf	(_col_loc),w
  2842  077C  3AF0               	xorlw	0F0h
  2843  077D  1903               	skipnz
  2844  077E  2F80               	goto	u561
  2845  077F  2F81               	goto	u560
  2846  0780                     u561:
  2847  0780  2F08               	goto	l1100
  2848  0781                     u560:
  2849                           	line	122
  2850                           	
  2851  0781                     l1148:	
  2852                           ;keypad.c: 121: {
  2853                           ;keypad.c: 122: rowloc=3;
  2854  0781  3003               	movlw	(03h)
  2855  0782  00F0               	movwf	(??_keyfind+0)+0
  2856  0783  0870               	movf	(??_keyfind+0)+0,w
  2857  0784  00C0               	movwf	(_rowloc)
  2858                           	line	123
  2859                           ;keypad.c: 123: while(temp_col!=0xf0)
  2860  0785  2F8C               	goto	l1152
  2861                           	
  2862  0786                     l185:	
  2863                           	line	125
  2864                           	
  2865  0786                     l1150:	
  2866                           ;keypad.c: 124: {
  2867                           ;keypad.c: 125: temp_col = PORTB & 0xf0;
  2868  0786  0806               	movf	(6),w	;volatile
  2869  0787  39F0               	andlw	0F0h
  2870  0788  00F0               	movwf	(??_keyfind+0)+0
  2871  0789  0870               	movf	(??_keyfind+0)+0,w
  2872  078A  00C1               	movwf	(_temp_col)
  2873  078B  2F8C               	goto	l1152
  2874                           	line	126
  2875                           	
  2876  078C                     l184:	
  2877                           	line	123
  2878                           	
  2879  078C                     l1152:	
  2880  078C  0841               	movf	(_temp_col),w
  2881  078D  3AF0               	xorlw	0F0h
  2882  078E  1D03               	skipz
  2883  078F  2F91               	goto	u571
  2884  0790  2F92               	goto	u570
  2885  0791                     u571:
  2886  0791  2F86               	goto	l1150
  2887  0792                     u570:
  2888  0792  2F97               	goto	l1154
  2889                           	
  2890  0793                     l186:	
  2891                           	line	127
  2892                           ;keypad.c: 126: }
  2893                           ;keypad.c: 127: break;
  2894  0793  2F97               	goto	l1154
  2895                           	line	128
  2896                           	
  2897  0794                     l183:	
  2898  0794  2F08               	goto	l1100
  2899                           	line	130
  2900                           	
  2901  0795                     l187:	
  2902                           	line	76
  2903  0795  2F08               	goto	l1100
  2904                           	
  2905  0796                     l174:	
  2906  0796  2F97               	goto	l1154
  2907                           	line	134
  2908                           ;keypad.c: 128: }
  2909                           ;keypad.c: 130: }
  2910                           ;keypad.c: 134: while(1)
  2911                           	
  2912  0797                     l188:	
  2913                           	line	137
  2914                           	
  2915  0797                     l1154:	
  2916                           ;keypad.c: 135: {
  2917                           ;keypad.c: 137: if(col_loc==0xe0)
  2918  0797  087D               	movf	(_col_loc),w
  2919  0798  3AE0               	xorlw	0E0h
  2920  0799  1D03               	skipz
  2921  079A  2F9C               	goto	u581
  2922  079B  2F9D               	goto	u580
  2923  079C                     u581:
  2924  079C  2FAE               	goto	l1162
  2925  079D                     u580:
  2926                           	line	139
  2927                           	
  2928  079D                     l1156:	
  2929                           ;keypad.c: 138: {
  2930                           ;keypad.c: 139: return keypad[rowloc][0];
  2931  079D  0840               	movf	(_rowloc),w
  2932  079E  00F0               	movwf	(??_keyfind+0)+0
  2933  079F  3001               	movlw	(02h)-1
  2934  07A0                     u595:
  2935  07A0  1003               	clrc
  2936  07A1  0DF0               	rlf	(??_keyfind+0)+0,f
  2937  07A2  3EFF               	addlw	-1
  2938  07A3  1D03               	skipz
  2939  07A4  2FA0               	goto	u595
  2940  07A5  1003               	clrc
  2941  07A6  0D70               	rlf	(??_keyfind+0)+0,w
  2942  07A7  3E20               	addlw	_keypad&0ffh
  2943  07A8  0084               	movwf	fsr0
  2944  07A9  1383               	bcf	status, 7	;select IRP bank0
  2945  07AA  0800               	movf	indf,w
  2946  07AB  2FFF               	goto	l190
  2947                           	
  2948  07AC                     l1158:	
  2949  07AC  2FFF               	goto	l190
  2950                           	line	140
  2951                           	
  2952  07AD                     l1160:	
  2953                           ;keypad.c: 140: }
  2954  07AD  2F97               	goto	l1154
  2955                           	line	141
  2956                           	
  2957  07AE                     l189:	
  2958                           	line	142
  2959                           	
  2960  07AE                     l1162:	
  2961                           ;keypad.c: 141: else
  2962                           ;keypad.c: 142: if(col_loc==0xd0)
  2963  07AE  087D               	movf	(_col_loc),w
  2964  07AF  3AD0               	xorlw	0D0h
  2965  07B0  1D03               	skipz
  2966  07B1  2FB3               	goto	u601
  2967  07B2  2FB4               	goto	u600
  2968  07B3                     u601:
  2969  07B3  2FC6               	goto	l1170
  2970  07B4                     u600:
  2971                           	line	144
  2972                           	
  2973  07B4                     l1164:	
  2974                           ;keypad.c: 143: {
  2975                           ;keypad.c: 144: return keypad[rowloc][1];
  2976  07B4  0840               	movf	(_rowloc),w
  2977  07B5  00F0               	movwf	(??_keyfind+0)+0
  2978  07B6  3001               	movlw	(02h)-1
  2979  07B7                     u615:
  2980  07B7  1003               	clrc
  2981  07B8  0DF0               	rlf	(??_keyfind+0)+0,f
  2982  07B9  3EFF               	addlw	-1
  2983  07BA  1D03               	skipz
  2984  07BB  2FB7               	goto	u615
  2985  07BC  1003               	clrc
  2986  07BD  0D70               	rlf	(??_keyfind+0)+0,w
  2987  07BE  3E01               	addlw	01h
  2988  07BF  3E20               	addlw	_keypad&0ffh
  2989  07C0  0084               	movwf	fsr0
  2990  07C1  1383               	bcf	status, 7	;select IRP bank0
  2991  07C2  0800               	movf	indf,w
  2992  07C3  2FFF               	goto	l190
  2993                           	
  2994  07C4                     l1166:	
  2995  07C4  2FFF               	goto	l190
  2996                           	line	145
  2997                           	
  2998  07C5                     l1168:	
  2999                           ;keypad.c: 145: }
  3000  07C5  2F97               	goto	l1154
  3001                           	line	146
  3002                           	
  3003  07C6                     l192:	
  3004                           	line	147
  3005                           	
  3006  07C6                     l1170:	
  3007                           ;keypad.c: 146: else
  3008                           ;keypad.c: 147: if(col_loc==0xb0)
  3009  07C6  087D               	movf	(_col_loc),w
  3010  07C7  3AB0               	xorlw	0B0h
  3011  07C8  1D03               	skipz
  3012  07C9  2FCB               	goto	u621
  3013  07CA  2FCC               	goto	u620
  3014  07CB                     u621:
  3015  07CB  2FDE               	goto	l1178
  3016  07CC                     u620:
  3017                           	line	149
  3018                           	
  3019  07CC                     l1172:	
  3020                           ;keypad.c: 148: {
  3021                           ;keypad.c: 149: return keypad[rowloc][2];
  3022  07CC  0840               	movf	(_rowloc),w
  3023  07CD  00F0               	movwf	(??_keyfind+0)+0
  3024  07CE  3001               	movlw	(02h)-1
  3025  07CF                     u635:
  3026  07CF  1003               	clrc
  3027  07D0  0DF0               	rlf	(??_keyfind+0)+0,f
  3028  07D1  3EFF               	addlw	-1
  3029  07D2  1D03               	skipz
  3030  07D3  2FCF               	goto	u635
  3031  07D4  1003               	clrc
  3032  07D5  0D70               	rlf	(??_keyfind+0)+0,w
  3033  07D6  3E02               	addlw	02h
  3034  07D7  3E20               	addlw	_keypad&0ffh
  3035  07D8  0084               	movwf	fsr0
  3036  07D9  1383               	bcf	status, 7	;select IRP bank0
  3037  07DA  0800               	movf	indf,w
  3038  07DB  2FFF               	goto	l190
  3039                           	
  3040  07DC                     l1174:	
  3041  07DC  2FFF               	goto	l190
  3042                           	line	150
  3043                           	
  3044  07DD                     l1176:	
  3045                           ;keypad.c: 150: }
  3046  07DD  2F97               	goto	l1154
  3047                           	line	151
  3048                           	
  3049  07DE                     l194:	
  3050                           	line	154
  3051                           	
  3052  07DE                     l1178:	
  3053                           ;keypad.c: 151: else
  3054                           ;keypad.c: 153: {
  3055                           ;keypad.c: 154: return keypad[rowloc][3];
  3056  07DE  0840               	movf	(_rowloc),w
  3057  07DF  00F0               	movwf	(??_keyfind+0)+0
  3058  07E0  3001               	movlw	(02h)-1
  3059  07E1                     u645:
  3060  07E1  1003               	clrc
  3061  07E2  0DF0               	rlf	(??_keyfind+0)+0,f
  3062  07E3  3EFF               	addlw	-1
  3063  07E4  1D03               	skipz
  3064  07E5  2FE1               	goto	u645
  3065  07E6  1003               	clrc
  3066  07E7  0D70               	rlf	(??_keyfind+0)+0,w
  3067  07E8  3E03               	addlw	03h
  3068  07E9  3E20               	addlw	_keypad&0ffh
  3069  07EA  0084               	movwf	fsr0
  3070  07EB  1383               	bcf	status, 7	;select IRP bank0
  3071  07EC  0800               	movf	indf,w
  3072  07ED  2FFF               	goto	l190
  3073                           	
  3074  07EE                     l1180:	
  3075  07EE  2FFF               	goto	l190
  3076                           	line	155
  3077                           	
  3078  07EF                     l195:	
  3079  07EF  2F97               	goto	l1154
  3080                           	
  3081  07F0                     l193:	
  3082  07F0  2F97               	goto	l1154
  3083                           	
  3084  07F1                     l191:	
  3085  07F1  2F97               	goto	l1154
  3086                           	line	156
  3087                           	
  3088  07F2                     l196:	
  3089                           	line	134
  3090  07F2  2F97               	goto	l1154
  3091                           	
  3092  07F3                     l197:	
  3093                           	line	158
  3094                           	
  3095  07F3                     l1182:	
  3096                           ;keypad.c: 155: }
  3097                           ;keypad.c: 156: }
  3098                           ;keypad.c: 158: _delay((unsigned long)((300)*(4000000/4000.0)));
  3099                           	opt asmopt_off
  3100  07F3  3002               movlw  2
  3101  07F4  00F2               movwf	((??_keyfind+0)+0+2),f
  3102  07F5  3086               movlw	134
  3103  07F6  00F1               movwf	((??_keyfind+0)+0+1),f
  3104  07F7  3099               	movlw	153
  3105  07F8  00F0               movwf	((??_keyfind+0)+0),f
  3106  07F9                     u937:
  3107  07F9  0BF0               	decfsz	((??_keyfind+0)+0),f
  3108  07FA  2FF9               	goto	u937
  3109  07FB  0BF1               	decfsz	((??_keyfind+0)+0+1),f
  3110  07FC  2FF9               	goto	u937
  3111  07FD  0BF2               	decfsz	((??_keyfind+0)+0+2),f
  3112  07FE  2FF9               	goto	u937
  3113                           opt asmopt_on
  3114                           
  3115                           	line	159
  3116                           	
  3117  07FF                     l190:	
  3118  07FF  0008               	return
  3119                           	opt stack 0
  3120                           GLOBAL	__end_of_keyfind
  3121  0800                     	__end_of_keyfind:
  3122                           	signat	_keyfind,89
  3123                           	global	_strcmp
  3124                           
  3125 ;; *************** function _strcmp *****************
  3126 ;; Defined at:
  3127 ;;		line 34 in file "C:\Program Files (x86)\microchip\xc8\v1.00\sources\strcmp.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  s1              1    wreg     PTR const unsigned char 
  3130 ;;		 -> pass_user(5), 
  3131 ;;  s2              1    0[COMMON] PTR const unsigned char 
  3132 ;;		 -> password(5), 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  s1              1    5[COMMON] PTR const unsigned char 
  3135 ;;		 -> pass_user(5), 
  3136 ;;  r               1    4[COMMON] char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    0[COMMON] int 
  3139 ;; Registers used:
  3140 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         2       0       0       0       0
  3147 ;;      Locals:         2       0       0       0       0
  3148 ;;      Temps:          2       0       0       0       0
  3149 ;;      Totals:         6       0       0       0       0
  3150 ;;Total ram usage:        6 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_Secuencia_Clave
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           psect	text232,local,class=CODE,delta=2,merge=1
  3159                           global __ptext232
  3160  0374                     __ptext232:
  3161                           psect	text232
  3162                           	file	"C:\Program Files (x86)\microchip\xc8\v1.00\sources\strcmp.c"
  3163                           	line	34
  3164                           	global	__size_of_strcmp
  3165  0029                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  3166                           	
  3167  0374                     _strcmp:	
  3168                           	opt	stack 5
  3169                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  3170                           ;strcmp@s1 stored from wreg
  3171  0374  00F5               	movwf	(strcmp@s1)
  3172                           	line	37
  3173                           	
  3174  0375                     l1066:	
  3175  0375  2B77               	goto	l1068
  3176                           	
  3177  0376                     l281:	
  3178                           	line	38
  3179  0376  2B77               	goto	l1068
  3180                           	
  3181  0377                     l280:	
  3182                           	line	37
  3183                           	
  3184  0377                     l1068:	
  3185  0377  0875               	movf	(strcmp@s1),w
  3186  0378  0084               	movwf	fsr
  3187  0379  1383               	bcf	status, 7	;select IRP bank0
  3188  037A  0800               	movf	indf,w
  3189  037B  00F2               	movwf	(??_strcmp+0)+0
  3190  037C  0870               	movf	(strcmp@s2),w
  3191  037D  0084               	movwf	fsr0
  3192  037E  3001               	movlw	01h
  3193  037F  07F0               	addwf	(strcmp@s2),f
  3194  0380  0300               	decf	indf,w
  3195  0381  3AFF               	xorlw	0ffh
  3196  0382  0772               	addwf	(??_strcmp+0)+0,w
  3197  0383  00F3               	movwf	(??_strcmp+1)+0
  3198  0384  0873               	movf	(??_strcmp+1)+0,w
  3199  0385  00F4               	movwf	(strcmp@r)
  3200  0386  08F4               	movf	((strcmp@r)),f
  3201  0387  1D03               	skipz
  3202  0388  2B8A               	goto	u441
  3203  0389  2B8B               	goto	u440
  3204  038A                     u441:
  3205  038A  2B96               	goto	l1072
  3206  038B                     u440:
  3207                           	
  3208  038B                     l1070:	
  3209  038B  0875               	movf	(strcmp@s1),w
  3210  038C  0084               	movwf	fsr0
  3211  038D  3001               	movlw	01h
  3212  038E  07F5               	addwf	(strcmp@s1),f
  3213  038F  0880               	movf	indf,f
  3214  0390  1D03               	skipz
  3215  0391  2B93               	goto	u451
  3216  0392  2B94               	goto	u450
  3217  0393                     u451:
  3218  0393  2B77               	goto	l1068
  3219  0394                     u450:
  3220  0394  2B96               	goto	l1072
  3221                           	
  3222  0395                     l283:	
  3223  0395  2B96               	goto	l1072
  3224                           	
  3225  0396                     l284:	
  3226                           	line	39
  3227                           	
  3228  0396                     l1072:	
  3229  0396  0874               	movf	(strcmp@r),w
  3230  0397  00F0               	movwf	(?_strcmp)
  3231  0398  01F1               	clrf	(?_strcmp+1)
  3232  0399  1BF0               	btfsc	(?_strcmp),7
  3233  039A  03F1               	decf	(?_strcmp+1),f
  3234  039B  2B9C               	goto	l285
  3235                           	
  3236  039C                     l1074:	
  3237                           	line	40
  3238                           	
  3239  039C                     l285:	
  3240  039C  0008               	return
  3241                           	opt stack 0
  3242                           GLOBAL	__end_of_strcmp
  3243  039D                     	__end_of_strcmp:
  3244                           	signat	_strcmp,8314
  3245                           	global	_LCD_String
  3246                           
  3247 ;; *************** function _LCD_String *****************
  3248 ;; Defined at:
  3249 ;;		line 50 in file "LCD.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  msg             1    wreg     PTR const unsigned char 
  3252 ;;		 -> STR_13(9), STR_12(10), STR_11(9), STR_10(10), 
  3253 ;;		 -> STR_9(12), STR_8(10), STR_7(11), STR_6(15), 
  3254 ;;		 -> STR_5(14), STR_4(14), STR_3(8), STR_2(14), 
  3255 ;;		 -> STR_1(11), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  msg             1    4[COMMON] PTR const unsigned char 
  3258 ;;		 -> STR_13(9), STR_12(10), STR_11(9), STR_10(10), 
  3259 ;;		 -> STR_9(12), STR_8(10), STR_7(11), STR_6(15), 
  3260 ;;		 -> STR_5(14), STR_4(14), STR_3(8), STR_2(14), 
  3261 ;;		 -> STR_1(11), 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;		None               void
  3264 ;; Registers used:
  3265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3271 ;;      Params:         0       0       0       0       0
  3272 ;;      Locals:         1       0       0       0       0
  3273 ;;      Temps:          1       0       0       0       0
  3274 ;;      Totals:         2       0       0       0       0
  3275 ;;Total ram usage:        2 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    1
  3278 ;; This function calls:
  3279 ;;		_LCD_Char
  3280 ;; This function is called by:
  3281 ;;		_Secuencia_Clave
  3282 ;;		_Logica_SensoresHall
  3283 ;;		_LCD_String_xy
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           psect	text233,local,class=CODE,delta=2,merge=1
  3287                           global __ptext233
  3288  0353                     __ptext233:
  3289                           psect	text233
  3290                           	file	"LCD.c"
  3291                           	line	50
  3292                           	global	__size_of_LCD_String
  3293  0021                     	__size_of_LCD_String	equ	__end_of_LCD_String-_LCD_String
  3294                           	
  3295  0353                     _LCD_String:	
  3296                           	opt	stack 4
  3297                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3298                           ;LCD_String@msg stored from wreg
  3299  0353  00F4               	movwf	(LCD_String@msg)
  3300                           	line	51
  3301                           	
  3302  0354                     l1240:	
  3303                           ;LCD.c: 51: while((*msg)!=0)
  3304  0354  2B66               	goto	l1246
  3305                           	
  3306  0355                     l121:	
  3307                           	line	53
  3308                           	
  3309  0355                     l1242:	
  3310                           ;LCD.c: 52: {
  3311                           ;LCD.c: 53: LCD_Char(*msg);
  3312  0355  0874               	movf	(LCD_String@msg),w
  3313  0356  0084               	movwf	fsr0
  3314  0357  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3315  035C  120A  118A  23F1   	fcall	_LCD_Char
              120A  118A         
  3316                           	line	54
  3317                           	
  3318  0361                     l1244:	
  3319                           ;LCD.c: 54: msg++;
  3320  0361  3001               	movlw	(01h)
  3321  0362  00F3               	movwf	(??_LCD_String+0)+0
  3322  0363  0873               	movf	(??_LCD_String+0)+0,w
  3323  0364  07F4               	addwf	(LCD_String@msg),f
  3324  0365  2B66               	goto	l1246
  3325                           	line	55
  3326                           	
  3327  0366                     l120:	
  3328                           	line	51
  3329                           	
  3330  0366                     l1246:	
  3331  0366  0874               	movf	(LCD_String@msg),w
  3332  0367  0084               	movwf	fsr0
  3333  0368  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3334  036D  3800               	iorlw	0
  3335  036E  1D03               	skipz
  3336  036F  2B71               	goto	u671
  3337  0370  2B72               	goto	u670
  3338  0371                     u671:
  3339  0371  2B55               	goto	l1242
  3340  0372                     u670:
  3341  0372  2B73               	goto	l123
  3342                           	
  3343  0373                     l122:	
  3344                           	line	57
  3345                           	
  3346  0373                     l123:	
  3347  0373  0008               	return
  3348                           	opt stack 0
  3349                           GLOBAL	__end_of_LCD_String
  3350  0374                     	__end_of_LCD_String:
  3351                           	signat	_LCD_String,4216
  3352                           	global	_LCD_Char
  3353                           
  3354 ;; *************** function _LCD_Char *****************
  3355 ;; Defined at:
  3356 ;;		line 36 in file "LCD.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  dat             1    wreg     unsigned char 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  dat             1    2[COMMON] unsigned char 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;		None               void
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3370 ;;      Params:         0       0       0       0       0
  3371 ;;      Locals:         1       0       0       0       0
  3372 ;;      Temps:          2       0       0       0       0
  3373 ;;      Totals:         3       0       0       0       0
  3374 ;;Total ram usage:        3 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_Secuencia_Clave
  3380 ;;		_LCD_String
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           psect	text234,local,class=CODE,delta=2,merge=1
  3384                           global __ptext234
  3385  03F1                     __ptext234:
  3386                           psect	text234
  3387                           	file	"LCD.c"
  3388                           	line	36
  3389                           	global	__size_of_LCD_Char
  3390  0034                     	__size_of_LCD_Char	equ	__end_of_LCD_Char-_LCD_Char
  3391                           	
  3392  03F1                     _LCD_Char:	
  3393                           	opt	stack 4
  3394                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3395                           ;LCD_Char@dat stored from wreg
  3396  03F1  00F2               	movwf	(LCD_Char@dat)
  3397                           	line	37
  3398                           	
  3399  03F2                     l1204:	
  3400                           ;LCD.c: 37: PORTD = (PORTD & 0x0f) | (0xF0 & dat);
  3401  03F2  30F0               	movlw	(0F0h)
  3402  03F3  0572               	andwf	(LCD_Char@dat),w
  3403  03F4  00F0               	movwf	(??_LCD_Char+0)+0
  3404  03F5  1283               	bcf	status, 5	;RP0=0, select bank0
  3405  03F6  1303               	bcf	status, 6	;RP1=0, select bank0
  3406  03F7  0808               	movf	(8),w	;volatile
  3407  03F8  390F               	andlw	0Fh
  3408  03F9  0470               	iorwf	0+(??_LCD_Char+0)+0,w
  3409  03FA  0088               	movwf	(8)	;volatile
  3410                           	line	38
  3411                           	
  3412  03FB                     l1206:	
  3413                           ;LCD.c: 38: PORTDbits.RD3 = 1;
  3414  03FB  1588               	bsf	(8),3	;volatile
  3415                           	line	39
  3416                           	
  3417  03FC                     l1208:	
  3418                           ;LCD.c: 39: PORTDbits.RD1 = 1;
  3419  03FC  1488               	bsf	(8),1	;volatile
  3420                           	line	40
  3421                           	
  3422  03FD                     l1210:	
  3423                           ;LCD.c: 40: _nop();
  3424  03FD  0000               	nop
  3425                           	line	41
  3426                           	
  3427  03FE                     l1212:	
  3428                           ;LCD.c: 41: PORTDbits.RD1 = 0;
  3429  03FE  1283               	bcf	status, 5	;RP0=0, select bank0
  3430  03FF  1303               	bcf	status, 6	;RP1=0, select bank0
  3431  0400  1088               	bcf	(8),1	;volatile
  3432                           	line	42
  3433                           	
  3434  0401                     l1214:	
  3435                           ;LCD.c: 42: _delay((unsigned long)((1)*(4000000/4000.0)));
  3436                           	opt asmopt_off
  3437  0401  30F9               movlw	249
  3438  0402  00F0               movwf	(??_LCD_Char+0)+0,f
  3439  0403                     u947:
  3440  0403  0000               	nop
  3441  0404  0BF0               decfsz	(??_LCD_Char+0)+0,f
  3442  0405  2C03               	goto	u947
  3443  0406  2C07               	nop2	;nop
  3444  0407  0000               	nop
  3445                           opt asmopt_on
  3446                           
  3447                           	line	43
  3448                           	
  3449  0408                     l1216:	
  3450                           ;LCD.c: 43: PORTD = (PORTD & 0x0f) | (dat<<4);
  3451  0408  0872               	movf	(LCD_Char@dat),w
  3452  0409  00F0               	movwf	(??_LCD_Char+0)+0
  3453  040A  3004               	movlw	04h
  3454  040B                     u665:
  3455  040B  1003               	clrc
  3456  040C  0DF0               	rlf	(??_LCD_Char+0)+0,f
  3457  040D  3EFF               	addlw	-1
  3458  040E  1D03               	skipz
  3459  040F  2C0B               	goto	u665
  3460  0410  1283               	bcf	status, 5	;RP0=0, select bank0
  3461  0411  1303               	bcf	status, 6	;RP1=0, select bank0
  3462  0412  0808               	movf	(8),w	;volatile
  3463  0413  390F               	andlw	0Fh
  3464  0414  0470               	iorwf	0+(??_LCD_Char+0)+0,w
  3465  0415  0088               	movwf	(8)	;volatile
  3466                           	line	44
  3467                           	
  3468  0416                     l1218:	
  3469                           ;LCD.c: 44: PORTDbits.RD1 = 1;
  3470  0416  1488               	bsf	(8),1	;volatile
  3471                           	line	45
  3472                           	
  3473  0417                     l1220:	
  3474                           ;LCD.c: 45: _nop();
  3475  0417  0000               	nop
  3476                           	line	46
  3477                           	
  3478  0418                     l1222:	
  3479                           ;LCD.c: 46: PORTDbits.RD1 = 0;
  3480  0418  1283               	bcf	status, 5	;RP0=0, select bank0
  3481  0419  1303               	bcf	status, 6	;RP1=0, select bank0
  3482  041A  1088               	bcf	(8),1	;volatile
  3483                           	line	47
  3484                           ;LCD.c: 47: _delay((unsigned long)((3)*(4000000/4000.0)));
  3485                           	opt asmopt_off
  3486  041B  3004               movlw	4
  3487  041C  00F1               movwf	((??_LCD_Char+0)+0+1),f
  3488  041D  30E4               	movlw	228
  3489  041E  00F0               movwf	((??_LCD_Char+0)+0),f
  3490  041F                     u957:
  3491  041F  0BF0               	decfsz	((??_LCD_Char+0)+0),f
  3492  0420  2C1F               	goto	u957
  3493  0421  0BF1               	decfsz	((??_LCD_Char+0)+0+1),f
  3494  0422  2C1F               	goto	u957
  3495  0423  0000               	nop
  3496                           opt asmopt_on
  3497                           
  3498                           	line	48
  3499                           	
  3500  0424                     l117:	
  3501  0424  0008               	return
  3502                           	opt stack 0
  3503                           GLOBAL	__end_of_LCD_Char
  3504  0425                     	__end_of_LCD_Char:
  3505                           	signat	_LCD_Char,4216
  3506                           psect	text235,local,class=CODE,delta=2,merge=1
  3507                           global __ptext235
  3508  0000                     __ptext235:
  3509                           	global	btemp
  3510  007E                     	btemp set 07Eh
  3511                           
  3512                           	DABS	1,126,2	;btemp
  3513                           	global	wtemp0
  3514  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     127
    Constant    17
    Data        21
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      8      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?_strcmp	int  size(1) Largest target is 0

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> password(BANK0[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_12(CODE[10]), STR_10(CODE[10]), STR_8(CODE[10]), STR_6(CODE[15]), 
		 -> STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[8]), STR_2(CODE[14]), 
		 -> STR_1(CODE[11]), 

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_13(CODE[9]), STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[10]), 
		 -> STR_9(CODE[12]), STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[15]), 
		 -> STR_5(CODE[14]), STR_4(CODE[14]), STR_3(CODE[8]), STR_2(CODE[14]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_Secuencia_Clave
    _LCD_Init->_LCD_Command
    _Logica_SensoresHall->_Secuencia_Clave
    _Secuencia_Clave->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char

Critical Paths under _main in BANK0

    _main->_Logica_SensoresHall
    _Logica_SensoresHall->_Secuencia_Clave

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2093
                                              5 BANK0      3     3      0
                           _LCD_Init
                          _LCD_Clear
                      _LCD_String_xy
                    _Secuencia_Clave
                _Logica_SensoresHall
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _Logica_SensoresHall                                  3     3      0    1091
                                              2 BANK0      3     3      0
                      _LCD_String_xy
                        _LCD_Command
                         _LCD_String
                          _LCD_Clear
                    _Secuencia_Clave
 ---------------------------------------------------------------------------------
 (2) _Secuencia_Clave                                      5     5      0     646
                                             10 COMMON     3     3      0
                                              0 BANK0      2     2      0
                      _LCD_String_xy
                            _keyfind
                        _LCD_Command
                           _LCD_Char
                             _strcmp
                          _LCD_Clear
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0      44
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_String_xy                                        5     3      2     268
                                              5 COMMON     5     3      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _keyfind                                              4     4      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     4      2      89
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     2      0      89
                                              3 COMMON     2     2      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
   _LCD_Clear
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _Secuencia_Clave
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _keyfind
     _LCD_Command
     _LCD_Char
     _strcmp
     _LCD_Clear
       _LCD_Command
     _LCD_String
       _LCD_Char
   _Logica_SensoresHall
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _LCD_Command
     _LCD_String
       _LCD_Char
     _LCD_Clear
       _LCD_Command
     _Secuencia_Clave
       _LCD_String_xy
         _LCD_Command
         _LCD_String
           _LCD_Char
       _keyfind
       _LCD_Command
       _LCD_Char
       _strcmp
       _LCD_Clear
         _LCD_Command
       _LCD_String
         _LCD_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      31       5       61.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      44      12        0.0%
ABS                  0      0      3F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       5       2        0.0%
EEDATA             100      0       0       0        0.0%


HI-TECH Software PICC Macro Assembler V1.00 build 12136 
Symbol Table                                                                                   Tue Mar 15 12:53:14 2022

                           pc 0002                  ?_LCD_Command 0070                            l70 05CC  
                          l71 05CF                            l80 0663                            l72 05D0  
                          l81 0674                            l73 05D0                            l65 0552  
                          l82 06AD                            l66 05B8                            l83 06AB  
                          l67 05CE                            l84 06AA                            l76 05D3  
                          l92 04C9                            l68 05C2                            l85 067E  
                          l77 05F1                            l93 0510                            l69 05CD  
                          l86 06A8                            l78 0625                            l94 0507  
                          l87 06A9                            l79 065B                            l95 050F  
                          l88 06AC                            l96 0510                            l89 06AD  
            ?_Secuencia_Clave 0070                            fsr 0004                   ?_LCD_String 0070  
                         l111 03F0                           l120 0366                           l121 0355  
                         l122 0373                           l114 0458                           l123 0373  
                         l131 0307                           l117 0424                           l126 03B2  
                         l127 03BF                           l128 03C5                           l161 06B7  
                         l170 0729                           l162 06B8                           l171 0721  
                         l163 06C4                           l180 0768                           l172 071B  
                         l164 06D0                           l181 0762                           l173 0728  
                         l165 06DE                           l190 07FF                           l174 0796  
                         l182 076F                           l166 06DF                           l191 07F1  
                         l183 0794                           l175 074C                           l167 06EB  
                         l280 0377                           l192 07C6                           l184 078C  
                         l176 0744                           l168 06F7                           l281 0376  
                         l193 07F0                           l185 0786                           l177 073E  
                         l169 0708                           l194 07DE                           l186 0793  
                         l178 074B                           l283 0395                           l195 07EF  
                         l187 0795                           l179 0770                           l284 0396  
                         l196 07F2                           l188 0797                           l285 039C  
                         l197 07F3                           l189 07AE                           u500 0719  
                         u501 0718                           u510 0727                           u511 0726  
                         u440 038B                           u600 07B4                           u520 073A  
                         u441 038A                           u601 07B3                           u521 0739  
                         u450 0394                           u530 074A                           u451 0393  
                         u531 0749                           u620 07CC                           u540 075D  
                         u460 06C3                           u700 0624                           u621 07CB  
                         u541 075C                           u461 06C2                           u701 0623  
                         u550 076E                           u470 06CF                           u710 0635  
                         u615 07B7                           u551 076D                           u471 06CE  
                         u711 0634                           u560 0781                           u480 06EA  
                         u720 0669                           u561 0780                           u481 06E9  
                         u721 0668                           u705 0620                           u570 0792  
                         u490 06F6                           u730 067D                           u635 07CF  
                         u571 0791                           u491 06F5                           u731 067C  
                         u580 079D                           u740 0488                           u645 07E1  
                         u581 079C                           u741 0487                           u670 0372  
                         u750 04CD                           u671 0371                           u655 043F  
                         u751 04CC                           u807 056D                           u680 03A5  
                         u760 057F                           u665 040B                           u681 03A4  
                         u817 0595                           u761 057E                           u690 05EF  
                         u770 05BC                           u595 07A0                           u907 0453  
                         u691 05EE                           u771 05BB                           u827 05B0  
                         u780 05C6                           u917 06D4                           u837 03CD  
                         u781 05C5                           u927 06FB                           u695 05EB  
                         u847 047C                           u937 07F9                           u857 04AF  
                         u947 0403                           u867 04ED                           u957 041F  
                         u877 064B                           u797 0545                           u887 06A0  
                         u897 0437                           _idx 003E                           _key 003F  
                         fsr0 0004                           indf 0000                   LCD_Char@dat 0072  
                        l1100 0708                          l1110 0721                          l1102 070F  
                        l1120 073A                          l1112 0729                          l1104 0713  
                        l1200 044B                          l1210 03FD                          l1130 0753  
                        l1122 073E                          l1114 072B                          l1106 0719  
                        l1202 044C                          l1220 0417                          l1212 03FE  
                        l1204 03F2                          l1140 0770                          l1132 0757  
                        l1124 0744                          l1116 0730                          l1108 071B  
                        l1300 066F                          l1222 0418                          l1214 0401  
                        l1206 03FB                          l1070 038B                          l1150 0786  
                        l1142 0772                          l1134 075D                          l1126 074C  
                        l1118 0734                          l1310 067E                          l1302 0670  
                        l1230 03D8                          l1216 0408                          l1208 03FC  
                        l1240 0354                          l1072 0396                          l1160 07AD  
                        l1152 078C                          l1144 0777                          l1136 0762  
                        l1128 074E                          l1080 06BD                          l1312 0683  
                        l1304 0671                          l1320 0466                          l1232 03DE  
                        l1224 03C6                          l1400 0564                          l1218 0416  
                        l1242 0355                          l1074 039C                          l1066 0375  
                        l1170 07C6                          l1162 07AE                          l1146 077B  
                        l1138 0768                          l1154 0797                          l1090 06E4  
                        l1082 06C4                          l1250 039F                          l1314 068E  
                        l1306 0673                          l1330 0482                          l1322 046C  
                        l1234 03E4                          l1226 03C9                          l1410 058A  
                        l1402 0567                          l1244 0361                          l1068 0377  
                        l1180 07EE                          l1172 07CC                          l1164 07B4  
                        l1156 079D                          l1148 0781                          l1092 06EB  
                        l1084 06C9                          l1076 06AE                          l1260 03BF  
                        l1252 03A5                          l1316 069A                          l1308 0674  
                        l1340 04A7                          l1332 0488                          l1324 0472  
                        l1236 03EA                          l1228 03D2                          l1420 05A1  
                        l1412 058D                          l1404 0574                          l1246 0366  
                        l1182 07F3                          l1174 07DC                          l1166 07C4  
                        l1158 07AC                          l1094 06F0                          l1086 06D0  
                        l1078 06B8                          l1190 0431                          l1254 03AB  
                        l1238 0301                          l1270 05F1                          l1262 05D3  
                        l1350 04C3                          l1342 04B5                          l1334 0489  
                        l1326 0475                          l1318 0459                          l1430 05C6  
                        l1422 05A6                          l1414 058E                          l1406 0579  
                        l1176 07DD                          l1168 07C5                          l1096 06F7  
                        l1088 06DF                          l1192 0432                          l1184 0426  
                        l1256 03B2                          l1248 039E                          l1280 0617  
                        l1272 05FB                          l1264 05DE                          l1360 04E5  
                        l1352 04CD                          l1344 04BA                          l1336 048E  
                        l1328 0476                          l1424 05A9                          l1416 058F  
                        l1408 057F                          l1178 07DE                          l1098 0700  
                        l1194 0435                          l1186 042F                          l1258 03B8  
                        l1290 0652                          l1274 0601                          l1282 0625  
                        l1266 05E2                          l1370 0501                          l1362 04F3  
                        l1354 04CE                          l1346 04BF                          l1338 049B  
                        l1426 05AA                          l1418 059C                          l1196 043C  
                        l1188 0430                          l1284 0635                          l1292 065B  
                        l1276 0607                          l1268 05F0                          l1372 0509  
                        l1364 04F8                          l1356 04D9                          l1348 04C2  
                        l1428 05BC                          l1380 0519                          l1198 044A  
                        l1294 0669                          l1286 063A                          l1278 0611  
                        l1366 04FD                          l1358 04DF                          l1390 0530  
                        l1382 051C                          l1374 0511                          l1296 066D  
                        l1288 0645                          l1368 0500                          l1392 053D  
                        l1384 0523                          l1376 0515                          l1298 066E  
                        l1394 054C                          l1386 0526                          l1378 0518  
                        l1396 0552                          l1388 052B                          l1398 0557  
                        STR_1 006A                          STR_2 0045                          STR_3 0091  
                        STR_4 0037                          STR_5 0029                          STR_6 001A  
                        STR_7 005F                          STR_8 0075                          STR_9 0053  
                        _main 0511            __size_of_LCD_Clear 0007                          btemp 007E  
                        start 0000                 _LCD_String_xy 039D              __end_of_LCD_Char 0425  
            __end_of_LCD_Init 03F1                         ?_main 0070                         STR_10 0075  
                       STR_11 007F                         STR_12 0075                         STR_13 0088  
                       _ANSEL 0188                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
             __end_of_keyfind 0800                   _wrong_count 003C                         pclath 000A  
                       status 0003                         wtemp0 007E           __size_of_LCD_String 0021  
              ?_LCD_String_xy 0075                  __end_of_main 05D3                        ??_main 004E  
           __end_of_LCD_Clear 0308   Keypad_Key_Press@keypad_deco 0009                        _ANSELH 0189  
            LCD_String_xy@msg 0076              LCD_String_xy@pos 0075              LCD_String_xy@row 0078  
                      _OSCCON 008F              Secuencia_Clave@i 0049                        _keypad 0020  
__size_of_Logica_SensoresHall 00B8                        _rowloc 0040          __size_of_LCD_Command 0034  
                      _strcmp 0374                        clrloop 0309                     ??_keyfind 0070  
                   ?_LCD_Char 0070                     ?_LCD_Init 0070               ??_LCD_String_xy 0077  
              __pcstackCOMMON 0070                  __pidataBANK0 0323                  ??_LCD_String 0073  
              _OPTION_REGbits 0081                    __pbssBANK0 0035                    ??_LCD_Char 0070  
                  ??_LCD_Init 0073            __end_of_LCD_String 0374                    __pmaintext 0511  
                     ?_strcmp 0070      __size_of_Secuencia_Clave 00DB                 LCD_String@msg 0074  
                     _col_loc 007D               __size_of_strcmp 0029                       _keyfind 06AE  
                   _LCD_Clear 0301          end_of_initialization 034F                       init_ram 0314  
         _Logica_SensoresHall 0459                LCD_Command@cmd 0072                    _value_pass 0042  
                     strcmp@r 0074          ?_Logica_SensoresHall 0070                     _PORTAbits 0005  
                   _PORTBbits 0006                     _PORTCbits 0007                     _PORTDbits 0008  
                  ?_LCD_Clear 0070             ??_Secuencia_Clave 007A             __size_of_LCD_Char 0034  
           __size_of_LCD_Init 002B                 ??_LCD_Command 0070         ??_Logica_SensoresHall 004B  
              __end_of_strcmp 039D           start_initialization 0338         __end_of_LCD_String_xy 03C6  
                 __pdataBANK0 0020                      ??_strcmp 0072           __end_of_LCD_Command 0459  
                 __pbssCOMMON 007D                 __pcstackBANK0 0049                   ??_LCD_Clear 0073  
                   __ptext230 0425                     __ptext231 06AE                     __ptext232 0374  
                   __ptext233 0353                     __ptext225 03C6                     __ptext234 03F1  
                   __ptext226 0459                     __ptext235 0000                     __ptext227 05D3  
                   __ptext228 0301                     __ptext229 039D                     __pstrings 0003  
                    ?_keyfind 0070         LCD_String_xy@location 0079                      _LCD_Char 03F1  
                    _LCD_Init 03C6                     _pass_user 0044                   _LCD_Command 0425  
                 __stringbase 0008               _Secuencia_Clave 05D3                     init_fetch 0310  
            __size_of_keyfind 0152                 __size_of_main 00C2                      _key_temp 0035  
                    _ok_count 003A                      clear_ram 0308                      _password 0030  
 __end_of_Logica_SensoresHall 0511                      _temp_col 0041       __end_of_Secuencia_Clave 06AE  
                  _LCD_String 0353                     stringcode 0003                   _value_passU 0043  
                    strcmp@s1 0075                      strcmp@s2 0070                      stringdir 0003  
                    stringtab 0003        __size_of_LCD_String_xy 0029  
