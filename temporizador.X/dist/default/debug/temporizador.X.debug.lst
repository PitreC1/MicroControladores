

HI-TECH Software PIC LITE Macro Assembler V1.00 build 12136 
                                                                                               Thu Mar 03 17:59:46 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 12136
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 12136"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "temp_test.c"
    43                           psect config,class=CONFIG,delta=2 ;# 
    44                           # 4 "temp_test.c"
    45  2007  E0D5               dw 0xFFFD & 0xFFF7 & 0xFFFF & 0xFFDF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFBFF & 0xF7FF & 0xEF
                                 FF ;# 
    46                           # 5 "temp_test.c"
    47                           psect config,class=CONFIG,delta=2 ;# 
    48                           # 5 "temp_test.c"
    49  2008  FFFF               dw 0xFFFF & 0xFFFF ;# 
    50                           	FNCALL	_main,___awmod
    51                           	FNROOT	_main
    52                           	FNCALL	intlevel1,_ISR_TIMER_0
    53                           	global	intlevel1
    54                           	FNROOT	intlevel1
    55                           	global	_display
    56                           psect	idataBANK0,class=CODE,space=0,delta=2
    57                           global __pidataBANK0
    58  0136                     __pidataBANK0:
    59                           	file	"temp_test.c"
    60                           	line	11
    61                           
    62                           ;initializer for _display
    63  0136  343F               	retlw	03Fh
    64  0137  3406               	retlw	06h
    65  0138  345B               	retlw	05Bh
    66  0139  34F4               	retlw	0F4h
    67  013A  3466               	retlw	066h
    68  013B  346D               	retlw	06Dh
    69  013C  347D               	retlw	07Dh
    70  013D  3407               	retlw	07h
    71  013E  347F               	retlw	07Fh
    72  013F  346F               	retlw	06Fh
    73                           	global	_count
    74                           	global	_count_ms
    75                           	global	_INTCONbits
    76  000B                     _INTCONbits	set	0xB
    77                           	global	_PORTAbits
    78  0005                     _PORTAbits	set	0x5
    79                           	global	_PORTB
    80  0006                     _PORTB	set	0x6
    81                           	global	_PORTD
    82  0008                     _PORTD	set	0x8
    83                           	global	_TMR0
    84  0001                     _TMR0	set	0x1
    85                           	global	_OPTION_REGbits
    86  0081                     _OPTION_REGbits	set	0x81
    87                           	global	_TRISD
    88  0088                     _TRISD	set	0x88
    89                           	global	_TRISA4
    90  042C                     _TRISA4	set	0x42C
    91                           	global	_TRISB0
    92  0430                     _TRISB0	set	0x430
    93                           	global	_ANSEL
    94  0188                     _ANSEL	set	0x188
    95                           	global	_ANSELH
    96  0189                     _ANSELH	set	0x189
    97                           	file	"C:\Users\CARLOS~1\AppData\Local\Temp\s7pc."
    98                           	line	#
    99                           psect cinit,class=CODE,delta=2
   100                           global start_initialization
   101  010F                     start_initialization:
   102                           
   103                           psect	bssCOMMON,class=COMMON,space=1
   104                           global __pbssCOMMON
   105  0076                     __pbssCOMMON:
   106  0076                     _count:
   107  0076                            ds      1
   108                           
   109  0077                     _count_ms:
   110  0077                            ds      1
   111                           
   112                           psect	dataBANK0,class=BANK0,space=1
   113                           global __pdataBANK0
   114  0020                     __pdataBANK0:
   115                           	file	"temp_test.c"
   116  0020                     _display:
   117  0020                            ds      10
   118                           
   119                           ; Clear objects allocated to COMMON
   120                           psect cinit,class=CODE,delta=2,merge=1
   121  010F  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   122  0110  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   123                           global btemp
   124                           psect inittext,class=CODE,delta=2
   125                           global init_fetch,btemp
   126                           ;	Called with low address in FSR and high address in W
   127  0123                     init_fetch:
   128  0123  087E               	movf btemp,w
   129  0124  008A               	movwf pclath
   130  0125  087F               	movf btemp+1,w
   131  0126  0082               	movwf pc
   132                           global init_ram
   133                           ;Called with:
   134                           ;	high address of idata address in btemp 
   135                           ;	low address of idata address in btemp+1 
   136                           ;	low address of data in FSR
   137                           ;	high address + 1 of data in btemp-1
   138  0127                     init_ram:
   139  0127  120A  118A  2123   	fcall init_fetch
              120A  118A         
   140  012C  0080               	movwf indf,f
   141  012D  0A84               	incf fsr,f
   142  012E  0804               	movf fsr,w
   143  012F  067D               	xorwf btemp-1,w
   144  0130  1903               	btfsc status,2
   145  0131  3400               	retlw 0
   146  0132  0AFF               	incf btemp+1,f
   147  0133  1903               	btfsc status,2
   148  0134  0AFE               	incf btemp,f
   149  0135  2927               	goto init_ram
   150                           ; Initialize objects allocated to BANK0
   151                           psect cinit,class=CODE,delta=2,merge=1
   152                           global init_ram, __pidataBANK0
   153  0111  1383               	bcf	status, 7	;select IRP bank0
   154  0112  302A               	movlw low(__pdataBANK0+10)
   155  0113  00FD               	movwf btemp-1,f
   156  0114  3001               	movlw high(__pidataBANK0)
   157  0115  00FE               	movwf btemp,f
   158  0116  3036               	movlw low(__pidataBANK0)
   159  0117  00FF               	movwf btemp+1,f
   160  0118  3020               	movlw low(__pdataBANK0)
   161  0119  0084               	movwf fsr,f
   162  011A  120A  118A  2127   	fcall init_ram
              120A  118A         
   163                           psect cinit,class=CODE,delta=2,merge=1
   164                           global end_of_initialization
   165                           
   166                           ;End of C runtime variable initialization code
   167                           
   168  011F                     end_of_initialization:
   169  011F  0183               clrf status
   170  0120  120A  118A  287D   ljmp _main	;jump to C main() function
   171                           psect	cstackCOMMON,class=COMMON,space=1
   172                           global __pcstackCOMMON
   173  0070                     __pcstackCOMMON:
   174                           	global	?_ISR_TIMER_0
   175  0070                     ?_ISR_TIMER_0:	; 0 bytes @ 0x0
   176                           	global	??_ISR_TIMER_0
   177  0070                     ??_ISR_TIMER_0:	; 0 bytes @ 0x0
   178                           	global	?_main
   179  0070                     ?_main:	; 2 bytes @ 0x0
   180  0070                     	ds	5
   181                           	global	??___awmod
   182  0075                     ??___awmod:	; 0 bytes @ 0x5
   183  0075                     	ds	1
   184                           psect	cstackBANK0,class=BANK0,space=1
   185                           global __pcstackBANK0
   186  002A                     __pcstackBANK0:
   187                           	global	?___awmod
   188  002A                     ?___awmod:	; 2 bytes @ 0x0
   189                           	global	___awmod@divisor
   190  002A                     ___awmod@divisor:	; 2 bytes @ 0x0
   191  002A                     	ds	2
   192                           	global	___awmod@dividend
   193  002C                     ___awmod@dividend:	; 2 bytes @ 0x2
   194  002C                     	ds	2
   195                           	global	___awmod@counter
   196  002E                     ___awmod@counter:	; 1 bytes @ 0x4
   197  002E                     	ds	1
   198                           	global	___awmod@sign
   199  002F                     ___awmod@sign:	; 1 bytes @ 0x5
   200  002F                     	ds	1
   201                           	global	??_main
   202  0030                     ??_main:	; 0 bytes @ 0x6
   203  0030                     	ds	2
   204                           ;!
   205                           ;!Data Sizes:
   206                           ;!    Strings     0
   207                           ;!    Constant    0
   208                           ;!    Data        10
   209                           ;!    BSS         2
   210                           ;!    Persistent  0
   211                           ;!    Stack       0
   212                           ;!
   213                           ;!Auto Spaces:
   214                           ;!    Space          Size  Autos    Used
   215                           ;!    COMMON           14      6       8
   216                           ;!    BANK0            80      8      18
   217                           ;!    BANK1            80      0       0
   218                           ;!    BANK3            96      0       0
   219                           ;!    BANK2            96      0       0
   220                           
   221                           ;!
   222                           ;!Pointer List with Targets:
   223                           ;!
   224                           ;!    ?___awmod	int  size(1) Largest target is 0
   225                           ;!
   226                           
   227                           
   228                           ;!
   229                           ;!Critical Paths under _main in COMMON
   230                           ;!
   231                           ;!    _main->___awmod
   232                           ;!
   233                           ;!Critical Paths under _ISR_TIMER_0 in COMMON
   234                           ;!
   235                           ;!    None.
   236                           ;!
   237                           ;!Critical Paths under _main in BANK0
   238                           ;!
   239                           ;!    _main->___awmod
   240                           ;!
   241                           ;!Critical Paths under _ISR_TIMER_0 in BANK0
   242                           ;!
   243                           ;!    None.
   244                           ;!
   245                           ;!Critical Paths under _main in BANK1
   246                           ;!
   247                           ;!    None.
   248                           ;!
   249                           ;!Critical Paths under _ISR_TIMER_0 in BANK1
   250                           ;!
   251                           ;!    None.
   252                           ;!
   253                           ;!Critical Paths under _main in BANK3
   254                           ;!
   255                           ;!    None.
   256                           ;!
   257                           ;!Critical Paths under _ISR_TIMER_0 in BANK3
   258                           ;!
   259                           ;!    None.
   260                           ;!
   261                           ;!Critical Paths under _main in BANK2
   262                           ;!
   263                           ;!    None.
   264                           ;!
   265                           ;!Critical Paths under _ISR_TIMER_0 in BANK2
   266                           ;!
   267                           ;!    None.
   268                           
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   271 ;;
   272                           
   273                           ;!
   274                           ;!Call Graph Tables:
   275                           ;!
   276                           ;! ---------------------------------------------------------------------------------
   277                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   278                           ;! ---------------------------------------------------------------------------------
   279                           ;! (0) _main                                                 2     2      0     433
   280                           ;!                                              6 BANK0      2     2      0
   281                           ;!                            ___awmod
   282                           ;! ---------------------------------------------------------------------------------
   283                           ;! (1) ___awmod                                              7     3      4     433
   284                           ;!                                              5 COMMON     1     1      0
   285                           ;!                                              0 BANK0      6     2      4
   286                           ;! ---------------------------------------------------------------------------------
   287                           ;! Estimated maximum stack depth 1
   288                           ;! ---------------------------------------------------------------------------------
   289                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   290                           ;! ---------------------------------------------------------------------------------
   291                           ;! (2) _ISR_TIMER_0                                          5     5      0       0
   292                           ;!                                              0 COMMON     5     5      0
   293                           ;! ---------------------------------------------------------------------------------
   294                           ;! Estimated maximum stack depth 2
   295                           ;! ---------------------------------------------------------------------------------
   296                           ;!
   297                           ;! Call Graph Graphs:
   298                           ;!
   299                           ;! _main (ROOT)
   300                           ;!   ___awmod
   301                           ;!
   302                           ;! _ISR_TIMER_0 (ROOT)
   303                           ;!
   304                           
   305                           ;! Address spaces:
   306                           
   307                           ;!Name               Size   Autos  Total    Cost      Usage
   308                           ;!BANK3               60      0       0       9        0.0%
   309                           ;!BITBANK3            60      0       0       8        0.0%
   310                           ;!SFR3                 0      0       0       4        0.0%
   311                           ;!BITSFR3              0      0       0       4        0.0%
   312                           ;!BANK2               60      0       0      11        0.0%
   313                           ;!BITBANK2            60      0       0      10        0.0%
   314                           ;!SFR2                 0      0       0       5        0.0%
   315                           ;!BITSFR2              0      0       0       5        0.0%
   316                           ;!BANK1               50      0       0       7        0.0%
   317                           ;!BITBANK1            50      0       0       6        0.0%
   318                           ;!SFR1                 0      0       0       2        0.0%
   319                           ;!BITSFR1              0      0       0       2        0.0%
   320                           ;!BANK0               50      8      12       5       22.5%
   321                           ;!BITBANK0            50      0       0       4        0.0%
   322                           ;!SFR0                 0      0       0       1        0.0%
   323                           ;!BITSFR0              0      0       0       1        0.0%
   324                           ;!COMMON               E      6       8       1       57.1%
   325                           ;!BITCOMMON            E      0       0       0        0.0%
   326                           ;!CODE                 0      0       0       0        0.0%
   327                           ;!DATA                 0      0      1B      12        0.0%
   328                           ;!ABS                  0      0      1A       3        0.0%
   329                           ;!NULL                 0      0       0       0        0.0%
   330                           ;!STACK                0      0       1       2        0.0%
   331                           ;!EEDATA             100      0       0       0        0.0%
   332                           
   333                           	global	_main
   334                           
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 13 in file "temp_test.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  2   32[COMMON] int 
   344 ;; Registers used:
   345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : 17F/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0
   353 ;;      Temps:          0       2       0       0       0
   354 ;;      Totals:         0       2       0       0       0
   355 ;;Total ram usage:        2 bytes
   356 ;; Hardware stack levels required when called:    2
   357 ;; This function calls:
   358 ;;		___awmod
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           psect	maintext,global,class=CODE,delta=2,split=1
   364                           global __pmaintext
   365  007D                     __pmaintext:
   366                           psect	maintext
   367                           	file	"temp_test.c"
   368                           	line	13
   369                           	global	__size_of_main
   370  0063                     	__size_of_main	equ	__end_of_main-_main
   371                           	
   372  007D                     _main:	
   373                           	opt	stack 6
   374                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   375                           	line	15
   376                           	
   377  007D                     l690:	
   378                           ;temp_test.c: 15: TRISB0 = 0;
   379  007D  1683               	bsf	status, 5	;RP0=1, select bank1
   380  007E  1303               	bcf	status, 6	;RP1=0, select bank1
   381  007F  1006               	bcf	(1072/8)^080h,(1072)&7	;volatile
   382                           	line	16
   383                           	
   384  0080                     l692:	
   385                           ;temp_test.c: 16: PORTB = 0;
   386  0080  1283               	bcf	status, 5	;RP0=0, select bank0
   387  0081  1303               	bcf	status, 6	;RP1=0, select bank0
   388  0082  0186               	clrf	(6)	;volatile
   389                           	line	17
   390                           ;temp_test.c: 17: ANSELH = 0x00;
   391  0083  1683               	bsf	status, 5	;RP0=1, select bank3
   392  0084  1703               	bsf	status, 6	;RP1=1, select bank3
   393  0085  0189               	clrf	(393)^0180h	;volatile
   394                           	line	19
   395                           	
   396  0086                     l694:	
   397                           ;temp_test.c: 19: INTCONbits.GIE = 0;
   398  0086  138B               	bcf	(11),7	;volatile
   399                           	line	20
   400                           	
   401  0087                     l696:	
   402                           ;temp_test.c: 20: OPTION_REGbits.T0CS = 0;
   403  0087  1683               	bsf	status, 5	;RP0=1, select bank1
   404  0088  1303               	bcf	status, 6	;RP1=0, select bank1
   405  0089  1281               	bcf	(129)^080h,5	;volatile
   406                           	line	21
   407                           	
   408  008A                     l698:	
   409                           ;temp_test.c: 21: OPTION_REGbits.PSA = 0;
   410  008A  1181               	bcf	(129)^080h,3	;volatile
   411                           	line	22
   412                           	
   413  008B                     l700:	
   414                           ;temp_test.c: 22: OPTION_REGbits.PS = 0b111;
   415  008B  3007               	movlw	(07h & ((1<<3)-1))<<0
   416  008C  0481               	iorwf	(129)^080h,f	;volatile
   417                           	line	23
   418                           	
   419  008D                     l702:	
   420                           ;temp_test.c: 23: TMR0 = 60;
   421  008D  303C               	movlw	(03Ch)
   422  008E  1283               	bcf	status, 5	;RP0=0, select bank0
   423  008F  1303               	bcf	status, 6	;RP1=0, select bank0
   424  0090  0081               	movwf	(1)	;volatile
   425                           	line	25
   426                           	
   427  0091                     l704:	
   428                           ;temp_test.c: 25: TRISD = 0x00;
   429  0091  1683               	bsf	status, 5	;RP0=1, select bank1
   430  0092  1303               	bcf	status, 6	;RP1=0, select bank1
   431  0093  0188               	clrf	(136)^080h	;volatile
   432                           	line	26
   433                           	
   434  0094                     l706:	
   435                           ;temp_test.c: 26: PORTD = 0x00;
   436  0094  1283               	bcf	status, 5	;RP0=0, select bank0
   437  0095  1303               	bcf	status, 6	;RP1=0, select bank0
   438  0096  0188               	clrf	(8)	;volatile
   439                           	line	28
   440                           	
   441  0097                     l708:	
   442                           ;temp_test.c: 28: TRISA4 = 1;
   443  0097  1683               	bsf	status, 5	;RP0=1, select bank1
   444  0098  1303               	bcf	status, 6	;RP1=0, select bank1
   445  0099  1605               	bsf	(1068/8)^080h,(1068)&7	;volatile
   446                           	line	29
   447                           	
   448  009A                     l710:	
   449                           ;temp_test.c: 29: ANSEL = 0x00;
   450  009A  1683               	bsf	status, 5	;RP0=1, select bank3
   451  009B  1703               	bsf	status, 6	;RP1=1, select bank3
   452  009C  0188               	clrf	(392)^0180h	;volatile
   453                           	line	31
   454                           	
   455  009D                     l712:	
   456                           ;temp_test.c: 31: INTCONbits.T0IF = 0;
   457  009D  110B               	bcf	(11),2	;volatile
   458                           	line	32
   459                           	
   460  009E                     l714:	
   461                           ;temp_test.c: 32: INTCONbits.T0IE = 1;
   462  009E  168B               	bsf	(11),5	;volatile
   463                           	line	33
   464                           	
   465  009F                     l716:	
   466                           ;temp_test.c: 33: INTCONbits.PEIE = 1;
   467  009F  170B               	bsf	(11),6	;volatile
   468                           	line	34
   469                           	
   470  00A0                     l718:	
   471                           ;temp_test.c: 34: INTCONbits.GIE = 1;
   472  00A0  178B               	bsf	(11),7	;volatile
   473  00A1  28A2               	goto	l720
   474                           	line	36
   475                           ;temp_test.c: 36: while (1) {
   476                           	
   477  00A2                     l33:	
   478                           	line	38
   479                           	
   480  00A2                     l720:	
   481                           ;temp_test.c: 38: PORTD = display[count % 10];
   482  00A2  300A               	movlw	low(0Ah)
   483  00A3  1283               	bcf	status, 5	;RP0=0, select bank0
   484  00A4  1303               	bcf	status, 6	;RP1=0, select bank0
   485  00A5  00AA               	movwf	(?___awmod)
   486  00A6  3000               	movlw	high(0Ah)
   487  00A7  00AB               	movwf	((?___awmod))+1
   488  00A8  0876               	movf	(_count),w
   489  00A9  00B0               	movwf	(??_main+0)+0+0
   490  00AA  01B1               	clrf	(??_main+0)+0+1
   491  00AB  0830               	movf	0+(??_main+0)+0,w
   492  00AC  00AC               	movwf	0+(?___awmod)+02h
   493  00AD  0831               	movf	1+(??_main+0)+0,w
   494  00AE  00AD               	movwf	1+(?___awmod)+02h
   495  00AF  120A  118A  2015   	fcall	___awmod
              120A  118A         
   496  00B4  1283               	bcf	status, 5	;RP0=0, select bank0
   497  00B5  1303               	bcf	status, 6	;RP1=0, select bank0
   498  00B6  082A               	movf	(0+(?___awmod)),w
   499  00B7  3E20               	addlw	_display&0ffh
   500  00B8  0084               	movwf	fsr0
   501  00B9  1383               	bcf	status, 7	;select IRP bank0
   502  00BA  0800               	movf	indf,w
   503  00BB  0088               	movwf	(8)	;volatile
   504                           	line	39
   505                           	
   506  00BC                     l722:	
   507                           ;temp_test.c: 39: _delay((unsigned long)((20)*(8000000/4000.0)));
   508                           	opt asmopt_off
   509  00BC  3034               movlw	52
   510  00BD  00B1               movwf	((??_main+0)+0+1),f
   511  00BE  30F1               	movlw	241
   512  00BF  00B0               movwf	((??_main+0)+0),f
   513  00C0                     u357:
   514  00C0  0BB0               	decfsz	((??_main+0)+0),f
   515  00C1  28C0               	goto	u357
   516  00C2  0BB1               	decfsz	((??_main+0)+0+1),f
   517  00C3  28C0               	goto	u357
   518  00C4  28C5               	nop2
   519                           opt asmopt_on
   520                           
   521                           	line	44
   522                           	
   523  00C5                     l724:	
   524                           ;temp_test.c: 44: if (!PORTAbits.RA4) {
   525  00C5  1283               	bcf	status, 5	;RP0=0, select bank0
   526  00C6  1303               	bcf	status, 6	;RP1=0, select bank0
   527  00C7  1A05               	btfsc	(5),4	;volatile
   528  00C8  28CA               	goto	u251
   529  00C9  28CB               	goto	u250
   530  00CA                     u251:
   531  00CA  28A2               	goto	l720
   532  00CB                     u250:
   533                           	line	45
   534                           	
   535  00CB                     l726:	
   536                           ;temp_test.c: 45: _delay((unsigned long)((50)*(8000000/4000.0)));
   537                           	opt asmopt_off
   538  00CB  3082               movlw	130
   539  00CC  00B1               movwf	((??_main+0)+0+1),f
   540  00CD  30DD               	movlw	221
   541  00CE  00B0               movwf	((??_main+0)+0),f
   542  00CF                     u367:
   543  00CF  0BB0               	decfsz	((??_main+0)+0),f
   544  00D0  28CF               	goto	u367
   545  00D1  0BB1               	decfsz	((??_main+0)+0+1),f
   546  00D2  28CF               	goto	u367
   547  00D3  28D4               	nop2
   548                           opt asmopt_on
   549                           
   550                           	line	46
   551                           	
   552  00D4                     l728:	
   553                           ;temp_test.c: 46: count = 0;
   554  00D4  01F6               	clrf	(_count)
   555                           	line	47
   556                           ;temp_test.c: 47: TMR0 = 60;
   557  00D5  303C               	movlw	(03Ch)
   558  00D6  1283               	bcf	status, 5	;RP0=0, select bank0
   559  00D7  1303               	bcf	status, 6	;RP1=0, select bank0
   560  00D8  0081               	movwf	(1)	;volatile
   561                           	line	48
   562                           	
   563  00D9                     l730:	
   564                           ;temp_test.c: 48: INTCONbits.T0IF = 0;
   565  00D9  110B               	bcf	(11),2	;volatile
   566  00DA  28A2               	goto	l720
   567                           	line	49
   568                           	
   569  00DB                     l34:	
   570  00DB  28A2               	goto	l720
   571                           	line	50
   572                           	
   573  00DC                     l35:	
   574                           	line	36
   575  00DC  28A2               	goto	l720
   576                           	
   577  00DD                     l36:	
   578                           	line	52
   579                           	
   580  00DD                     l37:	
   581                           	global	start
   582  00DD  120A  118A  2812   	ljmp	start
   583                           	opt stack 0
   584                           GLOBAL	__end_of_main
   585  00E0                     	__end_of_main:
   586                           	signat	_main,90
   587                           	global	___awmod
   588                           
   589 ;; *************** function ___awmod *****************
   590 ;; Defined at:
   591 ;;		line 5 in file "C:\Program Files (x86)\microchip\xc8\v1.00\sources\awmod.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  divisor         2    0[BANK0 ] int 
   594 ;;  dividend        2    2[BANK0 ] int 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  sign            1    5[BANK0 ] unsigned char 
   597 ;;  counter         1    4[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2    0[BANK0 ] int 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       4       0       0       0
   608 ;;      Locals:         0       2       0       0       0
   609 ;;      Temps:          1       0       0       0       0
   610 ;;      Totals:         1       6       0       0       0
   611 ;;Total ram usage:        7 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           psect	text89,local,class=CODE,delta=2,merge=1
   621                           global __ptext89
   622  0015                     __ptext89:
   623                           psect	text89
   624                           	file	"C:\Program Files (x86)\microchip\xc8\v1.00\sources\awmod.c"
   625                           	line	5
   626                           	global	__size_of___awmod
   627  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
   628                           	
   629  0015                     ___awmod:	
   630                           	opt	stack 6
   631                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   632                           	line	8
   633                           	
   634  0015                     l732:	
   635  0015  1283               	bcf	status, 5	;RP0=0, select bank0
   636  0016  1303               	bcf	status, 6	;RP1=0, select bank0
   637  0017  01AF               	clrf	(___awmod@sign)
   638                           	line	9
   639  0018  1FAD               	btfss	(___awmod@dividend+1),7
   640  0019  281B               	goto	u261
   641  001A  281C               	goto	u260
   642  001B                     u261:
   643  001B  2825               	goto	l736
   644  001C                     u260:
   645                           	line	10
   646                           	
   647  001C                     l734:	
   648  001C  09AC               	comf	(___awmod@dividend),f
   649  001D  09AD               	comf	(___awmod@dividend+1),f
   650  001E  0AAC               	incf	(___awmod@dividend),f
   651  001F  1903               	skipnz
   652  0020  0AAD               	incf	(___awmod@dividend+1),f
   653                           	line	11
   654  0021  01AF               	clrf	(___awmod@sign)
   655  0022  1403               	bsf	status,0
   656  0023  0DAF               	rlf	(___awmod@sign),f
   657  0024  2825               	goto	l736
   658                           	line	12
   659                           	
   660  0025                     l340:	
   661                           	line	13
   662                           	
   663  0025                     l736:	
   664  0025  1FAB               	btfss	(___awmod@divisor+1),7
   665  0026  2828               	goto	u271
   666  0027  2829               	goto	u270
   667  0028                     u271:
   668  0028  282F               	goto	l740
   669  0029                     u270:
   670                           	line	14
   671                           	
   672  0029                     l738:	
   673  0029  09AA               	comf	(___awmod@divisor),f
   674  002A  09AB               	comf	(___awmod@divisor+1),f
   675  002B  0AAA               	incf	(___awmod@divisor),f
   676  002C  1903               	skipnz
   677  002D  0AAB               	incf	(___awmod@divisor+1),f
   678  002E  282F               	goto	l740
   679                           	
   680  002F                     l341:	
   681                           	line	15
   682                           	
   683  002F                     l740:	
   684  002F  082B               	movf	(___awmod@divisor+1),w
   685  0030  042A               	iorwf	(___awmod@divisor),w
   686  0031  1903               	skipnz
   687  0032  2834               	goto	u281
   688  0033  2835               	goto	u280
   689  0034                     u281:
   690  0034  286B               	goto	l758
   691  0035                     u280:
   692                           	line	16
   693                           	
   694  0035                     l742:	
   695  0035  01AE               	clrf	(___awmod@counter)
   696  0036  1403               	bsf	status,0
   697  0037  0DAE               	rlf	(___awmod@counter),f
   698                           	line	17
   699  0038  2845               	goto	l748
   700                           	
   701  0039                     l344:	
   702                           	line	18
   703                           	
   704  0039                     l744:	
   705  0039  3001               	movlw	01h
   706                           	
   707  003A                     u295:
   708  003A  1003               	clrc
   709  003B  0DAA               	rlf	(___awmod@divisor),f
   710  003C  0DAB               	rlf	(___awmod@divisor+1),f
   711  003D  3EFF               	addlw	-1
   712  003E  1D03               	skipz
   713  003F  283A               	goto	u295
   714                           	line	19
   715                           	
   716  0040                     l746:	
   717  0040  3001               	movlw	(01h)
   718  0041  00F5               	movwf	(??___awmod+0)+0
   719  0042  0875               	movf	(??___awmod+0)+0,w
   720  0043  07AE               	addwf	(___awmod@counter),f
   721  0044  2845               	goto	l748
   722                           	line	20
   723                           	
   724  0045                     l343:	
   725                           	line	17
   726                           	
   727  0045                     l748:	
   728  0045  1FAB               	btfss	(___awmod@divisor+1),(15)&7
   729  0046  2848               	goto	u301
   730  0047  2849               	goto	u300
   731  0048                     u301:
   732  0048  2839               	goto	l744
   733  0049                     u300:
   734  0049  284B               	goto	l750
   735                           	
   736  004A                     l345:	
   737  004A  284B               	goto	l750
   738                           	line	21
   739                           	
   740  004B                     l346:	
   741                           	line	22
   742                           	
   743  004B                     l750:	
   744  004B  082B               	movf	(___awmod@divisor+1),w
   745  004C  022D               	subwf	(___awmod@dividend+1),w
   746  004D  1D03               	skipz
   747  004E  2851               	goto	u315
   748  004F  082A               	movf	(___awmod@divisor),w
   749  0050  022C               	subwf	(___awmod@dividend),w
   750  0051                     u315:
   751  0051  1C03               	skipc
   752  0052  2854               	goto	u311
   753  0053  2855               	goto	u310
   754  0054                     u311:
   755  0054  285C               	goto	l754
   756  0055                     u310:
   757                           	line	23
   758                           	
   759  0055                     l752:	
   760  0055  082A               	movf	(___awmod@divisor),w
   761  0056  02AC               	subwf	(___awmod@dividend),f
   762  0057  082B               	movf	(___awmod@divisor+1),w
   763  0058  1C03               	skipc
   764  0059  03AD               	decf	(___awmod@dividend+1),f
   765  005A  02AD               	subwf	(___awmod@dividend+1),f
   766  005B  285C               	goto	l754
   767                           	
   768  005C                     l347:	
   769                           	line	24
   770                           	
   771  005C                     l754:	
   772  005C  3001               	movlw	01h
   773                           	
   774  005D                     u325:
   775  005D  1003               	clrc
   776  005E  0CAB               	rrf	(___awmod@divisor+1),f
   777  005F  0CAA               	rrf	(___awmod@divisor),f
   778  0060  3EFF               	addlw	-1
   779  0061  1D03               	skipz
   780  0062  285D               	goto	u325
   781                           	line	25
   782                           	
   783  0063                     l756:	
   784  0063  3001               	movlw	low(01h)
   785  0064  02AE               	subwf	(___awmod@counter),f
   786  0065  1D03               	btfss	status,2
   787  0066  2868               	goto	u331
   788  0067  2869               	goto	u330
   789  0068                     u331:
   790  0068  284B               	goto	l750
   791  0069                     u330:
   792  0069  286B               	goto	l758
   793                           	
   794  006A                     l348:	
   795  006A  286B               	goto	l758
   796                           	line	26
   797                           	
   798  006B                     l342:	
   799                           	line	27
   800                           	
   801  006B                     l758:	
   802  006B  082F               	movf	(___awmod@sign),w
   803  006C  1D03               	skipz
   804  006D  286F               	goto	u340
   805  006E  2875               	goto	l762
   806  006F                     u340:
   807                           	line	28
   808                           	
   809  006F                     l760:	
   810  006F  09AC               	comf	(___awmod@dividend),f
   811  0070  09AD               	comf	(___awmod@dividend+1),f
   812  0071  0AAC               	incf	(___awmod@dividend),f
   813  0072  1903               	skipnz
   814  0073  0AAD               	incf	(___awmod@dividend+1),f
   815  0074  2875               	goto	l762
   816                           	
   817  0075                     l349:	
   818                           	line	29
   819                           	
   820  0075                     l762:	
   821  0075  082D               	movf	(___awmod@dividend+1),w
   822  0076  01AB               	clrf	(?___awmod+1)
   823  0077  07AB               	addwf	(?___awmod+1)
   824  0078  082C               	movf	(___awmod@dividend),w
   825  0079  01AA               	clrf	(?___awmod)
   826  007A  07AA               	addwf	(?___awmod)
   827                           
   828  007B  287C               	goto	l350
   829                           	
   830  007C                     l764:	
   831                           	line	30
   832                           	
   833  007C                     l350:	
   834  007C  0008               	return
   835                           	opt stack 0
   836                           GLOBAL	__end_of___awmod
   837  007D                     	__end_of___awmod:
   838                           	signat	___awmod,8314
   839                           	global	_ISR_TIMER_0
   840                           
   841 ;; *************** function _ISR_TIMER_0 *****************
   842 ;; Defined at:
   843 ;;		line 54 in file "temp_test.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;		None               void
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0
   859 ;;      Temps:          5       0       0       0       0
   860 ;;      Totals:         5       0       0       0       0
   861 ;;Total ram usage:        5 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		Interrupt level 1
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           psect	text90,local,class=CODE,delta=2,merge=1
   870                           global __ptext90
   871  00E0                     __ptext90:
   872                           psect	text90
   873                           	file	"temp_test.c"
   874                           	line	54
   875                           	global	__size_of_ISR_TIMER_0
   876  002F                     	__size_of_ISR_TIMER_0	equ	__end_of_ISR_TIMER_0-_ISR_TIMER_0
   877                           	
   878  00E0                     _ISR_TIMER_0:	
   879                           	opt	stack 6
   880                           ; Regs used in _ISR_TIMER_0: [wreg+status,2+status,0]
   881                           psect	intentry,class=CODE,delta=2
   882                           global __pintentry
   883  0004                     __pintentry:
   884                           global interrupt_function
   885  0004                     interrupt_function:
   886                           	global saved_w
   887  007E                     	saved_w	set	btemp+0
   888  0004  00FE               	movwf	saved_w
   889  0005  0E03               	swapf	status,w
   890  0006  00F1               	movwf	(??_ISR_TIMER_0+1)
   891  0007  0804               	movf	fsr0,w
   892  0008  00F2               	movwf	(??_ISR_TIMER_0+2)
   893  0009  080A               	movf	pclath,w
   894  000A  00F3               	movwf	(??_ISR_TIMER_0+3)
   895  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   896  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   897  000D  087F               	movf	btemp+1,w
   898  000E  00F4               	movwf	(??_ISR_TIMER_0+4)
   899  000F  120A  118A  28E0   	ljmp	_ISR_TIMER_0
   900                           psect	text90
   901                           	line	55
   902                           	
   903  00E0                     i1l558:	
   904                           ;temp_test.c: 55: if (INTCONbits.T0IE && INTCONbits.T0IF) {
   905  00E0  1E8B               	btfss	(11),5	;volatile
   906  00E1  28E3               	goto	u2_21
   907  00E2  28E4               	goto	u2_20
   908  00E3                     u2_21:
   909  00E3  2904               	goto	i1l43
   910  00E4                     u2_20:
   911                           	
   912  00E4                     i1l560:	
   913  00E4  1D0B               	btfss	(11),2	;volatile
   914  00E5  28E7               	goto	u3_21
   915  00E6  28E8               	goto	u3_20
   916  00E7                     u3_21:
   917  00E7  2904               	goto	i1l43
   918  00E8                     u3_20:
   919                           	line	56
   920                           	
   921  00E8                     i1l562:	
   922                           ;temp_test.c: 56: PORTB = ~PORTB;
   923  00E8  0986               	comf	(6),f	;volatile
   924                           	line	57
   925                           	
   926  00E9                     i1l564:	
   927                           ;temp_test.c: 57: count_ms++;
   928  00E9  3001               	movlw	(01h)
   929  00EA  00F0               	movwf	(??_ISR_TIMER_0+0)+0
   930  00EB  0870               	movf	(??_ISR_TIMER_0+0)+0,w
   931  00EC  07F7               	addwf	(_count_ms),f
   932                           	line	58
   933                           	
   934  00ED                     i1l566:	
   935                           ;temp_test.c: 58: if(count_ms == 20){
   936  00ED  0877               	movf	(_count_ms),w
   937  00EE  3A14               	xorlw	014h
   938  00EF  1D03               	skipz
   939  00F0  28F2               	goto	u4_21
   940  00F1  28F3               	goto	u4_20
   941  00F2                     u4_21:
   942  00F2  2900               	goto	i1l572
   943  00F3                     u4_20:
   944                           	line	59
   945                           	
   946  00F3                     i1l568:	
   947                           ;temp_test.c: 59: if (++count == 100) {
   948  00F3  3001               	movlw	(01h)
   949  00F4  00F0               	movwf	(??_ISR_TIMER_0+0)+0
   950  00F5  0870               	movf	(??_ISR_TIMER_0+0)+0,w
   951  00F6  07F6               	addwf	(_count),f
   952  00F7  0876               	movf	((_count)),w
   953  00F8  3A64               	xorlw	064h
   954  00F9  1D03               	skipz
   955  00FA  28FC               	goto	u5_21
   956  00FB  28FD               	goto	u5_20
   957  00FC                     u5_21:
   958  00FC  28FE               	goto	i1l42
   959  00FD                     u5_20:
   960                           	line	60
   961                           	
   962  00FD                     i1l570:	
   963                           ;temp_test.c: 60: count = 0;
   964  00FD  01F6               	clrf	(_count)
   965                           	line	61
   966                           	
   967  00FE                     i1l42:	
   968                           	line	62
   969                           ;temp_test.c: 61: }
   970                           ;temp_test.c: 62: count_ms = 0;
   971  00FE  01F7               	clrf	(_count_ms)
   972  00FF  2900               	goto	i1l572
   973                           	line	63
   974                           	
   975  0100                     i1l41:	
   976                           	line	64
   977                           	
   978  0100                     i1l572:	
   979                           ;temp_test.c: 63: }
   980                           ;temp_test.c: 64: TMR0 = 60;
   981  0100  303C               	movlw	(03Ch)
   982  0101  0081               	movwf	(1)	;volatile
   983                           	line	65
   984                           	
   985  0102                     i1l574:	
   986                           ;temp_test.c: 65: INTCONbits.T0IF = 0;
   987  0102  110B               	bcf	(11),2	;volatile
   988  0103  2904               	goto	i1l43
   989                           	line	66
   990                           	
   991  0104                     i1l40:	
   992                           	line	67
   993                           	
   994  0104                     i1l43:	
   995  0104  0874               	movf	(??_ISR_TIMER_0+4),w
   996  0105  00FF               	movwf	btemp+1
   997  0106  0873               	movf	(??_ISR_TIMER_0+3),w
   998  0107  008A               	movwf	pclath
   999  0108  0872               	movf	(??_ISR_TIMER_0+2),w
  1000  0109  0084               	movwf	fsr0
  1001  010A  0E71               	swapf	(??_ISR_TIMER_0+1)^0FFFFFF80h,w
  1002  010B  0083               	movwf	status
  1003  010C  0EFE               	swapf	saved_w,f
  1004  010D  0E7E               	swapf	saved_w,w
  1005  010E  0009               	retfie
  1006                           	opt stack 0
  1007                           GLOBAL	__end_of_ISR_TIMER_0
  1008  010F                     	__end_of_ISR_TIMER_0:
  1009                           	signat	_ISR_TIMER_0,88
  1010                           psect	text91,local,class=CODE,delta=2,merge=1
  1011                           global __ptext91
  1012  0000                     __ptext91:
  1013                           	global	btemp
  1014  007E                     	btemp set 07Eh
  1015                           
  1016                           	DABS	1,126,2	;btemp
  1017                           	global	wtemp0
  1018  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      8      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___awmod	int  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _ISR_TIMER_0 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awmod

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     433
                                              6 BANK0      2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     433
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_TIMER_0                                          5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod

 _ISR_TIMER_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       1       2        0.0%
EEDATA             100      0       0       0        0.0%


HI-TECH Software PICC Macro Assembler V1.00 build 12136 
Symbol Table                                                                                   Thu Mar 03 17:59:46 2022

                   pc 0002                    l33 00A2                    l34 00DB                    l35 00DC  
                  l36 00DD                    l37 00DD                    fsr 0004                   l340 0025  
                 l341 002F                   l350 007C                   l342 006B                   l343 0045  
                 l344 0039                   l345 004A                   l346 004B                   l347 005C  
                 l348 006A                   l700 008B                   l349 0075                   l710 009A  
                 l702 008D                   l720 00A2                   l712 009D                   l704 0091  
                 l730 00D9                   l722 00BC                   l714 009E                   l706 0094  
                 l740 002F                   l732 0015                   l724 00C5                   l716 009F  
                 l708 0097                   l750 004B                   l742 0035                   l734 001C  
                 l726 00CB                   l718 00A0                   l760 006F                   l752 0055  
                 l744 0039                   l736 0025                   l728 00D4                   l762 0075  
                 l754 005C                   l746 0040                   l738 0029                   l690 007D  
                 l764 007C                   l756 0063                   l748 0045                   l692 0080  
                 l758 006B                   l694 0086                   l696 0087                   l698 008A  
                 u300 0049                   u301 0048                   u310 0055                   u311 0054  
                 u330 0069                   u250 00CB                   u331 0068                   u315 0051  
                 u251 00CA                   u340 006F                   u260 001C                   u325 005D  
                 u261 001B                   u270 0029                   u271 0028                   u280 0035  
                 u281 0034                   u357 00C0                   u295 003A                   u367 00CF  
                 fsr0 0004                   indf 0000          ___awmod@sign 002F                  i1l40 0104  
                i1l41 0100                  i1l42 00FE                  i1l43 0104                  _TMR0 0001  
                u2_20 00E4                  u2_21 00E3                  u3_20 00E8                  u3_21 00E7  
                u4_20 00F3                  u4_21 00F2                  u5_20 00FD                  u5_21 00FC  
                _main 007D                  btemp 007E                  start 0012                 ?_main 0070  
     __end_of___awmod 007D                 _ANSEL 0188                 i1l560 00E4                 i1l570 00FD  
               i1l562 00E8                 i1l572 0100                 i1l564 00E9                 i1l574 0102  
               i1l566 00ED                 i1l558 00E0                 i1l568 00F3                 _PORTB 0006  
               _PORTD 0008                 _TRISD 0088                 _count 0076                 pclath 000A  
               status 0003                 wtemp0 007E          ?_ISR_TIMER_0 0070          __end_of_main 00E0  
              ??_main 0030                _ANSELH 0189                _TRISB0 0430                _TRISA4 042C  
           ??___awmod 0075       ___awmod@divisor 002A       ___awmod@counter 002E                saved_w 007E  
      __pcstackCOMMON 0070          __pidataBANK0 0136        _OPTION_REGbits 0081            __pmaintext 007D  
          __pintentry 0004  __size_of_ISR_TIMER_0 002F               ___awmod 0015               _display 0020  
    ___awmod@dividend 002C  end_of_initialization 011F               init_ram 0127             _PORTAbits 0005  
 start_initialization 010F           __pdataBANK0 0020           __pbssCOMMON 0076         __pcstackBANK0 002A  
       ??_ISR_TIMER_0 0070              ?___awmod 002A     interrupt_function 0004   __end_of_ISR_TIMER_0 010F  
           init_fetch 0123      __size_of___awmod 0068              __ptext90 00E0              __ptext91 0000  
            __ptext89 0015              _count_ms 0077         __size_of_main 0063           _ISR_TIMER_0 00E0  
          _INTCONbits 000B              intlevel1 0000  
